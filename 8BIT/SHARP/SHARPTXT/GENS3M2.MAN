%3
                %1%2G E N S 3 M 2%2%1
                %1%2=============%2%1

1.- P©¡kazy editoru

    I n,m ........ Re‘im vkl d n¡ s automatick˜m ‡¡slov n¡m,
		   kde n je po‡ tek a m je inkrement.
 	INST ..... Ukon‡uje re‘im vkl d n¡.
    L n,m ........ V˜pis programu od © dku n po r dek m.
	INST ..... Ukon‡uje listing.
	ostatn¡ .. Pokra‡ov n¡ v listingu.
    K n .......... Nastav¡ po‡et zobrazen˜ch © dk– pro p©¡-
		   kazy L a W.
    D n,m ........ Vyma‘e © dky od n do m.
    M n,m,l ...... Zkop¡ruje © dky od n do m p©ed © dek l.
    N n,m ........ P©e‡¡sluje zdrojov˜ text; n je po‡ tek
		   a m je inkrement.
    F n,m,f,s .... Hled n¡ ©etˆzce f od © dku n po © dek m.
		   Jeli nalezen, nahrad¡ se ©etˆzcem s.
    E n,m ........ Postupn  oprava programu od © dku n po 
		   © dek m.
    V ............ Ud v  celkov˜ po‡et © dk– v text.bufferu.
    W n,m ........ V˜pis programu na tisk rnˆ. Parametry 
		   jsou stejn‚ jako u p©¡kazu L.
    X ............ Zobraz¡ hexadecim lnˆ po‡ te‡n¡ a konco-
		   vou adresu textov‚ho bufferu.
    S,,D ......... Zmˆn¡ separ tor "," za separ tor "D".
      ............ Vyma‘e vkl dan˜ © dek.
      ............ Vyma‘e vkl dan˜ znak.
    B ............ N vrat do monitoru.
    C ............ Definice velikosti bufferu INCLUDE a 
		   MACRO. MACRO buffer m  implicitnˆ nulovou
		   hodnotu (nutno nadefinovat p©ed zapo‡et¡m
		   pr ce).
    Q ............ Zpackuje zdrojov˜ text (po p©e‡¡slov n¡).
    ALPHA ........ P©ep¡na‡ mal˜ch a velk˜ch p¡smen.


2.- Subpovely © dkov‚ho editoru - po p©¡kazu E

    space ........ Nastav¡ kurzor na dal¨¡ znak.
    DEL .......... Nastav¡ kurzor na p©edchoz¡ znak.
      ............ Nasatav¡ kurzor na n sleduj¡c¡ tab. pozici.
    CR ........... Ukon‡en¡ v¨ech zmˆn na editovan‚m © dku.
    Q ............ Zru¨¡ v¨echny doposud proveden‚ opravy na
		   © dku a vr t¡ © dek zpˆt do text. bufferu.
    R ............ Zru¨¡ v¨echny proveden‚ zmˆny na © dku.
    L ............ Zobraz¡ zbytek editovan‚ho © dku.
    K ............ Vyma‘e znak na kter‚m je nastaven kurzor.
    Z ............ Zru¨¡ v¨e od kurzoru do konce © dku.
    F ............ Hled  dal¨¡ v˜skyt ©etˆzce zadan‚ho p©¡-
		   kazem F.
    S ............ Nahrad¡ nalezen˜ ©etˆzec f ©etˆzcem s a
		   pokra‡uje v hled n¡ dal¨¡ho v˜skytu.
    I ............ Umo‘¤uje vlo‘it znaky na pozici kurzoru.
	CR ....... Ukon‡uje re‘im vkl d n¡ znak–.
    X ............ Vkl d n¡ znak– na konec © dku.
    C ............ Zmˆna znaku na kter‚m je nastaven kurzor.

                         - 2 -

3.- P©eklad (assembling) a spu¨tˆn¡ strojov‚ho k¢du

    A ............ Provede assemblaci od prvn¡ho © dku 
	    	   textov‚ho bufferu.
    table size: .. D‚lka n vˆ¨t¡ + 4 bajty na ka‘d‚ n vˆ¨t¡.
  	CR ....... Norm ln¡ velikost.
    options ...... Volba p©eklada‡e.
	1 ........ V˜pis tabulky symbolick˜ch adres.
	2 ........ Nevytv ©¡ strojov˜ k¢d.
	4 ........ Nevypisuje protokol o p©ekladu
	8 ........ V˜pis protokolu o p©ekladu na tisk rnu.
       16 ........ Um¡st¡ stroj. k¢d za tabulku symbol.adres
       32 ........ Neprov d¡ se kontrola um¡stˆn¡ stroj.k¢du.
			Volby p©eklada‡e je mo‘no s‡¡tat.
	SHFT+BRK.. P©eru¨en¡ p©ekladu.
	E ........ N vrat do editoru resp. mo‘nost editace
		   © dku, na kter‚m se p©eklad zastavil.
	ostatn¡ .. Pokra‡ov n¡ v p©ekladu.
    R ............ Spu¨tˆn¡ p©elo‘en‚ho strojov‚ho k¢du od
		   adresy dan‚ pseudoinstrukc¡ ENT.


4.- P©¡kazy pro manipulaci s magnetofonem

    P n,m,s ...... SAVE obsahu text.bufferu od © dku n po
		   © dek m se jm‚nem souboru s. Pokud chceme
		   pozdˆji pou‘¡vat p©¡kaz *F, je nutno pro-
		   v‚st SAVE p©¡kazem T.
    G,,s ......... MERGE souboru ke konci textov‚ho bufferu.
    T n,m,s ...... SAVE obsahu textov‚ho bufferu od © dku n
		   po © dek m ve tvaru vhodn‚m pro pou‘it¡
		   v p©¡kaze *F.


5.- Form tov n¡ textov‚ho bufferu znakem v 1.sloupci

    ; ............ Koment ©ov˜ © dek (nep©ekl d  se).
    * ............ P©¡kaz pro ©¡zen¡ assembleru.
    CR ........... ž dek je ignorov n.
    space ........ Dal¨¡ znak mus¡ b˜t mnemotechnika Z80.


6.- Dal¨¡ pou‘¡van‚ zkratky

    $ ............ Nastaven¡ programov‚ho ‡¡ta‡e (PC).
    1026 ......... Dekadick  konstanta.
    #403 ......... Hexadecim ln¡ konstanta.
    %0101 ........ Bin rn¡ konstanta.
    "A" .......... ASCII znak.
    LBL2 ......... Symbolick  adresa, n vˆ¨t¡, konstanta.
    & ............ Logicky AND.
    ! ............ Logicky OR.
    @ ............ Logicky XOR.
    * ............ Sou‡in.
    / ............ Pod¡l.
    ? ............ Zbytek po dˆlen¡ (modulo).


                         - 3 -

7.- Pseudoinstrukce

    ORG x ........ Nastaven¡ logick‚ho um¡stˆn¡ stroj. k¢du.
    EQU x ........ P©i©ad¡ hodnotu n vˆ¨t¡.
    DEFB x ....... Definice hodnoty d‚lky 1 bajt.
    DEFW x ....... Definice hodnoty d‚lky 2 bajty.
    DEFM "alfa" .. Definice ©etˆzce znak–.
    DEFS x ....... Rezervuje x bajt– v pamˆti.
    ENT x ........ Nastav¡ adresu PC pro spu¨tˆn¡ p©elo‘e-
		   n‚ho strojov‚ho k¢du.
    IF podm¡nka .. Podm¡nˆn‚ prov dˆn¡ p©ekladu. Nen¡ dovo-
                   leno zahn¡zdˆn¡.
 	ELSE ..... Nesplnˆn¡ t‚to podm¡nky.
    END .......... Konec zdrojov‚ho textu ur‡en‚ho k p©ekladu.


8.- Makroinstrukce

    MAC .......... Uv d¡ se za n zvem MACRA bez form ln¡ch
		   parametr–. Tyto se ud vaj¡ p©¡mo v ins-
		   trukc¡ch nap©. LD A,=0 ; kde =0 je for-
		   m ln¡ parametr (ASCII znak - podstatn‚ 
	 	   jsou ni‘¨¡ 4 bity). Vol n¡ je prov dˆno
		   ud n¡m n zvu MACRA s uveden¡m aktu ln¡ch
		   (skute‡n˜ch) parametr–.
    ENDM ......... Konec definice makroinstrukce.
		   P©ed definic¡ makroinstrukc¡ je t©eba de-
		   finovat m¡sto v MACRO bufferu p©¡kazem C
		   (10 bajt– na © dek).

		  P©¡klad:	ROUTIN	MAC
					LD     A,=0
					LD     BC,=1
					OUT    (C),A
					ENDM
		  vol n¡:		ROUTIN 14,#6CF
		  provede:		LD     A,14
					LD     BC,#6CF
					OUT    (C),A


9.- P©¡kazy pro ©¡zen¡ p©ekladu v textov‚m bufferu

    *E ........... Vlo‘¡ 3 pr zdn‚ © dky.
    *H s ......... Vytiskne hlavi‡ku s na za‡ tek protokolu
		   o p©ekladu.
    *S ........... Zastav¡ v˜pis protokolu o p©ekladu. Po-
		   kra‡ov n¡ stiskem libovoln‚ kl vesy.
    *L+ .......... V˜pis protokolu zapnut.
    *L- .......... V˜pis protokolu vypnut.
    *D+ .......... Hodnota ‡¡ta‡e je zobrazena dekadicky.
    *D- .......... Hodnota ‡¡ta‡e je zobrazena hexadecim.
    *C+ .......... V˜pis p©elo‘en‚ho strojov‚ho k¢du.
    *C- .......... Potla‡en¡ v˜pisu p©elo‘en‚ho stroj. k¢du.
    *M+ .......... V˜pis obsahu makroinstrukce.
    *M- .......... Potla‡en¡ v˜pisu obsahu makroinstrukce.
    *F s ......... Za©ad¡ do assembleru textov˜ soubor se
		   jm‚nem s, kter˜ byl p©edt¡m uchov n p©¡-
		   kazem T. P©eklada‡ i uchovan˜ zdrojov˜
		   text mus¡ m¡t tut‚‘ d‚lku buffer size.


                         - 4 -

Dodatek:

ž¡d¡c¡ k¢dy zad van‚ p©es kl vesu CTRL jsou funk‡n¡.
Tato verze GENSu ji‘ pracuje pod re‘imem MZ-800 ve standard-
n¡m k¢du ASCII bez mo‘nosti p©epnut¡ na k¢d po‡¡ta‡e SHARP.
Odpojeny jsou p©itom ve¨ker‚ ROM pamˆti a tud¡‘ m  daleko
vˆt¨¡ pamˆŸ a to jak pro vlastn¡ zdrojov˜ text, tak i pro
strojov˜ k¢d. Fyzicky je tento GENS um¡stˆn v RAM od adresy
0000H. Adresa pro hork˜ (warm) start je 1200H resp. 0000H
(CTRL + reset), pro start studen˜ (cold) 1212H.


10.- Chybov  hl ¨en¡

    * ERROR * 1 ....... chyba v kontextu v dan‚m © dku
    * ERROR * 2 ....... nezn m  mnemonika
    * ERROR * 3 ....... chybnˆ formulovan˜ p©¡kazov˜ © dek
    * ERROR * 4 ....... v¡cen sobnˆ definovan˜ symbol
    * ERROR * 5 ....... © dek obsahuje nedovolen˜ znak, tj.
			znak, kter˜ je v dan‚m kontextu
			neplatn˜
    * ERROR * 6 ....... nedovolen˜ operand
    * ERROR * 7 ....... pou‘it˜ symbol je rezervovan‚ slovo
    * ERROR * 8 ....... neshoda registru (mismatch)
    * ERROR * 9 ....... mnoho registr– v p©¡kazu
    * ERROR * 10 ...... v˜raz pou‘it˜ jako 8 bitov˜ m  hod-
			notu vˆt¨¡ ne‘ 255
    * ERROR * 11 ...... instrukce JP (IX+n) a JP (IY+n) 
			nejsou povoleny
    * ERROR * 12 ...... chyba v uspo© d n¡ assemblerov‚ho
			povelu
    * ERROR * 13 ...... nedovolen  p©edbˆ‘n  reference, tj.
			pou‘it¡ EQU pro dosud nedefinovan˜
			symbol
    * ERROR * 14 ...... dˆlen¡ nulou
    * ERROR * 15 ...... p©eplnˆn¡ p©i n soben¡

    BAD ORG !    ...... byl proveden ORG pro adresu, kter 
			zasahuje do GENSu, textov‚ho souboru
			nebo tabulky symbol–, ©¡zen¡ se vrac¡
			do editoru
    OUT OF TABLE SPACE ! ..... vyskytne se p©i prvn¡m pr–bˆhu,
			       pokud tabulka symbol– m  nedos-
			       tate‡nou velikost, ©¡zen¡ se 
			       okam‘itˆ vrac¡ do editoru
    BAD MEMORY ! ...... zobraz¡ se, kdy‘ nen¡ prostor pro
			dal¨¡ text, tj. konec textu se bl¡‘¡
			k RAMTOP, st vaj¡c¡ textov˜ soubor
			nebo jeho ‡ st by se mˆla ulo‘it
			na kazetu

