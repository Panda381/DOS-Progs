%3

     %1%2M I K R O  -  P A S C A L%2%1
     %1%2=========================%2%1


1.- —vodn¡ informace
    ----------------

MIKRO - Pascal je verz¡ Turbo - Pascalu V 3.0 firmy Borland.
Z interpretace na MZ-800 bez disketov‚ jednotky vypl˜vaj¡ 
nˆkter  omezen¡, kter‚ jsou pops ny d le v textu.

€innost po zaveden¡:

    Na ot zku INIT SCREEN 1 - 4 mo‘nost volby:

    1 - 40 znak– na © dek    4 barvy  \
    2 - 40 znak– na © dek   16 barev   odpov¡d  parametru
    3 - 80 znak– na © dek    2 barvy   INIT "CRT:Mx" BASICu
    4 - 80 znak– na © dek    4 barvy  /

    Potom se zadaj¡ barvy tisku, pozad¡ a lowvideo.

Z kladn¡ MENU
-------------

W  - volba pracovn¡ho souboru  - pokud chceme nov˜ soubor, 
     stisknout SHIFT/BREAK na po‘adavek PLAY.

E  - Editace pracovn¡ho souboru - pokud nen¡ v pamˆi, p©ed-
     ch z¡ automaticky funkce W.

C  - P©eklad pracovn¡ho souboru.

R  - Spu¨tˆn¡ p©elo‘en‚ho programu - pokud nebyl p©elo‘en,
     p©edch z¡ automaticky funkce C.

T  - V˜pis pracovn¡ho souboru na LPT:.

M  - Aktivace vestavˆn‚ho monitoru.

F  - P©ep¡n n¡ typu pracovn¡ho souboru MIKRO/FET.

O  - Volba ‡innosti p©ekladu.

Od verze 111188 je modul MIKRO.MSG integr ln¡ sou‡ st¡ p©e-
klada‡e a nezav d¡ se proto z magnetofonov‚ p sky. Podle 
odpovˆdina dotaz zda vlo‘it chybov‚ zpr vy se buƒ aktivuje
nebo ne.

                         - 2 -


Editor
------
ovl d n¡ kurzoru:

   o znak vlevo	 	CTRL-S		¨ipka vlevo
   o znak vpravo	CTRL-D		¨ipka vpravo
   o slovo vlevo	CTRL-A		[ F3 ]
   o slovo vpravo	CTRL-F		[ F4 ]
   o © dek vzh–ru	CTRL-E		¨ipka vzh–ru
   o © dek dol–		CTRL-X		¨ipka dol–
   o str nku vzh–ru	CTRL-R		SHIFT+¨ipka vzh–ru
   o str nku dol–	CTRL-C		SHIFT+¨ipka dol–
   na za‡ tek © dku	CTRL-Q S	SHIFT+¨ipka vlevo
   na konec © dku	CTRL-Q D	SHIFT+¨ipka vpravo
   na za‡ tek obrazovky	CTRL-Q E	
   na konec obrazovky	CTRL-Q X
   na za‡ tek souboru	CTRL-Q R
   na konec souboru	CTRL-Q C
   na p©ede¨lou pozici	CTRL-Q P

p©¡kazy vkl d n¡ a maz n¡:

    vkl d n¡/p©episov n¡ CTRL-V		INS
    vlo‘en¡ © dku	CTRL-N		SHIFT+INS
    vymaz n¡ znaku	DELETE		DEL
    vymaz n¡ slova 	CTRL-T
    vymaz n¡ © dku	CTRL-Y		SHIFT+DEL
    vymaz n¡ do konce ©.CTRL-Q Y	[ F2 ]

p©¡kazy pro pr ci s bloky:

    vyzna‡en¡ za‡.bloku	CTRL-K B
    vyzna‡en¡ konce bl.	CTRL-K K
    kop¡rov n¡ bloku	CTRL-K C
    p©esun bloku	CTRL-K V
    vymaz n¡ bloku	CTRL-K Y
    ‡ten¡ bloku ze soub.CTRL-K R
    z pis bloku do soub.CTRL-K W
    kurzor na za‡.bloku CTRL-Q B
    kurzor na konec bl. CTRL-Q K
    zobraz.bloku Z/V	CTRL-K H

p©¡kazy vyhled v n¡ a nahrazov n¡:

    vyhled v n¡ ©etˆzce	CTRL-Q F
    nahrazen¡ ©etˆzce	CTRL-Q A
    opakov n¡ p©¡kazu	CTRL-L
    zru¨en¡ p©¡kazu	CTRL-U

ostatn¡ p©¡kazy:

    ukon‡en¡ editace	CTRL-K D	[ F1 ]
    obnoven¡ © dku	CTRL-Q L
    zmˆna odsazov n¡	CTRL-Q I
    tabel tor		CTRL-I		TAB

                         - 3 -

Volby pro vyhled v n¡ a nahrazov n¡:

    volba:
    B	hled n¡ smˆrem zpˆt
    G	hled n¡ v cel‚m souboru
    N	nahrazen¡ bez dotazu
    U 	ignorov n¡ rozd¡lu mezi mal˜m a velk˜m p¡smenem
    W  	vyhled v n¡ jen cel˜ch slov
    n   vyhled n¡ n-t‚ho v˜skytu ©etˆzce


2.- Monitor
    -------

p©¡kazy monitoru:

    Dadr1[,adr2]	v˜pis £seku pamˆti od adresy adr1 po
			adresu adr2. Nen¡-li uvedena adr2,
			vyp¡¨e se automaticky 160 bajt–.
			Zastaven¡ v˜pisu             CTRL-S
			Zru¨en¡ zastaven‚ho v˜pisu   CTRL-C
    
    Madr1		- modifikov n¡ obsahu pamˆti od 
			adresy adr1, ukon‡en¡ modifikace za-
			d n¡m 'k'.

    Fadr1,adr2.xx	- zaplnˆn¡ £seku pamˆti od adr1 po 
			adr2 bajtem xx (hexadec.)

    Tadr1,adr2,adr3	- p©esun £seku pamˆti od adr1 po 
			adr2 na adr3

    Gadr1		- vyvol n¡ podprogramu na adr1, pro
			© dn˜ n vrat mus¡ z–stat z sobn¡k 
			na stejn‚ £rovni

    L[adr]		- zaveden¡ programu (dat) od adr; 
			pokud nen¡ adresa uvedena, zavede se
			od adresy v z hlav¡

    Sadr1,adr2,adr3,filename	- ulo‘en¡ £seku pamˆti od 
				adr1 do adr2 na p sku pod
				jm‚nem filename, adr3 je
				ulo‘ena do z hlav¡ jako 
				startovac¡ adresa.

    R			- n vrat do z kladn¡ho menu


3.- Volby kompilace
    ---------------

Kompilace do pamˆti - volba M  ; nevytv ©¡ se soubor na
				 magn.p sce

Kompilace na magn.p sku - volba C  ; na magnetickou p sku se
				     zap¡¨e knihovna PASCALU
				     +BIOS, potom s provede
				     p©eklad a zap¡¨e se v˜-
				     sledn˜ program.
                         - 4 -

P©ed z pisem BIOS, p©ed vlastn¡m p©ekladem a p©ed z pisem 
programu se na displeji objev¡ zpr va Set tape ... , ‡ek  se
na CR. V tomto okam‘iku je mo‘n‚ prov‚st v˜mˆnu p sky, pokud
pou‘¡v me p©i p©ekladu direktivu {*I jm‚no souboru} pro 
vkl d n¡ ‡ sti textu z magnetofonov‚ p sky.

Kompilace na magn. p sku - volba H ; na magn. p sku se zap¡-
				     ¨e pouze v˜sledn˜ pro-
				     gram.
Takto vytvo©en˜ program je mo‘n‚ provozovat pod syst‚mem vy-
tvo©en˜m volbou C. Po ukon‡en¡ programu z–stane syst‚m funk-
‡n¡ a je mo‘n‚ zav‚st a spustit dal¨¡ program (uveden¡m 
jm‚na).


Struktura programu na magn. p sce

Program COM na magn. p sce se skl d  ze 4 ‡ st¡:

			d‚lka		zav dˆc¡ adresa
1.- LOADER		00D6		2BA8
2.- BDOS + BIOS		25E0		DA00
3.- Knihovna PASCALu	2033		0100
4.- Vlastn¡ program	????		????

Program CHN obsahuje jen ‡ st 4.

    Obsazen¡ pamˆti programem:

    0000 - 00FF		pracovn¡ oblast syst‚mu
    0100 - 2032		knihovna Pascalu
    2033 - cca 7FF7	p©eklada‡ PASCAL - v soub.COM voln‚
    7FF8 - nnnn		zdrojov˜ text - v souboru COM voln‚
    nnnn - D5FF		p©elo‘en˜ program + HELP + promˆnn‚
    D600 - FBFF		BDOS + BIOS
    FC00 - FFDF		p©¡padn‚ p©ekr˜vaj¡c¡ programy
 
Volnou oblast v programu COM je mo‘no vyu‘¡t pro um¡stˆn¡ 
absolutn¡ch promˆnn˜ch. M¡sto pro c¡lov˜ program je mo‘n‚
zvˆt¨it pou‘it¡m direktivy { *I soubor } p©eklada‡e pro mi-
nimalizaci velikosti zdrojov‚ho textu v pamˆti.


4.- Restart zad©en‚ho programu
    --------------------------

P©i bˆhu programu za volby p©edpokladu M, t.j. p©eklada‡ je 
p©¡tomn˜ v pamˆti, je mo‘n‚ pou‘¡t tla‡¡tek CTRL+RESET pro
nov‚ nastartov n¡ p©eklada‡e.


                         - 5 -

5.- Omezen¡ a roz¨¡©en¡ v–‡i p©¡ru‡ce
    ---------------------------------

    Videorutiny
    -----------

nejsou funk‡n¡ procedury.

INSLINE, DELLINE

je doplnˆna procedura

PAL (x,y); p©i‡em‘ x je ‡¡slo palety 0...3
	    	   y je ‡¡slo barvy 0...15
	   paleta  0 odpov¡d  barvˆ pozad¡
		   1 odpov¡d  barvˆ lowvideo
		   2 odpov¡d  barvˆ highvideo
		   3 odpov¡d  barvˆ normvideo

    Zpracov n¡ souboru
    ------------------

nejsou funk‡n¡ procedury

SEEK, FLUSH, ERASE, RENAME, CHAIN, EXECUTE a funkce FILESIZE

D le nen¡ mo‘n‚ po‘¡vat proceduru OVERLAY.

Je mo‘n‚ sou‡asnˆ pracovat jen s jedn¡m souborem, tzn. mezi
p©¡kazy RESET (REWRITE) a CLOSE pro jeden soubor nen¡ mo‘n‚
pou‘¡t p©¡kazy pro jin˜ soubor (nen¡ kontrolov no - pou‘it¡
vede k nedefinovan˜m v˜sledk–m).


    Form ty soubor– na magn. p sce
    ------------------------------

Zdrojov‚ i datov‚ soubory na magn.p sce jsou ve form tu BSD
s d‚lkou datov‚ oblasti 8 virtu ln¡ch sektor–, t.j. 1024 B.
Blok je doplnˆn na za‡ tku 2 bajtov˜m ‡¡slem bloku (posledn¡
blok FFFF).
Z toho vypl˜v  probl‚m p©i kop¡rov n¡ zdrojov˜ch text–, kter‚
se nedaj¡ kop¡rovat ‘ dn˜m bˆ‘n˜m kop¡r kem. Bohu‘el kazeta 
se mus¡ pokusit imitovat disketov˜ p©¡tup (aspo¤ sekven‡n¡),
tak‘e nen¡ jin  mo‘nost.


    Soubory ve form tu MZ-800
    -------------------------

Pro zpracov n¡ soubor– ve form tu MZ-800 se pou‘¡v  p©¡kaz
BDOS (12, adr( LAB));

p©i‡em‘ LAB je pole o struktu©e:

LAB = record  
	      opByte    : byte;
	      fileName  : array [1..17] of char;
	      fileSize  : integer;
	      loadAddr  : integer;
              startAddr : integer;
	      comment   : array [1..104] of char;
      end;
                         - 6 -

opByte = k¢d operace  1...na‡ten¡ n vˆ¨t¡ do pole LAB
		      2...na‡ten¡ bloku (podle adres v LAB)
		      3...z pis n vˆ¨t¡ (zap¡¨e se LAB)
		      4...z pis bloku (podle adres v LAB)

Dal¨¡ £daje odpov¡daj¡ n vˆ¨t¡ form tu MZ-800.


    P©¡kaz type
    -----------

Byl doplnˆn p©¡kaz TYPE pro v˜pis pracovn¡ho souboru na 
tisk rnu.


    Soubory ve form tu editoru FET
    ------------------------------

Mikro od verze 101088 umo‘¤uje zpracov n¡ textov˜ch soubor–
vytvo©en˜ch editorem FET. P©echod do tohoto re‘imu se provede
volbou F z kladn¡ho menu. Volba je indikov na ‡¡slem jednotky
F v Logged drive. P©echod zpˆt do z kladn¡ho re‘imu je opˆ-
tovn˜m stisknut¡m F. Indikace B v Logged drive.
V re‘imu zpracov n¡ soubor– FET je mo‘n‚ pou‘¡vat jen p©¡kazy
W pro p©e‡ten¡ souboru a S pro z pis souboru na kazetu. Pro
pt ci se soubory (vkl d n¡ do textu; direktiva *I p©eklada‡e
atd.) je nutn‚ pou‘¡vat soubory v z kladn¡m tvaru.
POZOR!!! V re‘imu souboru FET nen¡ kontrolov no, zda se sou-
bor vejde do p©idˆlen‚ pamˆti (kdy‘ se nevejde - p©ep¡¨e BDOS
a n sleduje odchod).
Dal¨¡m omezen¡m je to, ‘e syst‚m nekontroluje u souboru FET 
jm‚no souboru - p©e‡te se prvn¡ soubor na p sce.


    —daje re ln‚ho ‡asu
    -------------------

Jsou definov ny procedury pro nastaven¡ re ln‚ho ‡asu a 
zji¨tˆn¡ re ln‚ho ‡asu.
 
   SETIM (pole) nastaven¡ ‡asu
   
   GETIM (pole) zji¨tˆn¡ ‡asu

Pole je promˆnn  pops na jako array [1..3] of byte

V prvku pole [1] se p©ed vaj¡ hodiny
	     [2]   	      minuty
	     [3] 	      sekundy

P©¡klad nastaven¡ ‡asu na 21:12:00

        ...............
	pole [1] := 21;
	pole [2] := 12;
	pole [3] := 00;
	setim (pole);


                         - 7 -

    Problematika tisk rny
    ---------------------

Mikro Pascal pracuje se standardn¡m ASCII k¢dem. Pro p©ipo-
jen¡ tisk rny jsou uva‘ov ny dva typy dialog–:

Dialog 1       ---------------+           +------------
	   Data Strobe	      |           | 
			      +-----------+

					   +------------
	   Busy				   |
	      -----------------------------+

Dialog 2      ----------------+            +-------------
           Data Strobe        |            |
			      +------------+

				  +-----------------------
	   Busy		          |
	     ---------------------+

Dialog 1 pou‘¡vaj¡ tisk rny s vyrovn vac¡ pamˆt¡ nap©. D100;
Robotron K6313/14. Dialog 2 pou‘¡v  nap©. ploter MZ-1P16.

Dialog		adresa na CMT	adresa pamˆŸ	obsah

   1		   9C71		   EC71		00 00
   2		   9C71		   EC71		20 F8

Konverze mal˜ch p¡smen do k¢du SHARP:

Na adrese 9ACC (CMT) EACC (pamˆŸ) 01 pokud po‘adujeme kon-
verzi (standardnˆ 00).

Dod van  verze je s dialogem 1 bez transformace.

Adresou CMT se rozum¡ adresa, na kter‚ je nutn‚ zmodifikovat
program po nat hnut¡ do programu TURBO COPY.


    Zaj¡mav‚ adresy
    ---------------

aktivn¡ border p©i ‡ten¡ MP

E991 [9991] F8
neaktivn¡   FF

Zpracov n¡ magn. p sek 2:1

adresa prg.	adresa mp.	1:1	1:2

E79B		979B		4C	20
E7A1		97A1		18	0C
E7A5		97A5		69	34

Barva tisku F9EB
mˆn¡ se pou‘it¡m normvideo, lowvideo, highvideo

Vzor kurzoru je na adres ch FA06 - FA0D.

Na adrese FA0E  - FF = kurzor se zobrazuje
		  00 = kurzor se nezobrazuje                         - 8 -

6.- MIKRO a z kladn¡ grafika
    ------------------------

Pro mo‘nost pou‘it¡ z kladn¡ch grafick˜ch element– v syst‚mu
MIKRO byl vytvo©en p©ekr˜vaj¡c¡ modul MIKRO-GRAF, kter˜
umo‘¤uje pou‘¡v n¡ p©¡kaz–:

	PLOT	- pro vynesen¡ bodu
	UNPLOT  - pro zru¨en¡ bodu
	LINE	- pro vynesen¡ £se‡ky
	BLINE	- pro zru¨en¡ £se‡ky
	COLOR	- pro zad n¡ grafick˜ch parametr– (1.parametr
		  paleta, 2.parametr m¢d - jako v BASIC).
	SOUND	- ©¡zen¡ zvukov‚ho gener toru (viz manu l
		  BASIC - str. 6-72).
	SCR	- init obrazovky (jako v BASIC)
	CURON	- zapnut¡ kurzoru
	CUROF	- vypnut¡ kurzoru
	CLICK	- zvukov  indikace p©i stisku kl vesy -
		  - prvn¡ parametr = v˜¨ka t¢nu (‡¡m vˆt¨¡
		  ‡¡slo, t¡m ni‘¨¡ t¢n), druh˜ parametr =
		  = d‚lka t¢nu (implicitn¡ hodnoty jsou
		  256 a 512).

N sleduj¡c¡ p©¡klad n zornˆ ilustruje pou‘it¡ grafick‚ho 
modulu v‡etnˆ zaveden¡ do pamˆti.
Ve vlastn¡m programu pou‘ijeme buƒ jen ty procedury, kter‚
pot©ebujeme, nebo vytvo©¡me zdrojov˜ modul na p sce a p©i-
pojujeme jej direktivou ( $I soubor).

program GRAF;  {procedury obsazen‚ v modulu MIKRO-GRAF}

procedure PLOT (x,y:integer);
	  external $fc00;

procedure UNPLOT (x,y:integer);
	  external $fc03;

procedure LINE (x,y,x1,y1:integer);
	  external $fc06;

procedure BLINE (x,y,x1,y1:integer);
	  external $fc09;

procedure COLOR (pal,mode:integer);
	  external $fc0c;

procedure SOUND (vyska,delka:integer);
	  external $fc0f;

procedure SCR (typ:integer);
	  external $fc12;

procedure CURON;
	  external $fc15;

procedure CUROF;
	  external $fc18;

procedure CLICK (vyska,delka:integer);
	  external $fc1b;

                         - 9 -

procedure TEXTCOLOR (barva:integer);
	  begin
	  mem[$f9eb]:=barva;
          end;

          {procedura pro zaveden¡ modulu MIKRO-GRAF do pa-
	   mˆti}

procedure LOAD;

var lab:array[1..128] of byte;
	a1 : integer;
	bylload : byte absolute $fc00;
begin
	if bylload <> $c3 then
	begin
	lab[1]:=1;		{‡ten¡ n vˆ¨t¡}
	bdos(12,addr(lab));
	a1:=2;
	writeln;		{tisk Loading ...}
	write ('Loading');
	repeat
	write (char(lab[a1]));
	a1:=succ(a1);
	until lab[a1]=13;
	writeln;
	lab[1]:=2;		{‡ten¡ tˆla programu}
	bdos(12,addr(lab));
	end;
end;

procedure CTVEREC(x,y,r:integer);
	begin
	plot (x,y);
	line (x,y,x+r,y);
	line (x+r,y,x+r,y+r);
	line (x+r,y+r,x,y+r);
	line (x,y+r,x,y);
	end;

			{ **** P R O G R A M **** }

begin
load;
{...............sem p©ijde program...............}
write (char(12));			{CLS}
ctverec (100,100,40);
end

V uveden‚m p©¡kladu je pou‘ito p©ekr˜vaj¡c¡ f ze p©i bˆhu
programu. Je mo‘n‚ ji zav‚st takt‚‘ monitorem (p©¡kaz L).
Po proveden¡ p©ekladu do souboru (COM) se zap¡¨e BIOS v‡etnˆ
t‚to p©ekr˜vaj¡c¡ ‡ sti.

POZOR !!! Pokud zavedeme do pamˆti modul MIKRO-GRAF, nen¡
funk‡n¡ funkce CTRL + RESET.

Grafika na p sce je generov na v re‘imu 320 x 200 bod– / 
4 barvy. Pokud pracujeme v jinom re‘imu obrazovky, mus¡ b˜t
prvn¡m p©¡kazem p©ed pou‘it¡m grafick˜ch p©¡kaz– p©¡kaz SCR,
kter˜m p©edefinujeme obrazovku.

                         - 10 - 

P©i pou‘it¡ SCR(2) - ¨estn ct barev doch z¡ ke kolizi gra-
fick‚ho a textov‚ho re‘imu. Je t©eba p©i vstupu do programu
p©edefinovat PAL (1,1); PAL (2,2); PAL(3,3) a pro barvu tis-
ku pou‘¡vat proceduru TEXTCOLOR, v kter‚ uv d¡me p©¡mo barvu
tisku. P©ed ukon‡en¡m programu vr tit PAL (1,lowvideo), 
PAL (3,normvideo), obnov¡ se spr vn  barva tisku pro funkci
editoru.

7.- Grafick˜ modul MIKRO-DRAW  - rychl  grafika
    -------------------------------------------
obsahuje procedury:

	POINT 	- pro vynesen¡ bodu
	DRAW	- pro vynesen¡ £se‡ky
	SCR	- init obrazovky. Parametr odpov¡d  para-
		  metru v BASICu
	CURON	- kurzor se zobrazuje
	CUROF	- kurzor se nezobrazuje
	CLICK	- p¡pnut¡ p©i stisku kl vesy; prvn¡ parametr
		  = v˜¨ka t¢nu (‡¡m vˆt¨¡ ‡¡slo, t¡m ni‘¨¡
		  t¢n), druh˜ parametr = d‚lka t¢nu. Impli-
		  citn¡ hodnoty jsou 256 a 512.
** pro proceduru DRAW byl pou‘it interpol tor £se‡ky vypra-
   covan˜ v SHARP klubu Bratislava **

vol n¡ procedur:

procedure POINT (x,y,barva:integer)	 
	  external $fc00;

procedure DRAW (x,y,x1,y1,barva:integer);
	  external $fc06;

procedure SCR (typ:integer);
	  external $fc12;

procedure CURON;
	  external $fc15;

procedure CUROF;
	  external $fc18;

procedure CLICK (vyska,delka:integer);
	  external $fc1b;

Grafick˜ z pis je v modulu MIKRO-DRAW prov dˆn v re‘imu OR
(viz popis GDG). Pokud chceme pou‘¡t jin˜ re‘im, je mo‘n‚
pou‘¡t proceduru SETGRAFMODE v n sleduj¡c¡m tvaru:

const	GRAFSINGLE = $00; (v¨echny konstanty jsou glob ln¡}
	GRAFEXOR   = $20;
	GRAFOR     = $40;
	GRAFRESET  = $60;
	GRAFREPLACE= $80;
	GRAFPSET   = $C0;

procedure SETGRAFMODE (typ:integer);
begin
	mem [$fc60]:=typ;
	mem [$fdaf]:=typ;
end;

Jinak pro pou‘it¡ modulu MIKRO-DRAW plat¡ v¨echno, co bylo
©e‡eno u modulu MIKRO-GRAF.


