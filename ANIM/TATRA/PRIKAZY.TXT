
                          Struktura programu
                        ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ


€asti programu (po©ad¡ je z vazn‚):

1.-  Definice  promˆnn˜ch  pomoc¡  BYTE  nebo  WORD. Ka‘d‚ promˆnn‚ se
     p©i©ad¡  definic¡  hodnota, s kterou bude program odstartov n. Na
     promˆnnou  se  lze  odkazovat  indexovanˆ (pokud m  v¡ce polo‘ek)
     nebo bez ud n¡ indexu - odpov¡d  indexu 0 (nap©. u promˆnn˜ch s 1
     polo‘kou). Hranice indexu se nekontroluj¡. Tato  deklara‡n¡  ‡ st
     slou‘¡ k rezervov n¡ m¡sta pro promˆnn‚ na za‡ tku programu.

2.-  Definice  procedur.  Pomoc¡  PROC  se nadefinuj¡ jednotliv‚ ‡ sti
     programu  (procedury).  Po©ad¡ definice procedur mus¡ b˜t takov‚,
     aby  vno©en‚  procedury  byly  vyvol v ny  a‘ po jejich p©edchoz¡
     definici  (tj.  nejd©¡ve  jsou  definov ny  procedury na nejni‘¨¡
     £rovni).

3.-  Definice  hlavn¡  procedury. Tato procedura mus¡ m¡t jm‚no MAIN a
     mus¡  b˜t definov na na konci za v¨emi procedurami. Program touto
     procedurou za‡¡n  a jej¡m ukon‡en¡m kon‡¡.

4.-  Definice  soubor–  p©ipojovan˜ch za konec programu (jako objekty;
     nen¡ nutn‚ zav dˆn¡ pomoc¡ LOAD).


                                Symboly
                               ÍÍÍÍÍÍÍÍÍ

     Symboly  slou‘¡ k symbolick˜m odkaz–m na promˆnn‚, procedury nebo
vnit©n¡  funkce.  Symbol  sest v  z ‡¡slic, p¡smen, znaku podtrhov tka
(_) nebo znak– s k¢dem nad 127 (tj. nap©. znaky n rodn¡ abecedy). M–‘e
m¡t  maxim ln¡  d‚lku  64  znak–  a nesm¡ za‡¡nat ‡¡slic¡. U p¡smen se
nerozli¨uje  mezi  mal˜m  a velk˜m p¡smenem - to v¨ak neplat¡ u p¡smen
n rodn¡ abecedy (s diakritikou).


                                V˜razy
                               ÍÍÍÍÍÍÍÍ

     V¨echny  ‡¡seln‚  operace  prob¡haj¡ na £rovni slova (16 bit– = 2
bajty).  Pokud  je promˆnn  typu BYTE, prov d¡ se automaticky konverze
bez  kontroly  p©ete‡en¡  rozsahu.  Ani  p©i  v˜po‡tech  se  neprov d¡
kontrola   p©ete‡en¡   rozsahu,  p©ete‡en¡  mus¡  b˜t  proto  o¨et©eno
programovˆ (jsou o¨et©ena pouze "trvd " p©ete‡en¡ typu dˆlen¡ nulou).

‡¡seln˜ v˜raz: INTEGER (-32768 a‘ +32767)

logick˜ v˜raz: 0 = FALSE ($0000)
              -1 = TRUE ($FFFF)

promˆnn :             jm‚no                 odkaz na 1.polo‘ku tabulky
                      jm‚no(index)          odkaz na polo‘ku danou indexem

konstanty:           -32768 a‘ 32767        dekadick  soustava
                      0 a‘ $FFFF            hexadecim ln¡ soustava
                      0 a‘ %111111111111    bin rn¡ soustava
                      "text"                textov  konstanta


                          Oper tory
                         ÍÍÍÍÍÍÍÍÍÍÍ

spojen¡ ©etˆzc–        &                    spojen¡ textov˜ch ©etˆzc–


z vorky                ()
un rn¡ znam‚nko        + -                  un rn¡ znam‚nko
                        ^                   mocnina
aritmetick‚ oper tory  * / MOD << >>        aritmetick˜ n sobek, pod¡l, modulo
                                            rotace vlevo a vpravo
                       + -                  aritmetick˜ sou‡et a rozd¡l
porovn vac¡ oper tory   =, <>, <, >, <=, >= shoda, neshoda, men¨¡, vˆt¨¡, ...
                                            (poskytuj¡ 0=TRUE, -1=FALSE)
logick‚ oper tory      NOT                  logick  negace
                       AND                  logick˜ sou‡in
                       OR XOR               logick˜ sou‡et, v˜hradn¡ logick˜ sou‡et

(IF NOT a=2*b^3 AND b<c+2*3 OR (23 AND $ff) = 32 THEN ...)
   ³       ÀÄÙ           ³     ³        ³     ³
   ÀÄÄÄÄÄÄÄÄÄÙ           ³     ÀÄÄÄÄÄÄÄÄÙ     ³
   ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ     ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ


Byte promˆnn ,promˆnn ,... promˆnn :=‡¡slo;
     Promˆnn (max):=(‡¡slo0,...‡¡slo_max-1);
Word...
------------------------------------------------------------------------


Proc jm‚no

Return(hodnota);

EndProc;

------------------------------------------------------------------------


If podm¡nka Then
    p©¡kazy;
Else
    p©¡kazy;
EndIf;

------------------------------------------------------------------------

Do

    On podm¡nka Exit;

EndDo;

------------------------------------------------------------------------

Case

    In ‡¡slo: p©¡kazy;

    In ‡¡slo..‡¡slo: p©¡kazy;

    Out: p©¡kazy;

EndCase;

------------------------------------------------------------------------

Video(v˜raz);
Mode(v˜raz);
Page(v˜raz1,v˜raz2);    - zobrazen  a v˜stupn¡ videostr nka
XPage;                  - z mˆna
Window(X1,Y1,X2,Y2);
Palette(R1,....R17);    - 16 barev + 1 pozad¡
SetCurs(pozice,© dek);
CursOff;
Load(jm‚no obr zku,"jm‚no souboru");
UnLoad(jm‚no obr zku);
Link(jm‚no obr zku,"jm‚no souboru");
Pic(jm‚no obr zku,X1,Y1);
Text(barva,X,Y,"text");
Point(barva,X,Y);
Line(barva,X1,Y1,X2,Y2);
Pattern(p1,...p8);                - 8 bajt– - v˜pl¤ 8x8 bod–
FBox(barva,X1,Y1,X2,Y2);          - barva $20e - pozad¡ zelen‚ a pop©ed¡ ‘lut‚
Press(k¢d kl vesy);               - test, zda je stisknuta kl vesa
Sound(dˆlic¡ pomˆr);              - frekvence [Hz] = 1 193 182 / dˆlic¡_pomˆr
  Sound(0);                       - vypnut¡
Music(definice);
    C, D, E, F, G, A, H ..... t¢n
    R ....................... prodleva
    + - ..................... zv˜¨en¡/sn¡‘en¡ n sleduj¡c¡ho t¢nu o okt vu
    # ....................... zv˜¨en¡ n sleduj¡c¡ho t¢nu o p–lt¢n
    O ‡¡slo ................. nastaven¡ okt vy ‡¡slo 0 a‘ 9
    L ‡¡slo ................. nastaven¡ implicitn¡ d‚lky t¢nu v 1/18 sek.
    T ‡¡slo ................. transpozice melodie o dan˜ po‡et p–lt¢n–
                  nahoru nebo dol– (a‘ po parametr On nebo Tn)
    .  ...................... te‡ka za t¢nem - prodlou‘en¡ dobu o p–lt¢n
                  (plat¡ jen pro jeden t¢n)
    ^  ...................... za t¢nem - zkr cen¡ doby t¢nu na polovinu
    ‡¡slo ................... za t¢nem - nastaven¡ d‚lky

    implicitn¡ nastaven¡: O4 L4

    V textu lze mezi parametry pou‘¡vat mezery a pozn mky.

                                  -
MusicStop;                        - zastaven¡ melodie
Wait(po‡et_1/18_sekundy);         - ‡ek n¡ po 1/18 sekundy
Register(registr,hodnota);        - nastaven¡ videoregistru
VSyn(v˜raz);                      - vertik ln¡ impulsy
HSyn(v˜raz);                      - horizont ln¡
Circ(barva, x, y, polomˆr);

------------------------------------------------------------------------

Funkce:

    Card           ; vrac¡ p©¡znak karty EGA/VGA (0=nen¡ karta EGA/VGA)
    TestKey        - vrac¡ k¢d kl vesy, kter  je p©ipravena v bufferu
    GetKey         - vyjme znak z bufferu
    StatKey        bit 0: 1=prav˜ Shift stisknut
                   bit 1: 1=lev˜ Shift stisknut
                   bit 2: 1=kl vesa Ctrl stisknuta
                   bit 3: 1=kl vesa Alt stisknuta
                   bit 4: 1=Scroll Lock zapnut
                   bit 5: 1=Num Lock zapnut
                   bit 6: 1=Caps Lock zapnut
                   bit 7: 1=Insert zapnut

                   bit 8: 1=prav  kl vesa Ctrl stisknuta  Ä¿
                   bit 9: 1=prav  kl vesa Alt stisknuta    Ã pouze AT 101/102
                   bit 10: 1=kl vesa Sys Rq stisknuta     ÄÙ
                   bit 11: 1=je roz¨¡©en  kl vesnice AT 101/102 kl ves
                   bit 12: 1=kl vesa Scroll Lock stisknuta
                   bit 13: 1=kl vesa Num Lock stisknuta
                   bit 14: 1=kl vesa Caps Lock stisknuta
                   bit 15: 1=kl vesa Insert stisknuta
    MusicGet       - vrac¡ po‡et zbyl˜ch t¢n– melodie
    Rnd(max)       - vrac¡ ‡¡slo 0 a‘ (max-1)
    Stick             0=nen¡ ‘ dn˜ smˆr
                      1=nahoru                        8    /\ 1  2
                      2=vpravo nahoru                   \      /
                      3=vpravo
                      4=vpravo dol–                 7 <---    ---> 3
                      5=dol–
                      6=vlevo dol–                    6 /      \  4
                      7=vlevo                              \/
                      8=vlevo nahoru                         5
    Trig           - p©¡znak stisknu mezern¡ku
    Sin, Cos - argument -32767 a‘ 32767 (180 stup¤– = 32768), 
               v˜stupn¡ hodnota -32767 a‘ 32767
    Abs - absolutn¡ hodnota
    Sqr - odmocnina   
