
{ °°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°° }
{									      }
{             Deklara‡n¡ ‡ st - obsahuje definice promˆnn˜ch                  }
{									      }
{ °°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°° }

Word X1:=-320, X2:=320, Y, F, N;	{pomocn‚ promˆnn‚ pro tituln¡ obr zek}

Word Xt, Yt, Zn, Barva, Xtd, Ytd;	{sou©adnice, znak a barva k zobrazen¡}

Byte Volba_Sceny:=5, Scena;		{£rove¤ hry - p©edvolen  a aktu ln¡}
Byte Volba_Vysky:=0;			{po‡ te‡n¡ v˜¨ka}
Word Znak;				{k¢d stisknut‚ kl vesy}
Byte Barv(10):=(2,2,2,2,3,3,2,3,2,3);	{barvy textu pro sc‚ny}

Word Xk, Yk, Bk;			{sou©adnice a barva kamene}
Word Mc, Nc, Tc, Ukc;			{sou©ad. a ‡¡slo typu cihly, ukazatel}
Word Mt, Nt, Tt, M1t, N1t;		{testovac¡ sou©adnice a typ cihly}
Byte Chyba, Chyba2;
Word CitPad;				{‡¡ta‡ ‡asu pro pad n¡ cihly}
Byte Pad;				{p©¡znak, ‘e cihla pad }

Word Y1, Y2;				{ pomocn‚ promˆnn‚ pro konec hry }

Word Pristi;				{p©¡¨t¡ p©ipraven  cihla}

Byte Rychlosti(10):=(10,9,8,7,6,5,4,3,2,1); {rychlosti pro sc‚ny}

					{£vodn¡ informa‡n¡ text}
Byte UvText(450):=("TETRIS WAS INVENTED BY A 30-YEAR-OLD",0,
		  "SOVIET RESEARCHER NAMED ALEXI",0,
		  "PASZITNOV WHO CURRENTLY WORKS AT",0,
		  "THE COMPUTER CENTRE[ACADEMY SOFT] OF",0,
		  "THE USSR ACADEMY OF SCIENTISTS IN",0,
		  "MOSCOW. THE ORIGINAL PROGRAMMER WAS",0,
		  "18-YEAR-OLD VAGIM GERASIMOV, A STUDENT",0,
		  "STUDYING COMPUTER INFORMATICS AT",0,
		  "MOSCOW UNIVERSITY.",0,
		  "NOW YOU CAN ENJOY TETRIS BECAUSE OF",0,
		  "THE JOINT EFFORTS OF ACADEMY SOFT,",0,
		  "MOSCOW, ANDROMEDA SOFTWARE LTD.,",0,
		  "LONDON AND SPECTRUM HOLOBYTE, USA",0);

					{definice k¢d– kl ves}
Byte Mezera:=$39, Enter:=$1c, Esc:=1, Vlevo:=$4b, Vpravo:=$4d, Nahoru:=$48,
     Dolu:=$50, Vlevo_Nahoru:=$47, Vpravo_Nahoru:=$49, Vlevo_Dolu:=$4f,
     Vpravo_Dolu:=$51, Rotace:=$4c;

					{defini‡n¡ tabulka cihel}
Byte TabCih(304):=(	0,0,0,0,	{ 0: zrcadlov‚ Z - f ze 1 }
			0,1,1,0,
			1,1,0,0,
			0,0,0,0,

			0,0,0,0,	{ 1: Z - f ze 1 }
			2,2,0,0,
			0,2,2,0,
			0,0,0,0,	   

			0,0,0,0,	{ 2: L - f ze 1 }
			3,3,3,0,
			3,0,0,0,
			0,0,0,0,	   

			0,0,0,0,	{ 3: zrcadlov‚ L - f ze 1 }
			4,4,4,0,
			0,0,4,0,
			0,0,0,0,	   

			0,0,0,0,	{ 4: T - f ze 1 }
			5,5,5,0,
			0,5,0,0,
			0,0,0,0,	   

			0,0,0,0,	{ 5: I - f ze 1 }
			6,6,6,6,
			0,0,0,0,
			0,0,0,0,	   

			0,0,0,0,	{ 6: ‡tverec }
			0,7,7,0,
			0,7,7,0,
			0,0,0,0,	   

			0,1,0,0,	{ 7: zrcadlov‚ Z - f ze 2 }
			0,1,1,0,
			0,0,1,0,
			0,0,0,0,	   

			0,2,0,0,	{ 8: Z - f ze 2 }
			2,2,0,0,
			2,0,0,0,
			0,0,0,0,	   

			0,3,0,0,	{ 9: L - f ze 2 }
			0,3,0,0,
			0,3,3,0,
			0,0,0,0,	   

			0,0,0,0,	{ 10: L - f ze 3 }
			0,0,3,0,
			3,3,3,0,
			0,0,0,0,	   

			3,3,0,0,	{ 11: L - f ze 4 }
			0,3,0,0,
			0,3,0,0,
			0,0,0,0,	   

			0,4,4,0,	{ 12: zrcadlov‚ L - f ze 2 }
			0,4,0,0,
			0,4,0,0,
			0,0,0,0,	   

			0,0,0,0,	{ 13: zrcadlov‚ L - f ze 3 }
			4,0,0,0,
			4,4,4,0,
			0,0,0,0,	   

			0,4,0,0,	{ 14: zrcadlov‚ L - f ze 4 }
			0,4,0,0,
			4,4,0,0,
			0,0,0,0,	   

			0,5,0,0,	{ 15: T - f ze 2 }
			0,5,5,0,
			0,5,0,0,
			0,0,0,0,	   

			0,0,0,0,	{ 16: T - f ze 3 }
			0,5,0,0,
			5,5,5,0,
			0,0,0,0,	   

			0,5,0,0,	{ 17: T - f ze 4 }
			5,5,0,0,
			0,5,0,0,
			0,0,0,0,	   

			0,0,6,0,	{ 18: I - f ze 2 }
			0,0,6,0,
			0,0,6,0,
			0,0,6,0);


					{tabulka n slednost¡ p©i rotaci cihly}
Byte RotCih(19):=(7,8,9,12,15,18,6,0,1,10,11,2,13,14,3,16,17,4,5);

Byte Pole(200);				{hrac¡ plocha}
Byte Uschova_Pole(200);			{uschovan‚ p©edvolen‚ pole}
Byte FulRad(4);				{p©¡znaky pln˜ch © dk–}

{ °°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°° }
{									      }
{               Programov  ‡ st - obsahuje definice procedur                  }
{									      }
{ °°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°° }

{ ================== kr tk‚ lupnut¡ jako psac¡ stroj ======================== }

Proc Lup
VSyn(1); HSyn(40);
Sound(280); HSyn(12); Sound(0); HSyn(2);
Sound(500); HSyn(8); Sound(0); HSyn(3);
Sound(440); HSyn(11); Sound(0);

EndProc;

{ ====================== zobrazen¡ znaku ==================================== }

Proc DispChar

Window(Xt,Yt,Xt+7,Yt+7);		{okno pro zobrazen¡ jednoho znaku}
If (Zn<" ") Or (Zn>"_") Then Return(1); EndIf; {znak je mimo povolen‚ meze}
Xtd:=Xt - ( ((Zn-" ") Mod 32) * 8);
Ytd:=Yt - ( ((Zn-" ")/32) * 8);

Case Barva				{vˆtven¡ podle barvy textu}
	In 0: Pic(Cga2Fnt0,Xtd,Ytd);	{barva 0}
	In 1: Pic(Cga2Fnt1,Xtd,Ytd);	{barva 1}
	In 2: Pic(Cga2Fnt2,Xtd,Ytd);	{barva 2}
	In 3: Pic(Cga2Fnt3,Xtd,Ytd);	{barva 3}
EndCase;
Xt:=Xt+8;				{zv˜¨en¡ pozice znaku}

EndProc;

{ ========================= zobrazen¡ kamene ================================= }
{ VSTUP: Xk=pozice kamene X, Yk=pozice kamene Y, Bk=barva kamene }

Proc Kamen

Case Bk
	In 0: FBox(0,Xk,Yk,Xk+7,Yk+7);
	In 1: Pic(K1,Xk,Yk);
	In 2: Pic(K2,Xk,Yk);
	In 3: Pic(K3,Xk,Yk);
	In 4: Pic(K4,Xk,Yk);
	In 5: Pic(K5,Xk,Yk);
	In 6: Pic(K6,Xk,Yk);
	In 7: Pic(K7,Xk,Yk);
EndCase;

EndProc;

{ =========================== zobrazen¡ pole ================================ }

Proc Zobraz_Pole

Yk:=10;
Ukc:=0;
Window(0,0,319,199);

Do
	Xk:=120;

	Do
		Bk:=Pole(Ukc);
		Kamen;			{zobrazen¡ kamene}
		Ukc:=Ukc+1;
		Xk:=Xk+8;
		On Xk=(120+(10*8)) Exit;
	EndDo;

	Yk:=Yk+8;
	On Yk=(10+(20*8)) Exit;
EndDo;

EndProc;

{ ============================ zobrazen¡ cihly ============================== }
{ VSTUP: Mc=pozice cihly, Nc=© dek cihly, Tc=typ cihly }

Proc Cihla 

Xk:=120+(Mc*8);
Yk:=10+(Nc*8);

Case Tc
	In 0: Pic(C0,Xk,Yk+8);
	In 1: Pic(C1,Xk,Yk+8);
	In 2: Pic(C2,Xk,Yk+8);
	In 3: Pic(C3,Xk,Yk+8);
	In 4: Pic(C4,Xk,Yk+8);
	In 5: Pic(C5,Xk,Yk+8);
	In 6: Pic(C6,Xk+8,Yk+8);
	In 7: Pic(C7,Xk+8,Yk);
	In 8: Pic(C8,Xk,Yk);
	In 9: Pic(C9,Xk+8,Yk);
	In 10: Pic(C10,Xk,Yk+8);
	In 11: Pic(C11,Xk,Yk);
	In 12: Pic(C12,Xk+8,Yk);
	In 13: Pic(C13,Xk,Yk+8);
	In 14: Pic(C14,Xk,Yk);
	In 15: Pic(C15,Xk+8,Yk);
	In 16: Pic(C16,Xk,Yk+8);
	In 17: Pic(C17,Xk,Yk);
	In 18: Pic(C18,Xk+16,Yk);
EndCase;

EndProc;

{ ============================= vymaz n¡ cihly ============================== }
{ VSTUP: Mc=pozice cihly, Nc=© dek cihly, Tc=typ cihly }

Proc Vymaz_Cihly

Xk:=120+(Mc*8);
Yk:=10+(Nc*8);

Case Tc
	In 0: Pic(D0,Xk,Yk+8);
	In 1: Pic(D1,Xk,Yk+8);
	In 2: Pic(D2,Xk,Yk+8);
	In 3: Pic(D3,Xk,Yk+8);
	In 4: Pic(D4,Xk,Yk+8);
	In 5: Pic(D5,Xk,Yk+8);
	In 6: Pic(D6,Xk+8,Yk+8);
	In 7: Pic(D7,Xk+8,Yk);
	In 8: Pic(D8,Xk,Yk);
	In 9: Pic(D9,Xk+8,Yk);
	In 10: Pic(D10,Xk,Yk+8);
	In 11: Pic(D11,Xk,Yk);
	In 12: Pic(D12,Xk+8,Yk);
	In 13: Pic(D13,Xk,Yk+8);
	In 14: Pic(D14,Xk,Yk);
	In 15: Pic(D15,Xk+8,Yk);
	In 16: Pic(D16,Xk,Yk+8);
	In 17: Pic(D17,Xk,Yk);
	In 18: Pic(D18,Xk+16,Yk);
EndCase;

EndProc;

{ =========================================================================== }
{									      }
{                 inicializace a zobrazen¡ tituln¡ho obr zku                  }
{									      }
{ =========================================================================== }

Proc Init

Video(4);				{videom¢d 4: 320x200, 4 barvy CGA}
Palette(0,11,12,15,?,?,?,?,?,?,?,?,?,?,?,?,?); {definice barev pro EGA/VGA}


{ --------------------- vymaz n¡ tabulky £schovy pole ----------------------- }
Ukc:=0;
Do
	Uschova_Pole(Ukc):=0;
	Ukc:=Ukc+1;
	On Ukc=200 Exit;
EndDo;
{ ------------- V n sleduj¡c¡m cyklu se rozvine tituln¡ obr zek ------------- }
Do
	Y:=0;				{linka pro zobrazen¡ v˜©ezu}
	Do
		Window(?,Y,?,Y+1);	{zobraz¡ se lev˜ p s z 10 linek}
		Pic(Titul1,X1,0);	{zobrazen¡ lev‚ho v˜©ezu z titulku}
		Window(?,Y+2,?,Y+3);	{zobraz¡ se prav˜ p s z 10 linek}
		Pic(Titul1,X2,0);	{zobrazen¡ prav‚ho v˜©ezu z titulku}
		Y:=Y+4;			{zv˜¨en¡ ukazatele na dal¨¡ p s}
		On Y>200 Exit;		{jsou ji‘ v¨echny p sy - konec}
	EndDo;
	Wait(1);			{mal  prodleva pro rychl‚ po‡¡ta‡e}
	X1:=X1+8;			{zv˜¨en¡ pozice lev‚ho p su}
	X2:=X2-8;			{zv˜¨en¡ pozice prav‚ho p su}
	On X1>0 Exit;			{je ji‘ cel˜ titulek - konec}
	On TestKey Exit;		{p©i stisku nˆjak‚ kl vesy konec}
EndDo;
{ --------------- Nyn¡ let¡ letadlo z prav‚ strany na levou ----------------- }

F:=0;					{ukazatel f ze letadla}
X1:=320;				{po‡ te‡n¡ pozice letadla}
Do
	X1:=X1-3;			{posun pozice letadla vlevo}
	On X1<(-50) Exit;		{letadlo ji‘ p©eletˆlo - konec}
	On TestKey Exit;		{konec tak‚ p©i stisku nˆjak‚ kl vesy}
	VSyn(1); HSyn(120);		{synchronizace pro sn¡‘en¡ blik n¡}
	Window(X1,64,X1+40,80);		{v˜stupn¡ okno - pro zrychlen¡ grafiky}
	Pic(Titul1,0,0);		{vymaz n¡ star‚ho letadla}
	Case F				{rozli¨en¡ podle f ze letadla}
		In 0: Pic(Letadlo1,X1,64); F:=1; {zobrazen¡ letadla - f ze 1}
		In 1: Pic(Letadlo2,X1,64); F:=0; {zobrazen¡ letadla - f ze 2}
	EndCase;
	Wait(1);			{prodleva pro zpomalen¡}
EndDo;

{ -------------- v doln¡ch © dc¡ch se zobraz¡ £vodn¡ text ------------------ }
N:=0;					{‡¡ta‡ © dk– textu}
F:=0;					{ukazatel textu}
Y:=182;

If TestKey=0 Then
Barva:=0;
Do
	Window(0,191,319,199);
	FBox(3,0,191,319,199);		{vymaz n¡ spodn¡ho © dku}

	Xt:=4;				{po‡ te‡n¡ pozice znaku}
	Yt:=192;			{pozice k zobrazen¡ znak–}

	Wait(3);

	Do
		Zn:=UvText(F);		{dal¨¡ znak textu}
		F:=F+1;
		On Zn=0 Exit;		{konec © dku}
		DispChar;		{zobrazen¡ znaku}
		If Zn<>" " Then Lup; EndIf; {nen¡ mezera - lupnut¡}
		Wait(1);		{prodleva mezi znaky}
		On TestKey Exit;	{tak‚ p©i stisku nˆjak‚ kl vesy konec}
	EndDo;

	On TestKey Exit;		{p©i stisku kl vesy p©eru¨en¡}
	N:=N+1;				{zv˜¨en¡ ‡¡ta‡e © dk–}
	On N=13 Exit;			{byly ji‘ v¨echny © dky - konec}

	Xt:=4;				{po‡ te‡n¡ pozice znaku}
	Yt:=183;			{pozice k zobrazen¡ znak–}

	Window(0,182,319,190);
	Pic(TitulTxt,0,Y);		{vymaz n¡ spodn¡ho © dku}
	Y:=Y-9;
EndDo;
EndIf;

If TestKey=0 Then Wait(12); EndIf;	{mal  prodleva}
{ ------------ zmiz¡ spodn¡ ‡ st obr zky a objev¡ se nov  ------------------- }
Y:=0;
Do
	On TestKey Exit;		{tak‚ p©i stisku kl vesy konec}
	Window(0,Y+104,319,199);	{okno pro zobrazen¡ spodn¡ ‡ sti}
	Pic(Titul1,0,Y);		{zobrazen¡ spodn¡ ‡ sti obr zku}
	Y:=Y+10;			{posun obr zku dol–}
	On (Y+104)>199 Exit;		{obr zek je ji‘ cel˜ dole}
	Wait(1);			{jinak mal  prodleva}
EndDo;
Y:=200;
Do
	On TestKey Exit;		{tak‚ p©i stisku kl vesy konec}
	Window(0,Y,319,199);		{okno pro zobrazen¡ spodn¡ ‡ sti}
	Pic(Titul2,0,Y);		{zobrazen¡ nov‚ spodn¡ ‡ sti obr zku}
	Y:=Y-10;			{posun obr zku dol–}
	On Y<104 Exit;			{obr zek je ji‘ cel˜ naho©e}
	Wait(1);			{jinak mal  prodleva}
EndDo;
{ ------------ Nyn¡ let¡ druh‚ letadlo z prav‚ strany na levou -------------- }
F:=0;					{ukazatel f ze letadla}
Do
	X1:=320;				{po‡ te‡n¡ pozice letadla}
	Do
		X1:=X1-3;			{posun pozice letadla vlevo}
		On X1<(-150) Exit;		{letadlo ji‘ p©eletˆlo - konec}
		On TestKey Exit;		{konec tak‚ p©i stisku kl vesy}
		VSyn(1); HSyn(120);		{synchron. pro sn¡‘en¡ blik n¡}
		Window(X1,64,X1+145,80);	{v˜stupn¡ okno - pro zrychlen¡}
		Pic(Titul1,0,0);		{vymaz n¡ star‚ho letadla}
		Case F				{rozli¨en¡ podle f ze letadla}
			In 0: Pic(Letadlo3,X1,64); F:=1; {zobr.letadla - f ze 1}
			In 1: Pic(Letadlo4,X1,64); F:=0; {zobr.letadla - f ze 2}
		EndCase;
		Wait(1);			{prodleva pro zpomalen¡}
	EndDo;
	On TestKey Exit;			{‡ek  se na stisk kl vesy}
EndDo;
{ ------------ zobrazen¡ druh‚ho titulku - autorsk‚ informace --------------- }

If TestKey Then GetKey; EndIf;		{zru¨en¡ p©¡padn‚ kl vesy}
Y:=0;
Window(0,0,319,199);
FBox(0,0,0,319,199);			{vymaz n¡ obrazovky}

Do
	On TestKey Exit;
	Window(0,Y,319,Y+7);
	Pic(Titul3,0,0);		{zobrazen¡ druh‚ho titulku}
	Lup;				{lupnut¡}
	Wait(1);			{prodleva}
	Y:=Y+8; 
	On Y>200 Exit;
EndDo;

GetKey;						{‡ek n¡ na stisk kl vesy}

EndProc;

{ =========================================================================== }
{									      }
{                          volba £rovnˆ a v˜¨ky                               }
{									      }
{ =========================================================================== }

Proc Select

Do

Window(0,0,319,199);			{pln‚ okno}
Pic(Mapa,0,0);				{zobrazen¡ mapy}

{ ----------------------------- volba £rovnˆ -------------------------------- }

Do
	Case Volba_Sceny
		In 0: Pic(MapaL0,42,32);
		In 1: Pic(MapaL1,42,32);
		In 2: Pic(MapaL2,42,32);
		In 3: Pic(MapaL3,42,32);
		In 4: Pic(MapaL4,42,32);
		In 5: Pic(MapaL5,42,32);
		In 6: Pic(MapaL6,42,32);
		In 7: Pic(MapaL7,42,32);
		In 8: Pic(MapaL8,42,32);
		In 9: Pic(MapaL9,42,32);
	EndCase;

	Znak:=GetKey >> 8;

	On Znak=Mezera Exit;		{potvrzen¡ zvolen‚ £rovnˆ}
	On Znak=Enter Exit;

	If Znak=Esc Then
		Video(3);		{textov˜ videom¢d}
		Pic(Maska,0,0);		{zobrazen¡ maskovac¡ obrazovky}
		GetKey;			{‡ek n¡ na stisk nˆjak‚ kl vesy}
		Video(4);		{videom¢d 4}
		Palette(0,11,12,15,?,?,?,?,?,?,?,?,?,?,?,?,?); {definice barev}
		Pic(Mapa,0,0);		{zobrazen¡ mapy}
	EndIf;		

	If Znak=Vlevo Then Volba_Sceny:=Volba_Sceny-1; EndIf;
	If Znak=Vpravo Then Volba_Sceny:=Volba_Sceny+1; EndIf;
	If Znak=Nahoru Then Volba_Sceny:=Volba_Sceny-5; EndIf;
	If Znak=Dolu Then Volba_Sceny:=Volba_Sceny+5; EndIf;

	If Volba_Sceny<0 Then Volba_Sceny:=Volba_Sceny+10; EndIf;
	If Volba_Sceny>9 Then Volba_Sceny:=Volba_Sceny-10; EndIf;

EndDo;
Scena:=Volba_Sceny;			{nastaven¡ po‡ te‡n¡ £rovnˆ sc‚ny}
{ ----------------------------- volba v˜¨ky -------------------------------- }
Do
	Case Volba_Vysky
		In 0: Pic(MapaH0,202,32);
		In 1: Pic(MapaH4,202,32);
		In 2: Pic(MapaH7,202,32);
		In 3: Pic(MapaH10,202,32);
		In 4: Pic(MapaH13,202,32);
		In 5: Pic(MapaHL,202,32);
	EndCase;

	Znak:=GetKey >> 8;

	On Znak=Mezera Exit;		{potvrzen¡ zvolen‚ £rovnˆ}
	On Znak=Enter Exit;
	On Znak=Esc Exit;

	If Znak=Vlevo Then Volba_Vysky:=Volba_Vysky-1; EndIf;
	If Znak=Vpravo Then Volba_Vysky:=Volba_Vysky+1; EndIf;
	If Znak=Nahoru Then Volba_Vysky:=Volba_Vysky-3; EndIf;
	If Znak=Dolu Then Volba_Vysky:=Volba_Vysky+3; EndIf;

	If Volba_Vysky<0 Then Volba_Vysky:=Volba_Vysky+6; EndIf;
	If Volba_Vysky>5 Then Volba_Vysky:=Volba_Vysky-6; EndIf;

EndDo;

	On Znak<>Esc Exit;		{je-li ESC, bude se volba opakovat}

EndDo;

{ ----------------------- generace nov‚ho pole ------------------------------ }

If Volba_Vysky<>5 Then			{volba 5 = z–st v  p©ede¨l‚ pole}

Ukc:=0;
Do					{ cyklus po‡ te‡n¡ho vymaz n¡ pole }
	Uschova_Pole(Ukc):=0;		{ vynulov n¡ pozice }
	Ukc:=Ukc+1;
	On Ukc=200 Exit;
EndDo;

Case Volba_Vysky
	In 0: Ukc:=200;
	In 1: Ukc:=200-40;
	In 2: Ukc:=200-70;
	In 3: Ukc:=200-100;
	In 4: Ukc:=200-130;
EndCase;

Do					{ cyklus generace n hodn‚ho pole }
	On Ukc=200 Exit;		{ konec generace }
	Nc:=0;				{ ‡¡ta‡ cihel v © dku }

	Do
		If Rnd(2)=0 Then
			If Nc<7 Then
				Uschova_Pole(Ukc):=Rnd(7)+1; {generace kamene}
				Nc:=Nc+1;		{ ‡¡ta‡ kamen– }
			EndIf;
		EndIf;
		Ukc:=Ukc+1;		{ zv˜¨en¡ ukazatele v tabulce }
		On (Ukc Mod 10)=0 Exit;	{ je ji‘ cel˜ © dek }
	EndDo;
EndDo;

EndIf;

{ ---------------------- nastaven¡ nov‚ho pole ------------------------------ }

Ukc:=0;
Do
	Pole(Ukc):=Uschova_Pole(Ukc);
	Ukc:=Ukc+1;
	On Ukc=200 Exit;
EndDo;
Nc:=-20;				{ cihla se nezobraz¡ }

EndProc;

{ =========================================================================== }
{									      }
{                            zobrazen¡ pozad¡ sc‚ny                           }
{									      }
{ =========================================================================== }

Proc Pozadi

Case Scena
	In 0: Pic(Scena0,0,0);
	In 1: Pic(Scena1,0,0);
	In 2: Pic(Scena2,0,0);
	In 3: Pic(Scena3,0,0);
	In 4: Pic(Scena4,0,0);
	In 5: Pic(Scena5,0,0);
	In 6: Pic(Scena6,0,0);
	In 7: Pic(Scena7,0,0);
	In 8: Pic(Scena8,0,0);
	In 9: Pic(Scena9,0,0);
EndCase;

EndProc;

{ =========================================================================== }
{									      }
{                          nov‚ zobrazen¡ cel‚ sc‚ny                          }
{									      }
{ =========================================================================== }

Proc Zobraz_Vse

Window(0,0,319,199);			{maxim ln¡ okno}
Pozadi;					{zobrazen¡ pozad¡}
Zobraz_Pole;				{zobrazen¡ hrac¡ho pole}
Cihla;					{zobrazen¡ aktivn¡ cihly}

EndProc;

{ =================== posun cihly na novou pozici =========================== }

Proc Posun

Ukc:=0;
Chyba:=0;

{ -------------- test, zda je po‘adovan  pozice cihly voln  ----------------- }
Do
	N1t:=Nt+(Ukc/4);
	M1t:=Mt+(Ukc Mod 4);

	If TabCih((16*Tt)+Ukc)<>0 Then
		If (N1t<0) Or (N1t>19) Then Chyba:=1; EndIf;
		If (M1t<0) Or (M1t>9) Then Chyba:=1; EndIf;
		If (Pole(M1t+(N1t*10)))<>0 Then Chyba:=1; EndIf;
	EndIf;

	Ukc:=Ukc+1;
	On Chyba Exit;
	On Ukc=16 Exit;
EndDo;
{ -------------------- je-li pozice voln , posun cihly ---------------------- }
If Chyba=0 Then

	If Pad Then
		Vymaz_Cihly;			{ vymaz n¡ star‚ cihly }
		Tc:=Tt;				{ nov˜ typ cihly }
		Nc:=Nt;				{ nov˜ © dek cihly }
		Mc:=Mt;				{ nov  pozice cihly }
		Cihla;				{ zobrazen¡ cihly na nov‚ pozici }
	Else
		Tc:=Tt;				{ nov˜ typ cihly }
		Nc:=Nt;				{ nov˜ © dek cihly }
		Mc:=Mt;				{ nov  pozice cihly }
	EndIf;		
EndIf;

EndProc;

{ -------------------------- zv˜¨en¡ zc‚ny p©i h©e -------------------------- }

Proc Zvys_Scenu

If Scena=9 Then Return(0); EndIf;	{ je ji‘ posledn¡ sc‚na }
Scena:=Scena+1;				{ zv˜¨en¡ ‡¡sla sc‚ny }
Window(0,0,319,9);			{ horn¡ p s }
Pozadi;					{ zobrazen¡ horn¡ ‡ sti }
Window(0,10,120,169);			{ lev  ‡ st }
Pozadi;					{ zobrazen¡ lev‚ ‡ sti }
Window(200,10,319,169);			{ prav  ‡ st }
Pozadi;					{ zobrazen¡ prav‚ ‡ sti }
Window(0,170,319,199);			{ spodn¡ ‡ st }
Pozadi;					{ zobrazen¡ spodn¡ ‡ sti }
Window(0,0,319,199);			{ nastaven¡ zase pln‚ho okna }

EndProc;

{ =========================================================================== }
{									      }
{                            hlavn¡ procedura                                 }
{									      }
{ =========================================================================== }

Proc Main             		{ hlavn¡ procedura }

Init;				{Inicializace programu, titulek}

Do

	Select;				{volba £rovnˆ a po‡ te‡n¡ v˜¨ky}
	Pad:=$ffff;			{p©¡znak pro zobrazen¡ cihly}
	Zobraz_Vse;			{zobrazen¡ cel‚ nov‚ sc‚ny}
	Pristi:=Rnd(7);			{p©¡prava p©¡¨t¡ cihly}

{ -------------------------- generace nov‚ cihly ---------------------------- }

Do
	Chyba2:=0;
	Nc:=-20;			{vypnut¡ star‚ cihly}
	Tt:=Pristi;			{nov  cihla}
	Pristi:=Rnd(7);			{p©¡prava p©¡¨t¡ cihly}
	Mt:=3;				{v˜choz¡ pozice cihly}
	Nt:=-1;				{v˜choz¡ © dek cihly}
	Pad:=$ffff;			{p©¡znak, ‘e cihla pad  pomalu}
	Posun;				{zobrazen¡ nov‚ cihly}
	On Chyba Exit;			{posun se neprovedl - konec hry}

{ ------------------------- cyklus pad n¡ cihly ------------------------------ }

	Do
		CitPad:=Rychlosti(Scena) And Pad; {v˜choz¡ stav ‡¡ta‡e kroku}

		Do
			Mt:=Mc;
			Nt:=Nc;
			Tt:=Tc;

			On CitPad=0 Exit; {konec kroku - cihla se posune dol–}
			CitPad:=CitPad-1;

			If TestKey Then
				Znak:=GetKey >> 8;
				Chyba2:=0;

				If (Znak=Mezera) Or (Znak=Dolu) Then 
					Vymaz_Cihly;
					Pad:=0; 
					CitPad:=0;
				EndIf;

				If Znak=Vlevo Then
					Mt:=Mt-1;
					Posun;
				EndIf;

				If Znak=Vpravo Then
					Mt:=Mt+1;
					Posun;
				EndIf;

				If (Znak=Rotace) Or (Znak=Enter) Then
					Tt:=RotCih(Tc);
					Posun;
				EndIf;

				If Znak=Nahoru Then
					Zvys_Scenu;
				EndIf;					

				If Znak=Esc Then
					Video(3);	{textov˜ videom¢d}
					Pic(Maska,0,0);	{zobrazen¡ maskovac¡ obrazovky}
					GetKey;		{‡ek n¡ na stisk nˆjak‚ kl vesy}
					Video(4);	{videom¢d 4}
					Palette(0,11,12,15,?,?,?,?,?,?,?,
						?,?,?,?,?,?); {definice barev}
					Zobraz_Vse;
				EndIf;

			EndIf;

			Wait(1);	{mal  prodleva}
		EndDo;

		Nt:=Nt+1;		{po‘adovan  nov  sou©adnice}
		Posun;			{pokus o posun cihly dol–}
		On Chyba2 Exit;
		Chyba2:=Chyba;
	EndDo;

{ ------------------------ ulo‘en¡ cihly do pole ---------------------------- }

	Ukc:=0;					{ukazatel v defini‡n¡ tabulce cihly}
	Cihla;				{zobrazen¡ cihly}
	Do
		M1t:=Mc+(Ukc Mod 4);
		N1t:=Nc+(Ukc/4);
		Bk:=TabCih(Ukc+(Tc*16));	{definice kamene z tabulky cihly}
		If (Bk>0) And (N1t>=0) Then 
			Pole(M1t+(10*N1t)):=Bk;
		EndIf; 
		Ukc:=Ukc+1;			{zv˜¨en¡ ukazatele v tabulce}
		On Ukc=16 Exit;			{jsou ji‘ v¨echny kameny - konec}
	EndDo;

{ ------------------------ test, zda vznikly pln‚ © dky --------------------- }

	Ukc:=0;
	Nt:=Nc;
	FulRad(0):=0;
	FulRad(1):=0;
	FulRad(2):=0;
	FulRad(3):=0;

	Do
		On Nt=20 Exit;
		Mt:=0;

		If Nt>=0 Then
		Do
			If Pole(Mt+(Nt*10))>0 Then
				FulRad(Ukc):=FulRad(Ukc)+1;
			EndIf;
			Mt:=Mt+1;
			On Mt=10 Exit;
		EndDo;
		EndIf;

		Nt:=Nt+1;
		Ukc:=Ukc+1;
		On Ukc=4 Exit;
	EndDo;


{ ----------------------- pokud je pln˜ © dek, zablik n¡ -------------------- }

	If (FulRad(0)=10) Or (FulRad(1)=10) Or (FulRad(2)=10) Or (FulRad(3)=10) Then

	N:=0;			{‡¡ta‡ bliknut¡}
	Do
		Nt:=Nc;
		Ukc:=0;
		Do
			On Nt=20 Exit;

			If FulRad(Ukc)=10 Then
				FBox(0,120,10+(Nt*8),199,17+(Nt*8));
			EndIf;

			Ukc:=Ukc+1;
			On Ukc=4 Exit;
			Nt:=Nt+1;
		EndDo;

		Wait(1);
		Nt:=Nc;
		Ukc:=0;

		Do
			On Nt=20 Exit;

			If FulRad(Ukc)=10 Then
				Xk:=120;
				Mt:=Nt*10;
				Yk:=10+(Nt*8);

				Do
					Bk:=Pole(Mt);
					Kamen;
					Xk:=Xk+8;
					Mt:=Mt+1;
					On Xk=200 Exit;
				EndDo;
			EndIf;

			Ukc:=Ukc+1;
			On Ukc=4 Exit;
			Nt:=Nt+1;
		EndDo;

		Wait(1);
		N:=N+1;
		On N=3 Exit;
	EndDo;

{ -------------------------------- p©esun kamen– --------------------------- }

	Ukc:=4;				{ ukazatel pln˜ch © dk– }
	N:=((Nc+4)*10);			{ ukazatel nov˜ch kamen– }
	Nt:=N;				{ ukazatel p–vodn¡ch kamen– }
	Yk:=((Nc+4)*8)+10;		{ pozice nov‚ho © dku }

	Do
		Xk:=192;
		Yk:=Yk-8;
		On Yk<10 Exit;

				{ p©esko‡en¡ pln˜ch © dk– }		
		Do
			Ukc:=Ukc-1;
			On Ukc<0 Exit;
			On FulRad(Ukc)<>10 Exit;
			Nt:=Nt-10;
		EndDo;

				{ zobrazen¡ jednoho nov‚ho © dku }
		Mt:=9;
		Do		
			Nt:=Nt-1;
			N:=N-1;

			If (N<200) And (N>=0) Then
				If Nt>=0 Then Bk:=Pole(Nt); Else Bk:=0; EndIf;
				Pole(N):=Bk;
				Kamen;
			EndIf;

			Xk:=Xk-8;
			Mt:=Mt-1;
			On Mt<0 Exit;
		EndDo;

		On N=0 Exit;
	EndDo;

{ -------------------------- zap¡p n¡ -------------------------------------- }

	Ukc:=0;
	Do
		If FulRad(Ukc)=10 Then 
			VSyn(1); 
			Sound(800); 
			VSyn(1); 
			Sound(0); 
		EndIf;
		Ukc:=Ukc+1;
		On Ukc=4 Exit;
	EndDo;

	EndIf;

EndDo;					{ generace dal¨¡ cihly }

{ ---------------------------- uzav©en¡ jedn‚ hry --------------------------- }

N:=0;
Do
	HSyn(95); 
	Sound(900); 
	HSyn(73); 
	Sound(0); 
	N:=N+1;
	On N=4 Exit;
EndDo;

Y1:=10;
Y2:=162;

Do
	Window(120,Y1,199,Y1+7);	{ horn¡ linka }
	Pic(Zaver,120,10);		{ zobrazen¡ horn¡ho © dku z vˆru }
	Window(120,Y2,199,Y2+7);	{ doln¡ linka }
	Pic(Zaver,120,10);		{ zobrazen¡ doln¡ho © dku z vˆru }
	Wait(1);			{ prodleva }

	Y1:=Y1+8;
	Y2:=Y2-8;
	On Y1>Y2 Exit;
EndDo;

If TestKey Then GetKey; EndIf;		{ vypr zdnˆn¡ bufferu kl vesnice }
GetKey;					{ ‡ek n¡ na stisk kl vesy }

EndDo;					{ dal¨¡ hra }

EndProc;



{ °°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°° }
{									      }
{        Modulov  ‡ st - definuje objekty, kter‚ se p©ipoj¡ k programu        }
{									      }
{ °°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°° }

{ ------------------------- £vodn¡ titulek ---------------------------------- }

Link(Titul1,"Titul1.scr");
Link(Titul2,"Titul2.scr");
Link(Titul3,"Titul3.scr");
Link(TitulTxt,"TitulTxt.scr");
Link(Letadlo1,"Letadlo1.scr");
Link(Letadlo2,"Letadlo2.scr");
Link(Letadlo3,"Letadlo3.scr");
Link(Letadlo4,"Letadlo4.scr");

{ --------------------- volba £rovnˆ a po‡ te‡n¡ v˜¨ky ---------------------- }

Link(Mapa,"Mapa.scr");
Link(MapaL0,"MapL0.scr");
Link(MapaL1,"MapL1.scr");
Link(MapaL2,"MapL2.scr");
Link(MapaL3,"MapL3.scr");
Link(MapaL4,"MapL4.scr");
Link(MapaL5,"MapL5.scr");
Link(MapaL6,"MapL6.scr");
Link(MapaL7,"MapL7.scr");
Link(MapaL8,"MapL8.scr");
Link(MapaL9,"MapL9.scr");
Link(MapaH0,"MapH0.scr");
Link(MapaH4,"MapH4.scr");
Link(MapaH7,"MapH7.scr");
Link(MapaH10,"MapH10.scr");
Link(MapaH13,"MapH13.scr");
Link(MapaHL,"MapHL.scr");

Link(Maska,"Maska.scr");

{ -------------------------- pozad¡ jednotliv˜ch sc‚n ----------------------- }

Link(Scena0,"Scena0.scr");
Link(Scena1,"Scena1.scr");
Link(Scena2,"Scena2.scr");
Link(Scena3,"Scena3.scr");
Link(Scena4,"Scena4.scr");
Link(Scena5,"Scena5.scr");
Link(Scena6,"Scena6.scr");
Link(Scena7,"Scena7.scr");
Link(Scena8,"Scena8.scr");
Link(Scena9,"Scena9.scr");

{ ------------------------------ fonty -------------------------------------- }

Link(Cga2Fnt0,"Cga2Fnt0.scr");
Link(Cga2Fnt1,"Cga2Fnt1.scr");
Link(Cga2Fnt2,"Cga2Fnt2.scr");
Link(Cga2Fnt3,"Cga2Fnt3.scr");

{ -------------------------------- cihly ------------------------------------ }

Link(K1,"K1.scr");
Link(K2,"K2.scr");
Link(K3,"K3.scr");
Link(K4,"K4.scr");
Link(K5,"K5.scr");
Link(K6,"K6.scr");
Link(K7,"K7.scr");

Link(C0,"C0.scr");
Link(C1,"C1.scr");
Link(C2,"C2.scr");
Link(C3,"C3.scr");
Link(C4,"C4.scr");
Link(C5,"C5.scr");
Link(C6,"C6.scr");
Link(C7,"C7.scr");
Link(C8,"C8.scr");
Link(C9,"C9.scr");
Link(C10,"C10.scr");
Link(C11,"C11.scr");
Link(C12,"C12.scr");
Link(C13,"C13.scr");
Link(C14,"C14.scr");
Link(C15,"C15.scr");
Link(C16,"C16.scr");
Link(C17,"C17.scr");
Link(C18,"C18.scr");

Link(D0,"D0.scr");
Link(D1,"D1.scr");
Link(D2,"D2.scr");
Link(D3,"D3.scr");
Link(D4,"D4.scr");
Link(D5,"D5.scr");
Link(D6,"D6.scr");
Link(D7,"D7.scr");
Link(D8,"D8.scr");
Link(D9,"D9.scr");
Link(D10,"D10.scr");
Link(D11,"D11.scr");
Link(D12,"D12.scr");
Link(D13,"D13.scr");
Link(D14,"D14.scr");
Link(D15,"D15.scr");
Link(D16,"D16.scr");
Link(D17,"D17.scr");
Link(D18,"D18.scr");

{ ----------------------------------- z vˆr hry ----------------------------- }

Link(Zaver,"Zaver.scr");
