
    =======================================================================

    This  version  of  HPACK has been given a somewhat limited release as a
    prototype copy for evaluation purposes only.  A general release of  the
    prototype  will  be  made when I get feedback on this version (see "The
    HPACK Release" below), and should take place within a few weeks of  the
    limited release.  The final release should be fully compatible with the
    current  release  unless a major bug crops up somewhere in the archiver
    (which I can't really see happening), but may take a  few  weeks  as  I
    need feedback on moving it to different operating systems before I call
    it a final release.

    Note: HPACK is a 100% matter product.  In the unlikely  event  that  it
    should  contact  antimatter  in any form, a catastrophic explosion will
    result.

    =======================================================================

Running HPACK: MSDOS
====================

 The MSDOS distribution of HPACK contains the following files:

    README  .1ST - This file.
    HPACKA  .EXE - Prototype HPACK archiver (the final release is HPACK.EXE)
    HPACK   .DOC - The HPACK documentation.
    HPACKEXT.DOC - The extended documentation  for  advanced  users.  This  is
                   contained in a  secured archive HPACKEXT.HPK to demonstrate
                   how secured archives work.
    KEYRING .PUB - My public key,  needed  for  the  authentication  check  on
                   HPACKEXT.DOC.

   Before you do anything else, read the documentation.  YOU HAVEN'T READ  THE
 DOCUMENTATION  HAVE  YOU,  YOU'VE COPIED HPACK ONTO YOUR HARD DISK AND RUN IT
 AND NOW YOU'RE WONDERING WHY YOU JUST GOT A "1702 Controller not ready" ERROR
 MESSAGE AREN'T YOU??!??  Well anyway, read the  docs  (or  failing  that  run
 HPACK  with no args, which will print a help screen).  Then back up your hard
 disk and try running HPACK.  Since this is a prototype version  and  since  I
 have  only  tested  some  of  the features so many times before I got sick of
 thinking of more devious ways to make it crash, you may just perchance find a
 bug  I  overlooked.   In  this   case   let   me   know   by   Usenet   email
 (pgut1@cs.aukuni.ac.nz), Fidonet email (3:772/90.0, this is probably about as
 reliable  a  link as using carrier mackerel across the Sahara), snail mail to
 24 Durness Pl, Orewa, Auckland, New Zealand, or (for the  quickest  response)
 calling  me  on  +64  9 426-5097 within sane hours (9am-11pm NZT).  If it's a
 genuine bug (there are some things which are more misfeatures than bugs) I'll
 fix it and provide a new version as soon as I can.

 The latest version of the MSDOS HPACK will always be available on:

   Black Cat BBS  +64 9 360-2506

 as the file HPACK<version-number>.ZIP.  Log on as "HPACK" with  no  password.
 This  account  has  access  to  a  files  area containing copies of HPACK for
 various systems, and a message area for feedback on HPACK.

 Testimony from one of our satisfied customers:

 "I hear this crash and I find a rock, wrapped in paper,  next  to  my  living
 room  window.   I open up the note and it says, 'You want it in writing?  You
 got it. Next time, use a *real* archiver.  HPACK.  We know where you live'."

 So why aren't *you* using HPACK?

Running HPACK: Unix:
====================

   The  Unix  version of HPACK is distributed in source form as hpack75.tar.Z.
 It has been tested under POSIX, Irix, and Ultrix  and  is  known  to  compile
 succesfully  on  these  systems  (the tar.Z was created by moving HPACKed DOS
 source onto  a  DECstation  and  extracting  and  re-compressing  it  there).
 Hopefully  it  should  be  possible  to  compile  it  on other systems with a
 minimum amount of modification.  Before compiling it on  a  new  system,  you
 should briefly read at least the second half  of  HPACKSTD.TXT  in  the  DOCS
 directory  (everything  after  the  "Getting Started" heading) which contains
 notes on porting and an overview of the system-specific  functions  contained
 in  the  code.   There is a makefile in DOCS, copy it into whatever your main
 directory is, edit it for your system (Unix flavour,  big  or  little-endian,
 etc),  also  edit  DEFS.H as appropriate.  Depending on your Unix flavour you
 will probably have to tune SYSTEM.H and UNIX.C a bit  (eg  if  you've  got  a
 mkdir()  or not, a memmove(), a rename(), and a few other odds and ends).  It
 took about half an hour for Ultrix (of  which  about  20  minutes  was  spent
 waiting  for  the  compiler)  so  hopefully  it  won't  be too bad.  The only
 problems you may run into is with running it on 64-bit systems, I don't  have
 any  experience  with them so maybe I'm just being pessimistic, certainly the
 move from 16 to 32-bit showed up only one minor problem which  was  fixed  in
 about  10  minutes.   The other small problem is that the RSA decryption code
 only works on  little-endian  systems  -  everything  I  have  access  to  is
 little-endian so the big-endian version is left as an exercise for the reader
 (an 8-bit non-endian version should be simple to implement, but very slow).

 Once you get it going, send the diffs to me (pgut1@cs.aukuni.ac.nz) and  I'll
 integrate  them  into the code.  If you can't get it to compile on one of the
 above systems, I can arrange to mail you an executable - hassle me via email.

 The latest version of the UNIX HPACK will always be available on:

   Black Cat BBS  +64 9 360-2506

 as the file HPACK<version-number>.TZ (this is a tar.Z mangled  to  eight-dot-
 three).   Log  on  as "HPACK" with no password.  This account has access to a
 files area containing copies of HPACK for various systems, and a message area
 for feedback on HPACK.

Running HPACK: OS/2:
====================

   This  version  is  still  under  development  (since  it's not just a bound
 version of the DOS code but has major alterations to  handle  all  of  OS/2's
 extra features).

Technical Stuff: HPACK Shortcomings:
====================================

   HPACK  currently  has available a reasonable level of functions.  There are
 some things which I wasn't sure about adding,  or  what  people  would  want.
 There  were others which I wasn't sure are used too often and so have put off
 adding.  Some of them are:

   - Powerful directory handling (mkdir, rmdir, mvdir, mv, ren, etc) for HPACK
 archives.   In most cases the job itself is trivial (that word again - all of
 the above actions involve adding a few lines of code), however doing all  the
 checking involved is not, and I'm not sure if anyone would ever use this sort
 of thing.

   -  Encryption  currently does nothing.  The code exists, and has been added
 in some places  (for  example  the  authentication  checking)  but  the  main
 encryption  code  has been zapped out.  If people can't live without this let
 me know and I'll enable it in a later release.

   - Handling of multidisk archives.  Currently these can  be  written  to but
 not  read  from (there are  several complications with reading archives which
 are split across multiple disks which are compounded by the  highly  flexible
 archive format used by HPACK).  I'll  work  on  this area if there is a great
 demand for it.

                            -----------------------

   All  of  the  above  issues will be addressed as soon as people let me know
 what they want me to work on.

Ghod it's slow!
===============

   I know - it's difficult to have both speed and portability (or to rehash an
 old saying: "Fast, portable, good - choose any two").  The next thing I'll be
 doing  is rewriting some parts of it in assembly language, which should speed
 things up a bit.  One point is that running the MSDOS HPACK on an XT is *not*
 recommended - the 8086 CPU just can't handle some of the operations performed
 by HPACK at any sort of reasonable speed.  That's not to say that HPACK won't
 run  on  XT's  -  it  will run on an XT, it just won't run very fast.  A much
 easier solution is simply to run it as a background task on a Personal  Iris,
 RS6000, or whatever.

The HPACK Release:
==================

   Once  I've  stomped  all  the bugs anyone can find, and finalised any extra
 features people want, I'll be releasing the *real*  version  of  HPACK.   The
 plan  is  to  distribute  it as shareware (well, make-a-donation-ware) with a
 recommended donation of about $20 for basic registration (but you're  welcome
 to  send me money now if you feel like it - I'm a perpetually broke student).
 I'm not sure what the conditions will be  for  versions  of  HPACK  with  the
 capability  to  create  authenticated  archives - contact me if you want more
 information. Once the versions for systems other than just MSDOS,  Unix,  and
 OS/2 become available this will hopefully ease the problem of moving archives
 across to different machines.

 The prototype HPACK will check the archive ID and print a reminder to get the
 new version of HPACK once it's released.  Note that any use of HPACK, in  any
 manner  whatsoever,  will  increase the amount of  disorder in  the universe.
 Thus repeated use of HPACK will  ultimately  lead to the  heat death  of  the
 universe.

Availability of HPACK for Other Systems:
========================================

   Anyone want to port HPACK to their particular pet system?  It's about  450K
 of  ANSI  C  code,  with  some  low-level system I/O thrown in to confuse you
 (through some mysterious process this amount increases by about 10K  a  week,
 so  get it now before it gets too much).  A knowledge of assembly language is
 probably  necessary on a low-end PC to speed up a few of the core compression
 routines.  If you want to port it to any other system, drop me a line.....

 Currently HPACK is in the process of  being  ported, or  has been  ported, to
 various systems.  The systems, together  with email  contact  addresses/phone
 numbers for the people claiming to be working on ports, are:

  HPACK/DOS     Peter Gutmann   - pgut1@cs.aukuni.ac.nz or
                                  peterg@kcbbs.gen.nz
                                  Ph.(09) 426-5097
  HPACK/UNIX    Stuart Woolford - c/o Peter Gutmann
                                  Ph.(09) 426-3464
  HPACK/OS2     Conrad Bullock  - conrad@comp.vuw.ac.nz
                                  Ph.(04) 770-657
  HPACK/IIGS    Corey Murtagh   - Corey_Murtagh@kcbbs.gen.nz
                                  Ph.(09) 277-5800
                Bevan Edwards   - Bevan_Edwards@kcbbs.gen.nz
                                  Ph.(09) 537-3628
  HPACK/MAC     Jonathan Histed - turbo@nacjack.gen.nz
                                  Ph.(09) 524-2496
                Chris Wylie     - cwyl1@cs.aukuni.ac.nz
                                  Ph.(09) 479-3590

Foreign-Language Versions of HPACK
==================================

    All  the  text  strings  contained  within  HPACK  are  generated  from  a
 definitions file via a preprocessing tool.  To create versions  of  HPACK  in
 other  languages,  all  that  is  necessary  is  to translate the text in the
 definitions file, run it through the preprocessor, and rebuild  HPACK.   This
 will  then  change  all the text strings, prompts, etc into the form given in
 the definitions file.  This file is  available  on  request  from  the  HPACK
 author.

Credits:
========

 Thanks to the following people for helping in HPACK:

 Stuart Woolford for the Unix port and endless arguments about the code.
 Conrad Bullock for the OS/2 port.

 Steven  Perreau, Hexen Hammer, and  David  Dix  for  providing  a  discussion
   (read: flaming argument) forum for HPACK developers on their BBS's over the
   years.

 Lynn Prentice for allowing the use of the Black Cat BBS to distribute HPACK.

 All kcbbs users for putting up with endless stirring about HPACK.

The HPACK Warranty:
===================

1. Customer Obligations
-----------------------

 1.1.   Customer  assumes  full  responsibility  that  this  program meets the
 specifications,  capacity,  capabilities,  and  other  requirements  of  said
 customer, and agrees not to bother the author if the program does not perform
 as expected, or performs other than expected, or does not perform at all.

 1.2.   Customer  assumes  full responsibility for any deaths or injuries that
 may result from the normal or abnormal operation of  this  program.   In  the
 event  of  casualties  exceeding 1000 persons or property damage in excess of
 $10 million, customer agrees that he or she has stolen  the  program  and  we
 didn't even know he or she had it.

 1.3.   Customer  agrees not to say bad things about the program or the author
 to anyone claiming to be from "60 Minutes".

2. Very Limited Warranty and Conditions of Sale
------------------------------------------------

 2.1.  For a period of 90 minutes, commencing from the time you first  thought
 about  getting  this  program, we warrant that this program may or may not be
 free of any manufacturing defects.  It will be replaced during  the  warranty
 period  upon  payment  of an amount equal to the original purchase price plus
 $10.00 for handling.  This warranty is void if the program has been  examined
 or run by the user, or if the manual has been read.

 2.2.   This program is sold on an AS WAS basis.  The author makes no warranty
 that it is, in fact, what we say it is in our propaganda,  or  that  it  will
 perform  any useful function.  We have no obligation whatsoever other than to
 provide you with this fine disclaimer.

 2.3.  Some countries do not allow limitations  as  to  how  long  an  implied
 warranty lasts, so we refuse to imply anything.

 2.4.   There is an extremely small but nonzero chance that, through a process
 known as "tunnelling", this program  may  spontaneously  disappear  from  its
 present  location and reappear at any random place in the universe, including
 your neighbours computer system.  The author will not be responsible for  any
 damages or inconvenience that may result.

3. Limitation of Liability
--------------------------

 3.1.   We  have no liability or responsibility to the customer, the customers
 agents, our creditors, your creditors, or anyone else.
