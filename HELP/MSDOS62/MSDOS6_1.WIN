
                                                                            
                                                                            
                              MS-DOS 6.2 - θαst 1                           
                                                                            
                                                                            


----------------------------------------------------------------------------
                            How To Use MS-DOS Help

 Choose a topic below.
 
 <Navigating Through MS-DOS Help>
 <Searching for Text in MS-DOS Help>
 <Getting Context-Sensitive Help>
 <Using Menus and Commands>
 <Using a Dialog Box>
 <Starting MS-DOS Help from the Command Line>
 <Using MS-DOS Help with the Keyboard>
 
 To choose a topic, click it. Or, press TAB until you select the topic, and
 then press ENTER.
 
 To exit MS-DOS Help, choose Exit from the File menu. Or, press ALT and
 then F. Then press X.

----------------------------------------------------------------------------
                       Navigating Through MS-DOS Help
 
 To scroll the information in the MS-DOS Help window, click the arrows in
 the scroll bar, or press PAGE DOWN or PAGE UP.
 
 Choosing Jumps
 
 You move from topic to topic in MS-DOS Help by choosing jumps. Jumps are
 links between topics and are enclosed by angle brackets (< >).
 
 To move the cursor forward to a jump
 
   Press TAB until you select the jump you want. Or, press the first letter
   in the jump.
 
 To move the cursor backwards to a jump
 
   Press SHIFT+TAB until you select the jump you want. Or, press SHIFT and
   the first letter in the jump.
 
 To display a topic
 
   Click the jump. Or, move the cursor to the jump, and then press ENTER.
 
 To display the MS-DOS Help Contents
 
    Click the Contents button at the bottom of the screen, or press ALT+C.
 
 To display the next topic in MS-DOS Help
 
    Click the Next button at the bottom of the screen, or press ALT+N.
 
 To display topics you have previously chosen
 
   Click the Back button at the bottom of the screen, or press ALT+B.

----------------------------------------------------------------------------
                      Searching for Text in MS-DOS Help
 
 Use the Find command from the Search menu to search for a specific
 string of text in MS-DOS Help. The Find command is a full-text
 search--that is, it searches through all the topics in MS-DOS Help.
 
 In the Find command dialog box, specify the text you want to search
 for, and then choose OK. MS-DOS Help searches forward from the
 cursor for the first occurrence of the search text. When it finds
 an occurrence of the text, it displays the topic the text is
 contained in. To find the next occurrence of the search text in
 MS-DOS Help, press F3.
 
 Select Match Upper/Lowercase to make the search case-sensitive.
 Select Whole Word to find only whole-word occurrences of the search
 text.

----------------------------------------------------------------------------
                        Getting Context-Sensitive Help
 
 The following are procedures for getting context-sensitive help.
 
 To get help on an MS-DOS Help menu
 
   Select the File menu by pressing ALT, or select the Search menu by
   pressing ALT and then the RIGHT ARROW key. Then press F1.
 
 To get help on a command
 
   Select the menu by pressing ALT and the first letter of the menu. Then
   use the UP ARROW or DOWN ARROW key to select the command you want, and
   press F1.
 
 To get help on a dialog box
 
   Press F1 or click the Help button.

----------------------------------------------------------------------------
                           Using Menus and Commands
 
 Use the menu bar at the top of the screen to select menus and commands.
 
 Menu action          With a mouse                 With a keyboard
 -----------------    -------------------------    -------------------------
 Display a menu.      Move the mouse pointer to    Press ALT to highlight
                      the menu name, then click    menu letters, then press
                      it.                          the letter key for the
                                                   menu you want to display.
 
 Choose a command.    Click the command name.      Press the letter key that
                                                   matches the highlighted
                                                   letter on the command.
 
 Cancel a selected    Click outside the menu.      Press ESC.
 command.

----------------------------------------------------------------------------
File Menu
 
The File menu contains the Print and Exit
commands.
 
To display a menu:
 
With a mouse             With a keyboard
-----------------        ------------------------
Move the mouse pointer   Press ALT to highlight
to the menu name, then   menu letters, then press
click it.                the letter key for the
                         menu you want to display.
 
To choose a command:
 
With a mouse             With a keyboard
-----------------        ------------------------
Click the command name.  Press the letter key that
                         matches the highlighted
                         letter on the command.
 
----------------------------------------------------------------------------
Search Menu
 
The Search menu contains the Find and Repeat Last
Find commands.
 
To display a menu:
 
With a mouse             With a keyboard
-----------------        ------------------------
Move the mouse pointer   Press ALT to highlight
to the menu name, then   menu letters, then press
click it.                the letter key for the
                         menu you want to display.
 
To choose a command:
 
With a mouse             With a keyboard
-----------------        ------------------------
Click the command name.  Press the letter key that
                         matches the highlighted
                         letter on the command.
 
----------------------------------------------------------------------------
Help Menu
 
The Help menu contains the How to Use MS-DOS Help
and About commands.
 
To display a menu:
 
With a mouse             With a keyboard
-----------------        ------------------------
Move the mouse pointer   Press ALT to highlight
to the menu name, then   menu letters, then press
click it.                the letter key for the
                         menu you want to display.
 
To choose a command:
 
With a mouse             With a keyboard
-----------------        ------------------------
Click the command name.  Press the letter key that
                         matches the highlighted
                         letter on the command.

----------------------------------------------------------------------------
                              Using a Dialog Box
 
 MS-DOS Help displays dialog boxes when you choose commands that have
 options.
 
 Dialog box action    With a mouse                 With a keyboard
 -----------------    -------------------------    -------------------------
 Select a text box.   Move the mouse pointer to    Press TAB until the
                      the text box, then click     cursor is in the text
                      it.                          box.
 
 Choose an option.    Click the option.            Move to an option with
                                                   the direction keys.
 
 Turn a check box     Click the check box.         Use TAB to move the
 on or off.                                        cursor to the check box,
                                                   then press the SPACEBAR.
 
 Choose a command     Click the command button.    Use TAB to move the
 button.                                           cursor to the command
                                                   button, then press ENTER.
 
----------------------------------------------------------------------------
                  Starting MS-DOS Help from the Command Line
 
 The HELP command starts MS-DOS Help. You can use it two ways:
 
   To display the table of contents, type HELP at the command prompt, and
   then press ENTER.
 
   To display help about a particular command, type HELP followed by the
   command you want help on. For example, to display help about the COPY
   command, type the following at the command prompt, and then press ENTER:
 
   help copy
 
----------------------------------------------------------------------------
                      Using MS-DOS Help with the Keyboard
 
 The following topics explain how to navigate through MS-DOS Help and find
 the topics you want.
 
 Choose a topic below.
 
 <Cursor-Movement Keys>
 <Help Keys>
 <Navigation Keys>
 <Scrolling Keys>
 
----------------------------------------------------------------------------
                             Cursor-Movement Keys
 
 To move the cursor             Press this key combination
-----------------------------------------------------------
 One character left             LEFT ARROW
 One character right            RIGHT ARROW
 One word left                  CTRL+LEFT ARROW
 One word right                 CTRL+RIGHT ARROW
 One line up                    UP ARROW
 One line down                  DOWN ARROW
 To the beginning of a line     HOME
 To the end of a line           END
 To the beginning of a topic    CTRL+HOME
 To the end of a topic          CTRL+END
 
----------------------------------------------------------------------------
                                Scrolling Keys
 
 To scroll            Press this key combination
-------------------------------------------------
 One line up          CTRL+UP ARROW
 One line down        CTRL+DOWN ARROW
 One window up        PAGE UP
 One window down      PAGE DOWN
 
----------------------------------------------------------------------------
                                Navigation Keys
 
 To                                               Press these keys
-------------------------------------------------------------------
 Search for text                                  ALT+S,F
 Repeat a search                                  F3
 Move the cursor to the next jump                 TAB
 Move the cursor to the previous jump             SHIFT+TAB
 Move the cursor to the next jump starting        letter
    with a particular letter
 Move the cursor to the previous jump             SHIFT+letter
    starting with a particular letter
 Display previously displayed Help topics         ALT+B
 Display the next topic in MS-DOS Help            ALT+N
 Display the previous topic in MS-DOS Help        SHIFT+CTRL+F1
 
----------------------------------------------------------------------------
                                   Help Keys
 
 To display                            Press
---------------------------------------------
 MS-DOS Help Contents                  F1
 Help on a selected menu or command    F1
 Help on a dialog box                  F1
 
----------------------------------------------------------------------------
Print Dialog
 
Use to print the current topic to a printer or
to a file.
 
If you choose the Printer option, MS-DOS Help
prints to the printer connected to the port
indicated in parenthesis. To print to a printer
connected to a different port, choose the Printer
Setup button.
 
If you choose the File option, type the filename
you want in the text box. MS-DOS Help prints the
file to the current directory, unless you specify
a different pathname.
 
----------------------------------------------------------------------------
Printer Setup Dialog
 
Specifies a printer port. MS-DOS will print to the
printer connected to the port you choose.
 
----------------------------------------------------------------------------
Find Command Dialog Box
 
Finds a specific string of text.
 
+--------------- Find ------------------+
|                                       |    Enter text
| Find What:                       <-------  here.
|                                       |
|   Match Upper/Lowercase   Whole Word <---- Select type.
|                                       |
+---------------------------------------+  Then choose <OK>.
 
Select Match Upper/Lowercase for a case-sensitive match,
or select Whole Word to exclude matches within words or
strings. Whole-word searches recognize a match only when the
text is surrounded by blanks, punctuation, or other special
characters. The search text can be 127 characters long.
 
----------------------------------------------------------------------------
Print Command
 
Use to print the current topic to a printer or to
a file.
 
----------------------------------------------------------------------------
Exit Command
 
Quits MS-DOS Help.
 
----------------------------------------------------------------------------
Find Command
 
Searches for text. You can specify a case-sensitive match
or a whole-word match.
 
----------------------------------------------------------------------------
Repeat Last Find Command
 
Repeats the search you last specified with the Find
command.
 
If you have not used the Find command since you started
MS-DOS Help, Repeat Last Find searches for the next
occurrence of:
 
  The word the cursor is on.
  The word to the cursor's left, if the cursor isn't
  on a word.
 
----------------------------------------------------------------------------
How to Use MS-DOS Help
 
Provides information about:
 
  Navigating through MS-DOS Help.
  Finding the topics you want in MS-DOS Help.
  Using the MS-DOS Help menus, commands, and dialog
  boxes.
 
----------------------------------------------------------------------------
About Command
 
Displays the version number and copyright information of
MS-DOS Help.
 
----------------------------------------------------------------------------
Out of Memory
 
More memory was required than is available. To
correct this:
 
  Exit and run the MemMaker program.
 
----------------------------------------------------------------------------
Timeout
 
MS-DOS Help did not receive information from a
printer within a predetermined amount of time.
Check the printer to make sure it is functioning
properly.
 
----------------------------------------------------------------------------
Out of Paper
 
The printer is out of paper, or it is not turned
on.

----------------------------------------------------------------------------
Internal Error
 
An internal error occurred in MS-DOS Help that
should be reported to Microsoft.
 
----------------------------------------------------------------------------
No Search String
 
The Find What text box was empty when you used
the Find command. Return to the Find What text
box and enter text before choosing <OK>.
 
----------------------------------------------------------------------------
Match Not Found
 
MS-DOS Help could not find the text you specified.
 
The cursor remains at the location where you
started the search.
 
----------------------------------------------------------------------------
Device Fault
 
MS-DOS Help has detected a fault at the printer.
Make sure that:
 
  The printer is attached to the device.
  The printer online indicator light is still on.
  The printer power is still on.
  The printer cable is securely connected to the
  printer and the computer.
  The printer is not out of paper.
 
----------------------------------------------------------------------------
Device I/O Error
 
You used the File menu's Print command, and MS-DOS
Help could not create the file you specified.
 
For example, you may have tried to print:
 
  To a write-protected share on a network.
  To a read-only file.
  With too many files open.
 
----------------------------------------------------------------------------
Disk Full
 
There isn't enough room on the specified disk to
save the file you specified. Change disks or
specify a different drive.
 
----------------------------------------------------------------------------
Bad File Name
 
The filename you specified either contains too
many characters or characters that are not allowed
in filenames.
 
----------------------------------------------------------------------------
Permission Denied
 
An attempt was made to write to a write-protected
drive or to a read-only file.
 
To avoid the read-only conflict, use a different
filename or drive. Or, if you're using a floppy
disk, remove the tab from it.
 
----------------------------------------------------------------------------
Floppy Disk Not Ready
 
The floppy disk drive door is open, or no floppy
disk is in the drive.
 
----------------------------------------------------------------------------
Disk-Media Error
 
A physical flaw has been detected on the disk,
or MS-DOS Help does not recognize the format of
the disk you are attempting to use. Use a
different disk, or exit and reformat the current
disk.
 
----------------------------------------------------------------------------
Too Many Files
 
You have too many files located in your root
directory. Create the file in a subdirectory.
 
----------------------------------------------------------------------------
Path Not Found
 
MS-DOS Help was unable to find the path specified.
Check to see if you typed the name of the path
correctly.
 
----------------------------------------------------------------------------
Insert Disk Prompt
 
You have referred to your floppy disk drive as A
when it is B, or B when it is A.
 
----------------------------------------------------------------------------
Path/File Access Error
 
Make sure the path and filename you specified is
correctly typed.
 
Also, make sure you are not printing to a read-
only file.

----------------------------------------------------------------------------
Use the scroll bars to see more commands. Or, press the PAGE DOWN key. For
more information about using MS-DOS Help, choose How to Use MS-DOS Help
from the Help menu, or press F1. To exit MS-DOS Help, press ALT, F, X.
 
<What's New in MS-DOS 6.2?>
 
<ANSI.SYS>                  <Erase>                    <Nlsfunc>
<Append>                    <Exit>                     <Numlock>
<Attrib>                    <Expand>                   <Path>
<Batch commands>            <Fasthelp>                 <Pause>
<Break>                     <Fastopen>                 <Power>
<Buffers>                   <Fc>                       <POWER.EXE>
<Call>                      <Fcbs>                     <Print>
<Cd>                        <Fdisk>                    <Prompt>
<Chcp>                      <Files>                    <Qbasic>
<Chdir>                     <Find>                     <RAMDRIVE.SYS>
<Chkdsk>                    <For>                      <Rd>
<CHKSTATE.SYS>              <Format>                   <Rem>
<Choice>                    <Goto>                     <Ren>
<Cls>                       <Graphics>                 <Rename>
<Command>                   <Help>                     <Replace>
<CONFIG.SYS commands>       <HIMEM.SYS>                <Restore>
<Copy>                      <If>                       <Rmdir>
<Country>                   <Include>                  <ScanDisk>
<Ctty>                      <Install>                  <Set>
<Date>                      <Interlnk>                 <Setver>
<Dblspace>                  <INTERLNK.EXE>             <SETVER.EXE>
<Dblspace Tips>             <International commands>   <Share>
<DBLSPACE.SYS>              <Intersvr>                 <Shell>
<Debug>                     <Keyb>                     <Shift>
<Defrag>                    <Label>                    <SIZER.EXE>
<Del>                       <Lastdrive>                <Smartdrv>
<Deltree>                   <Lh>                       <SMARTDRV.EXE>
<Device>                    <Loadfix>                  <Sort>
<Device drivers>            <Loadhigh>                 <Stacks>
<Devicehigh>                <Md>                       <Submenu>
<Dir>                       <Mem>                      <Subst>
<Diskcomp>                  <Memmaker>                 <Switches>
<Diskcopy>                  <MenuColor>                <Sys>
<DISPLAY.SYS>               <MenuDefault>              <Time>
<Dos>                       <MenuItem>                 <Tree>
<Doskey>                    <Mkdir>                    <Type>
<Dosshell>                  <Mode Commands>            <Undelete>
<DRIVER.SYS>                <More>                     <Unformat>
<Drivparm>                  <Move>                     <Ver>
<Echo>                      <Msav>                     <Verify>
<Edit>                      <Msbackup>                 <Vol>
<EGA.SYS>                   <Mscdex>                   <VSafe>
<Emm386>                    <Msd>                      <Xcopy>
<EMM386.EXE>                <Multi-config>
 
A printed version of this command reference is available in the MS-DOS 6
Technical Reference. For ordering information, see the coupon at the back of
your MS-DOS 6 User's Guide.

----------------------------------------------------------------------------
                                Batch Commands
 
A batch file or batch program is an unformatted text file that contains one
or more MS-DOS commands and is assigned a .BAT extension. When you type the
name of the batch program at the command prompt, the commands are carried
out as a group.
 
Any MS-DOS command you use at the command prompt can also be put in a batch
program. In addition, the following MS-DOS commands are specially designed
for batch programs:
 
<Call>                    <If>
<Choice>                  <Pause>
<Echo>                    <Rem>
<For>                     <Shift>
<Goto>
 
You can use the COMMAND /Y command to step through a batch program line by
line, and can selectively bypass or carry out individual commands. This is
useful for tracking down problems in batch files. For more information, see
<COMMAND>.
 
----------------------------------------------------------------------------
                             CONFIG.SYS Commands
 
The CONFIG.SYS file is a text file that contains special commands. These
commands configure your computer's hardware components so that MS-DOS and
applications can use them. When MS-DOS starts, it carries out the commands
in the CONFIG.SYS file. Typically, the CONFIG.SYS file is located in the
root directory of drive C.
 
CONFIG.SYS commands
 
The following CONFIG.SYS commands can be used only in the CONFIG.SYS file:
 
<Buffers>                 <Files>
<Country>                 <Install>
<Device>                  <Lastdrive>
<Devicehigh>              <Numlock>
<Dos>                     <Shell>
<Drivparm>                <Stacks>
<Fcbs>                    <Switches>
 
The following commands are commonly used in the CONFIG.SYS file and can also
be typed at the command prompt:
 
<Break>
<Rem>
<Set>
 
The following special CONFIG.SYS commands are used only to define multiple
configurations within the CONFIG.SYS file:
 
<Include>
<Menucolor>
<Menudefault>
<Menuitem>
<Submenu>
 
For more information about defining multiple configurations, see
<Multi-Config Commands>.
 
Special characters in the CONFIG.SYS file
 
The CONFIG.SYS file can also contain the following special characters:
 
   ;   Specifies that the current line is a descriptive comment
       and should not be carried out. Insert this character at the
       beginning of the line. (You can also insert a comment by using
       the REM command.)
 
   ?   Specifies that MS-DOS is to ask for confirmation before
       carrying out the current command. Insert this character
       immediately after the command you want to prompt for, without
       any intervening spaces, but before the equal sign (=). For example,
       to have MS-DOS ask for confirmation before carrying out the
       DOS=HIGH command, you would change the command to read
       DOS?=HIGH. To have MS-DOS ask for confirmation before
       carrying out the DEVICEHIGH /L:1,7280=MYFILE.SYS
       command, you would change the command to read as follows:
       DEVICEHIGH? /L:1,7280=MYFILE.SYS
 
Bypassing CONFIG.SYS and AUTOEXEC.BAT commands
 
If you are having system problems that you suspect are caused by one or more
commands in your CONFIG.SYS or AUTOEXEC.BAT file, you might want to bypass
some or all the commands in these files. (For information about bypassing
DoubleSpace, see the next section.)
 
  To bypass all the commands in your CONFIG.SYS and AUTOEXEC.BAT files,
   press the F5 key immediately after starting your computer, when you see
   the text "Starting MS-DOS...".
 
  To bypass individual CONFIG.SYS and AUTOEXEC.BAT commands, press the F8
   key instead. MS-DOS will then prompt you to carry out or bypass each
   command. To carry out all remaining startup commands, press ESC. To
   bypass all remaining startup commands, press F5.
 
To disable this feature, add the <SWITCHES /N> command to your CONFIG.SYS
file.
 
Starting your computer without loading DBLSPACE.BIN
 
DBLSPACE.BIN is the part of MS-DOS that provides access to DoubleSpace
compressed drives. Normally, if your hard drive has been compressed using
DoubleSpace, DBLSPACE.BIN is loaded even if you press F5 or F8. There are
two ways to disable this:
 
  To start your computer without loading DBLSPACE.BIN, and to bypass all
   the commands in your CONFIG.SYS and AUTOEXEC.BAT files, press CTRL+F5.
 
  To start your computer without loading DBLSPACE.BIN, and to bypass
   individual commands in your CONFIG.SYS & AUTOEXEC.BAT files, press
   CTRL+F8. MS-DOS will then prompt you to carry out or bypass each
   CONFIG.SYS and AUTOEXEC.BAT command. To carry out all remaining startup
   commands, press ESC. To bypass all remaining startup commands, press F5.
 
Note:  If you bypass DBLSPACE.BIN, you will not be able to gain access to
       your DoubleSpace compressed drives until you restart your computer
       with DBLSPACE.BIN. (Your compressed drives will remain on your hard
       disk as hidden files with names such as DBLSPACE.000. Do not delete
       or rename such files.)
 
To disable this feature, use the <DBLSPACE /SWITCHES> command.
 
For more information about your CONFIG.SYS file, see the chapter
"Configuring Your System" in the MS-DOS User's Guide.
 
----------------------------------------------------------------------------
                                Device Drivers
 
The following installable device drivers are provided with MS-DOS:
 
<ANSI.SYS>                <HIMEM.SYS>
<CHKSTATE.SYS>            <INTERLNK.EXE>
<DBLSPACE.SYS>            <POWER.EXE>
<DISPLAY.SYS>             <RAMDRIVE.SYS>
<DRIVER.SYS>              <SETVER.EXE>
<EGA.SYS>                 <SMARTDRV.EXE>
<EMM386.EXE>
 
The files COUNTRY.SYS and KEYBOARD.SYS are not device drivers. They are data
files for the COUNTRY and KEYB commands, respectively. Do not try to load
either of these files with the DEVICE command. If you do, your system halts,
and you cannot restart MS-DOS. For information about loading COUNTRY.SYS,
see the <COUNTRY> command. For information about loading KEYBOARD.SYS, see
the <KEYB> command.
 
----------------------------------------------------------------------------
                           International Commands
 
The following commands are useful when changing country-specific settings
and character sets (code pages):
 
<Chcp>
<Country>
<Keyb>
<Mode>
<Nlsfunc>
 
----------------------------------------------------------------------------
               Commands for Defining Multiple Configurations
 
A single CONFIG.SYS file can define several different system configurations.
To define multiple configurations, you use the following special CONFIG.SYS
commands:
 
<Include>
<Menucolor>
<Menudefault>
<Menuitem>
<Submenu>
 
To define multiple configurations, follow these general steps:
 
1  Define a startup menu in the CONFIG.SYS file by using a [menu] header
   followed by one or more <MENUITEM> commands. The <MENUDEFAULT>,
   <MENUCOLOR> and <SUBMENU> commands can be used to define special
   characteristics of the startup menu.
 
2  Create a configuration block in the CONFIG.SYS file for each
   configuration you want. A configuration block begins with a block header
   -- a name surrounded by square brackets. To each block, add the
   <CONFIG.SYS commands> that you want MS-DOS to carry out when that
   configuration is selected from the startup menu.
 
3  (Optional) In the AUTOEXEC.BAT file, use <batch commands> such as <GOTO>
   and <IF> to have MS-DOS carry out different AUTOEXEC.BAT commands
   depending on the startup configuration.
 
   When a configuration is selected from the startup menu, MS-DOS defines an
   environment variable named CONFIG and sets it to the name of the selected
   configuration block. To have MS-DOS carry out different sets of commands
   for different CONFIG values, add a GOTO %CONFIG% command to your
   AUTOEXEC.BAT file.
 
For more information about defining multiple configurations, see the chapter
"Configuring Your System" in the MS-DOS User's Guide.

----------------------------------------------------------------------------
                    Multiple Configurations -- Examples
 
Defining multiple configurations in your CONFIG.SYS file
 
The following CONFIG.SYS file defines two configurations:
 
    [Menu]
    menuitem=Steve
    menuitem=Lisa
 
    [Common]
    dos=high
    buffers=15
    device=c:\dos\himem.sys
 
    [Steve]
    files=20
    device=c:dos\emm386 2048
 
    [Lisa]
    files=40
    device=c:\net\network.sys
 
    [Common]
 
This CONFIG.SYS file configures the computer for either Steve or Lisa. For
both configurations, MS-DOS carries out the three commands in the first
[common] section: DOS=HIGH, BUFFERS=15, and DEVICE=C:\DOS\HIMEM.SYS. Steve
uses a desktop publishing program that requires expanded memory, so his
configuration includes a command for EMM386. He does not use the network.
Lisa uses the network but not desktop publishing. Her configuration starts
the network driver.
 
Defining multiple configurations in your AUTOEXEC.BAT file
 
When a configuration is selected from the startup menu, MS-DOS defines an
environment variable named CONFIG and sets it to the name of the selected
configuration block. In the AUTOEXEC.BAT file, you can use the <GOTO>
command to have MS-DOS carry out different sets of commands for different
CONFIG values.
 
The following AUTOEXEC.BAT file uses the GOTO command with the CONFIG
variable to carry out different sets of commands. This AUTOEXEC.BAT file is
designed to work with the sample CONFIG.SYS file in the preceding section.
 
    c:\dos\smartdrv.exe
    set temp=c:\temp
    c:\dos\msav
 
    ; Go to the section that matches the current
    ; value of the CONFIG variable
    goto %config%
 
    :Steve
    path=c:\dos;c:\deskpub;c:\typeset
    c:\mouse\mouse.com
    deskpub
    ; now skip Lisa's section & go to end
    goto end
 
    :Lisa
    path=c:\dos;c:\network;c:\utility
    doskey
    net logon lisa
    goto end
 
    :end
 
When MS-DOS runs this AUTOEXEC.BAT file, it starts SMARTDrive, sets the TEMP
environment variable, and starts the MS-DOS Anti-Virus program. MS-DOS then
goes to the section that matches the value of the CONFIG variable.
 
If the name of the selected configuration is "Steve," MS-DOS goes to the
Steve section. It then sets the search path for Steve, loads the MOUSE.COM
program from the C:\MOUSE directory, and runs the desktop publishing
program. The GOTO END command instructs MS-DOS to skip to the End section;
this prevents the commands in the Lisa section from being carried out for
Steve's configuration.
 
If the current configuration is "Lisa," the search path is set differently,
MS-DOS runs the Doskey program, and a Logon command instructs the network
driver (loaded from the CONFIG.SYS file) to connect the computer to the
network.
 
----------------------------------------------------------------------------
                                  ANSI.SYS
 
Defines functions that change display graphics, control cursor movement, and
reassign keys. The ANSI.SYS device driver supports ANSI terminal emulation
of escape sequences to control your system's screen and keyboard. An ANSI
escape sequence is a sequence of ASCII characters, the first two of which
are the escape character (1Bh) and the left-bracket character (5Bh). The
character or characters following the escape and left-bracket characters
specify an alphanumeric code that controls a keyboard or display function.
ANSI escape sequences distinguish between uppercase and lowercase letters;
for example,"A" and "a" have completely different meanings.
 
This device driver must be loaded by a <DEVICE> or <DEVICEHIGH> command in
your CONFIG.SYS file.
 
Note:  In this topic bold letters in syntax and ANSI escape sequences
       indicate text you must type exactly as it appears.
 
Syntax
 
    DEVICE=[drive:][path]ANSI.SYS [/X] [/K] [/R]
 
Parameter
 
[drive:][path]
   Specifies the location of the ANSI.SYS file.
 
Switches
 
/X
    Remaps extended keys independently on 101-key keyboards.
 
/K
    Causes ANSI.SYS to treat a 101-key keyboard like an 84-key
    keyboard. This is equivalent to the command SWITCHES=/K.
    If you usually use the SWITCHES=/K command, you will need
    to use the /K switch with ANSI.SYS.
 
/R
     Adjusts line scrolling to improve readability when ANSI.SYS
     is used with screen-reading programs (which make computers
     more accessible to people with disabilities).
 
Parameters used in ANSI escape sequences
 
Pn
    Numeric parameter. Specifies a decimal number.
 
Ps
    Selective parameter. Specifies a decimal number that you use to select
    a function. You can specify more than one function by separating the
    parameters with semicolons.
 
PL
    Line parameter. Specifies a decimal number that represents one of the
    lines on your display or on another device.
 
Pc
    Column parameter. Specifies a decimal number that represents one of the
    columns on your screen or on another device.
 
ANSI escape sequences for cursor movement, graphics, and keyboard settings
 
In the following list of ANSI escape sequences, the abbreviation ESC
represents the ASCII escape character 27 (1Bh), which appears at the
beginning of each escape sequence.
 
ESC[PL;PcH
    Cursor Position: Moves the cursor to the specified position
    (coordinates). If you do not specify a position, the cursor moves to the
    home position--the upper-left corner of the screen (line 0, column
    0). This escape sequence works the same way as the following Cursor
    Position escape sequence.
 
ESC[PL;Pcf
    Cursor Position: Works the same way as the preceding Cursor Position
    escape sequence.
 
ESC[PnA
    Cursor Up: Moves the cursor up by the specified number of lines without
    changing columns. If the cursor is already on the top line, ANSI.SYS
    ignores this sequence.
 
ESC[PnB
    Cursor Down: Moves the cursor down by the specified number of lines
    without changing columns. If the cursor is already on the bottom line,
    ANSI.SYS ignores this sequence.
 
ESC[PnC
    Cursor Forward: Moves the cursor forward by the specified number of
    columns without changing lines. If the cursor is already in the
    rightmost column, ANSI.SYS ignores this sequence.
 
ESC[PnD
    Cursor Backward: Moves the cursor back by the specified number of
    columns without changing lines. If the cursor is already in the leftmost
    column, ANSI.SYS ignores this sequence.
 
ESC[s
    Save Cursor Position: Saves the current cursor position. You can move
    the cursor to the saved cursor position by using the Restore Cursor
    Position sequence.
 
ESC[u
    Restore Cursor Position: Returns the cursor to the position stored
    by the Save Cursor Position sequence.
 
ESC[2J
    Erase Display: Clears the screen and moves the cursor to the home
    position (line 0, column 0).
 
ESC[K
    Erase Line: Clears all characters from the cursor position to the
    end of the line (including the character at the cursor position).
 
ESC[Ps;...;Psm
    Set Graphics Mode: Calls the graphics functions specified by the
    following values. These specified functions remain active until the next
    occurrence of this escape sequence. Graphics mode changes the colors and
    attributes of text (such as bold and underline) displayed on the
    screen.
 
    Text attributes
       0    All attributes off
       1    Bold on
       4    Underscore (on monochrome display adapter only)
       5    Blink on
       7    Reverse video on
       8    Concealed on
 
    Foreground colors
       30    Black
       31    Red
       32    Green
       33    Yellow
       34    Blue
       35    Magenta
       36    Cyan
       37    White
 
    Background colors
       40    Black
       41    Red
       42    Green
       43    Yellow
       44    Blue
       45    Magenta
       46    Cyan
       47    White
 
    Parameters 30 through 47 meet the ISO 6429 standard.
 
ESC[=psh
    Set Mode: Changes the screen width or type to the mode specified
    by one of the following values:
 
       0      40 x 148 x 25 monochrome (text)
       1      40 x 148 x 25 color (text)
       2      80 x 148 x 25 monochrome (text)
       3      80 x 148 x 25 color (text)
       4      320 x 148 x 200 4-color (graphics)
       5      320 x 148 x 200 monochrome (graphics)
       6      640 x 148 x 200 monochrome (graphics)
       7      Enables line wrapping
      13      320 x 148 x 200 color (graphics)
      14      640 x 148 x 200 color (16-color graphics)
      15      640 x 148 x 350 monochrome (2-color graphics)
      16      640 x 148 x 350 color (16-color graphics)
      17      640 x 148 x 480 monochrome (2-color graphics)
      18      640 x 148 x 480 color (16-color graphics)
      19      320 x 148 x 200 color (256-color graphics)
 
ESC[=Psl
    Reset Mode: Resets the mode by using the same values that Set Mode
    uses, except for 7, which disables line wrapping. The last character
    in this escape sequence is a lowercase L.
 
ESC[code;string;...p
    Set Keyboard Strings: Redefines a keyboard key to a specified string.
    The parameters for this escape sequence are defined as follows:
 
      Code is one or more of the values listed in the following table.
       These values represent keyboard keys and key combinations. When using
       these values in a command, you must type the semicolons shown in this
       table in addition to the semicolons required by the escape sequence.
       The codes in parentheses are not available on some keyboards.
       ANSI.SYS will not interpret the codes in parentheses for those
       keyboards unless you specify the /X switch in the DEVICE command for
       ANSI.SYS.
 
      String is either the ASCII code for a single character or a string
       contained in quotation marks. For example, both 65 and "A" can be
       used to represent an uppercase A.
 
IMPORTANT:  Some of the values in the following table are not valid for all
            computers. Check your computer's documentation for values that
            are different.
 
Key                       Code      SHIFT+code  CTRL+code  ALT+code
---------------------------------------------------------------------------

F1                        0;59      0;84        0;94       0;104

F2                        0;60      0;85        0;95       0;105

F3                        0;61      0;86        0;96       0;106

F4                        0;62      0;87        0;97       0;107

F5                        0;63      0;88        0;98       0;108

F6                        0;64      0;89        0;99       0;109

F7                        0;65      0;90        0;100      0;110

F8                        0;66      0;91        0;101      0;111

F9                        0;67      0;92        0;102      0;112

F10                       0;68      0;93        0;103      0;113

F11                       0;133     0;135       0;137      0;139

F12                       0;134     0;136       0;138      0;140

HOME (num keypad)         0;71      55          0;119      --

UP ARROW (num keypad)     0;72      56          (0;141)    --

PAGE UP (num keypad)      0;73      57          0;132      --

LEFT ARROW (num keypad)   0;75      52          0;115      --

RIGHT ARROW (num          0;77      54          0;116      --
keypad)

END (num keypad)          0;79      49          0;117      --
 
DOWN ARROW (num keypad)   0;80      50          (0;145)    --
 
PAGE DOWN (num keypad)    0;81      51          0;118      --
 
INSERT (num keypad)       0;82      48          (0;146)    --
 
DELETE  (num keypad)      0;83      46          (0;147)    --
 
HOME                      (224;71)  (224;71)    (224;119)  (224;151)
 
UP ARROW                  (224;72)  (224;72)    (224;141)  (224;152)
 
PAGE UP                   (224;73)  (224;73)    (224;132)  (224;153)
 
LEFT ARROW                (224;75)  (224;75)    (224;115)  (224;155)
 
RIGHT ARROW               (224;77)  (224;77)    (224;116)  (224;157)
 
END                       (224;79)  (224;79)    (224;117)  (224;159)
 
DOWN ARROW                (224;80)  (224;80)    (224;145)  (224;154)
 
PAGE DOWN                 (224;81)  (224;81)    (224;118)  (224;161)
 
INSERT                    (224;82)  (224;82)    (224;146)  (224;162)
 
DELETE                    (224;83)  (224;83)    (224;147)  (224;163)
 
PRINT SCREEN              --        --          0;114      --
 
PAUSE/BREAK               --        --          0;0        --
 
BACKSPACE                 8         8           127        (0)
 
ENTER                     13        --          10         (0
 
TAB                       9         0;15        (0;148)    (0;165)
 
NULL                      0;3       --          --         --
 
A                         97        65          1          0;30
 
B                         98        66          2          0;48
 
C                         99        66          3          0;46
 
D                         100       68          4          0;32
 
E                         101       69          5          0;18
 
F                         102       70          6          0;33
 
G                         103       71          7          0;34
 
H                         104       72          8          0;35
 
I                         105       73          9          0;23
 
J                         106       74          10         0;36
 
K                         107       75          11         0;37
 
L                         108       76          12         0;38
 
M                         109       77          13         0;50
 
N                         110       78          14         0;49
 
O                         111       79          15         0;24
 
P                         112       80          16         0;25
 
Q                         113       81          17         0;16
 
R                         114       82          18         0;19
 
S                         115       83          19         0;31
 
T                         116       84          20         0;20
 
U                         117       85          21         0;22
 
V                         118       86          22         0;47
 
W                         119       87          23         0;17
 
X                         120       88          24         0;45
 
Y                         121       89          25         0;21
 
Z                         122       90          26         0;44
 
1                         49        33          --         0;120
 
2                         50        64          0          0;121
 
3                         51        35          --         0;122
 
4                         52        36          --         0;123
 
5                         53        37          --         0;124
 
6                         54        94          30         0;125
 
7                         55        38          --         0;126
 
8                         56        42          --         0;126
 
9                         57        40          --         0;127
 
0                         48        41          --         0;129
 
-                         45        95          31         0;130
 
=                         61        43          ---        0;131
 
[                         91        123         27         0;26
 
]                         93        125         29         0;27
 
                          92        124         28         0;43
 
;                         59        58          --         0;39
 
'                         39        34          --         0;40
 
,                         44        60          --         0;51
 
.                         46        62          --         0;52
 
/                         47        63          --         0;53
 
`                         96        126         --         (0;41)
 
ENTER (keypad)            13        --          10         (0;166)
 
/ (keypad)                47        47          (0;142)    (0;74)
 
* (keypad)                42        (0;144)     (0;78)     --
 
- (keypad)                45        45          (0;149)    (0;164)
 
+ (keypad)                43        43          (0;150)    (0;55)
 
5 (keypad)                (0;76)    53          (0;143)    --
 
----------------------------------------------------------------------------
                              ANSI.SYS--Notes
 
Remapping extended keys
 
If you have a keyboard with 101 keys, you may want to use the /X switch to
remap certain extended keys. For example, there are two HOME keys on
keyboards with 101 keys: One on the numeric keypad and the other in the
block of cursor-control keys. Unless you specify the /X switch, the two HOME
keys are the same to MS-DOS.
 
Ignoring extended keys
 
If you have a program that does not correctly interpret input from an
enhanced keyboard, use the /K switch with ANSI.SYS. Your enhanced keyboard
will then use conventional keyboard functions.
 
Using both the /X switch and the /K switch
 
You cannot specify ANSI.SYS with both the /X switch and the /K switch.
 
----------------------------------------------------------------------------
                             ANSI.SYS--Examples
 
To exchange the backslash and question-mark keys by using literal strings,
type the following escape sequence:
 
    ESC["\";"?"pESC["?";"\"p
 
To exchange the backslash and question-mark keys by using each key's ASCII
value, type the following escape sequence:
 
    ESC[92;63pESC[63;92p
 
To restore the backslash and question-mark keys to their original meanings,
type the following escape sequence:
 
    ESC[92;92pESC[63;63p
 
To specify that MS-DOS display a directory listing when you press the F2
key, type the following at the command prompt:
 
    prompt $e[0;60;"dir";13p
 
To specify a black screen background color and a high-intensity screen
foreground color, type the following at the command prompt:
 
    prompt $e[1;32;40m$p$g
 
----------------------------------------------------------------------------
                                   APPEND
 
Enables programs to open data files in specified directories as if the files
were in the current directory. Do not use this command when Windows is
running.
 
The specified directories are called appended directories because, for the
sake of opening data files, they can be found as if they were appended to
the current directory.
 
Syntax
 
    APPEND [[drive:]path[;...]] [/X[:ON|:OFF]][/PATH:ON|/PATH:OFF] [/E]
 
To display the list of appended directories, use the following syntax:
 
    APPEND
 
To cancel the existing list of appended directories, use the following
syntax:
 
    APPEND ;
 
Parameters
 
[drive:]path
    Specifies the drive (if other than the current drive) and directory that
    you want to append to the current directory. You can specify multiple
    entries of [drive:]path, separating the entries with semicolons.
 
;
    When used by itself (APPEND ;), cancels the existing list of appended
    directories.
 
Switches
 
/X[:ON|:OFF]
    Specifies whether MS-DOS is to search (/X:ON) or not search (/X:OFF)
    appended directories when executing programs. You can abbreviate /X:ON
    to /X. If you want to specify X:ON, you must do it the first time you
    use APPEND after starting your system. After that, you can switch
    between X:ON and X:OFF. The default value is /X:OFF.
 
/PATH:ON|/PATH:OFF
    Specifies whether a program is to search appended directories for a data
    file when a path is already included with the name of the file the
    program is looking for. The default setting is /PATH:ON.
 
/E
    Assigns the list of appended directories to an environment variable
    named APPEND. This switch can be used only the first time you use APPEND
    after starting your system. If you use /E, you can use the SET command
    to display the list of appended directories. For information about
    environment variables, see the <SET> command.
 
Caution
 
Do not use Append with Microsoft Windows or the Windows Setup program.
 
Related Command
 
To set a search path for executable files, see the <PATH> command.
 
----------------------------------------------------------------------------
                               APPEND--Notes
 
Running APPEND with Microsoft Windows
 
Do not use Append with Microsoft Windows or the Windows Setup program.
 
Running APPEND multiple times
 
You can use APPEND as many times as you want after starting your system.
However, note the following:
 
  The /E switch is valid only the first time you use APPEND after starting
   your system.
 
  The second and subsequent times you run APPEND, you must omit the .EXE
   filename extension. If you try to run APPEND by typing APPEND.EXE, it
   will not load more than once.
 
Storing the list of appended directories in the environment
 
You can use the /E switch with APPEND to assign the list of appended
directories to an environment variable named APPEND. To do this, first use
the APPEND command with only the /E switch. Then use APPEND again, this time
including the directories you want to append. You cannot specify /E and
[drive:]path on the same command line.
 
Specifying multiple appended directories
 
To append more than one directory, separate multiple entries with
semicolons. If you use the APPEND command with the [drive:]path parameters
again, the specified directory or directories replace any directories
specified in a previous APPEND command.
 
Appended directories and the DIR command
 
If you specify the DIR command, the resulting list does not include
filenames from appended directories.
 
Filename conflicts
 
If a file in an appended directory has the same name as a file in the
current directory, programs open the file in the current directory.
 
Using APPEND with programs that create new files
 
When a program opens a file in an appended directory, the file can be found
as if it were in the current directory. If the program then saves the file
by creating a new file with the same name, the new file is created in the
current directory (not the appended directory). APPEND is appropriately used
for data files that are not to be modified or that are to be modified
without creating new copies of the files. Database programs often modify
data files without making new copies. Text editors and word processors,
however, usually save modified data files by making new copies. To avoid
confusion, do not use APPEND with these programs.
 
Using the /X:ON switch and the path command
 
When /X:ON is specified, you can run a program located in an appended
directory by typing the program name at the command prompt. Usually, you use
the PATH command to specify directories that contain programs. However, when
your program is in an appended directory, you do not need to use the PATH
command to specify that directory. MS-DOS finds a program in an appended
directory by following the usual order in which MS-DOS searches for a
program; that is, first in the current directory, then in the appended
directories, and then in the search path.
 
MS-DOS functions that always use appended directories
 
Even when the /X:ON switch is not specified, appended directories are used
when programs call the following MS-DOS Interrupt 21h functions:
 
  Open File (0Fh)
 
  Open File Handle (3Dh)
 
  Get File Size (23h)
 
When /X:ON is specified, appended directories are used when programs call
any of the Interrupt 21h functions in the preceding list or any of the
Interrupt 21h functions in the following list:
 
  Find First Entry (11h)
 
  Find First File (4Eh)
 
  Execute Program (EXEC) (4Bh)
 
Using APPEND with network drives
 
You can use the APPEND command to append directories that are located on
network drives.
 
----------------------------------------------------------------------------
                              APPEND--Examples
 
To allow programs to open data files in a directory named LETTERS on the
disk in drive B and in a directory named REPORTS on the disk in drive A as
if the files were in the current directory, type the following command:
 
    append b:\letters;a:\reports
 
To append the same directories and keep a copy of the list of appended
directories in the MS-DOS environment, type the following commands:
 
    append /e
 
    append b:\letters;a:\reports
 
These must be the first APPEND commands you use after starting your system.
 
----------------------------------------------------------------------------
                                   ATTRIB
 
Displays or changes file attributes.
 
This command displays, sets, or removes the Read-Only, Archive, System, and
Hidden attributes assigned to files or directories.
 
Syntax
 
    ATTRIB [+R|-R] [+A|-A] [+S|-S] [+H|-H][[drive:][path]filename] [/S]
 
To display all attributes of all files in the current directory, use the
following syntax:
 
    ATTRIB
 
Parameter
 
[drive:][path]filename
    Specifies the location and name of the file(s) you want to process.
 
Switches
 
+R
    Sets the Read-Only file attribute.
 
-R
    Clears the Read-Only file attribute.
 
+A
    Sets the Archive file attribute.
 
-A
    Clears the Archive file attribute.
 
+S
    Sets the file as a System file.
 
-S
    Clears the System file attribute.
 
+H
    Sets the file as a Hidden file.
 
-H
    Clears the Hidden file attribute.
 
/S
    Processes files in the current directory and all of its subdirectories.
 
Related Command
 
For more information about copying files and directories with different
attributes, see the <XCOPY> command.
 
----------------------------------------------------------------------------
                               ATTRIB--Notes
 
Combining the Hidden and System attributes
 
If a file has both the Hidden and System attributes set, you can clear both
attributes only with a single ATTRIB command. For example, to clear the
Hidden and System attributes for the RECORD.TXT file, you would type:
 
    ATTRIB -S -H RECORD.TXT
 
Using ATTRIB with groups of files
 
You can use wildcards (? and *) with the filename parameter to display or
change the attributes for a group of files. If a file has the System or
Hidden attribute set, you must clear that attribute before you can change
any other attributes for that file.
 
Changing the attributes for a directory
 
You can display or change the attributes for a directory. To use ATTRIB with
a directory, you must explicitly specify the directory name; you cannot use
wildcards to work with directories. For example, to hide the directory
C:\SECRET, you would type the following:
 
    ATTRIB +H C:\SECRET
 
The following command would affect only files, not directories:
 
    ATTRIB +H C:*.*
 
Viewing archive attributes
 
The Archive attribute (a) is used to mark files that have changed since they
were previously backed up. The MSBACKUP, RESTORE, and XCOPY commands use
these Archive attributes. For information about Archive attributes, see the
<MSBACKUP>, <RESTORE>, and <XCOPY> commands.
 
----------------------------------------------------------------------------
                              ATTRIB--Examples
 
To display the attributes of a file named NEWS86 located on the current
drive, type the following command:
 
    attrib news86
 
To assign the Read-Only attribute to the file REPORT.TXT, type the following
command:
 
    attrib +r report.txt
 
To remove the Read-Only attribute from files in the \PUBLIC\JONES directory
on a disk in drive B and from files in any subdirectories of \PUBLIC\JONES,
type the following command:
 
    attrib -r b:\public\jones\*.* /s
 
As a final example, suppose you want to give an associate a disk containing
all files in the default directory on a disk in drive A except files with
the .BAK extension. Because you can use <XCOPY> to copy only those files
marked with the Archive attribute, you need to set the Archive attribute for
those files you want to copy. To do this, you would use the following two
commands to set the Archive attribute for all files on drive A and then to
clear the attribute for those files with the .BAK extension:
 
    attrib +a a:*.*
 
    attrib -a a:*.bak
 
Next, use the XCOPY command to copy the files from the disk in drive A to
the disk in drive B. The /A switch in the following command causes XCOPY to
copy only those files marked with the Archive attribute:
 
    xcopy a: b: /a
 
If you want XCOPY to clear each file's Archive attribute after it copies the
file, use the /M switch instead of /A, as in the following example:
 
    xcopy a: b: /m
 
----------------------------------------------------------------------------
                                   BREAK
 
Sets or clears extended CTRL+C checking. You can use this command at the
command prompt or in your CONFIG.SYS file.
 
You can press CTRL+C to stop a program or an activity (file sorting, for
example). Typically, MS-DOS checks for CTRL+C only while it reads from the
keyboard or writes to the screen or a printer. If you set BREAK to ON, you
extend CTRL+C checking to other functions, such as disk read and write
operations.
 
Syntax
 
    BREAK [ON|OFF]
 
To display the current BREAK setting, use the following syntax:
 
    BREAK
 
In your CONFIG.SYS file, use the following syntax:
 
    BREAK=ON|OFF
 
Parameter
 
ON|OFF
    Turns extended CTRL+C checking on or off.
 
----------------------------------------------------------------------------
                                BREAK--Note
 
Including BREAK in CONFIG.SYS
 
The default setting for BREAK is OFF. You can include the BREAK command in
your CONFIG.SYS file to enable extended CTRL+C checking every time you start
your system.
 
----------------------------------------------------------------------------
                              BREAK--Examples
 
To specify that MS-DOS is to check for CTRL+C only while it is reading from
the keyboard or writing to the screen or printer, type the following
command:
 
    break off
 
To specify that MS-DOS is to check for CTRL+C while it is reading from a
disk or the keyboard or writing to a disk or the screen, type the following
command:
 
    break on
 
To turn on this extended CTRL+C checking every time you start your system,
include the following command in your CONFIG.SYS file:
 
    break=on
 
----------------------------------------------------------------------------
                                  BUFFERS
 
Allocates memory for a specified number of disk buffers when your system
starts. You can use this command only in your CONFIG.SYS file.
 
Syntax
 
    BUFFERS=n[,m]
 
Parameters
 
n
    Specifies the number of disk buffers. The value of n must be in the
    range 1 through 99.
 
m
    Specifies the number of buffers in the secondary buffer cache. The value
    of m must be in the range 0 through 8.
 
Default settings
 
The default setting for the number of disk buffers depends on the
configuration of your system, as shown in the following table:
 
Configuration              Buffers      Bytes
                           (n)
---------------------------------------------------------------------------
 
<128K of RAM, 360K disk    2            --
 
<128K of RAM, > 360K       3            --
disk
 
128K to 255K of RAM        5            2672
 
256K to 511K of RAM        10           5328
 
512K to 640K of RAM        15           7984
 
The default setting for the number of buffers in the secondary cache (m) is
0 (no secondary cache buffers).
 
If you specify an invalid value for n or m, BUFFERS uses the default setting
of no secondary cache buffers.
 
----------------------------------------------------------------------------
                               BUFFERS--Notes
 
Using BUFFERS with DoubleSpace
 
If you are using DoubleSpace and SMARTDrive, and MS-DOS is loaded into the
HMA, set BUFFERS=10. This ensures that there will be enough room in the HMA
for MS-DOS, DoubleSpace, and all your buffers. (If BUFFERS is set to a value
higher than 10, there might not be enough room in the HMA for all your
buffers, and MS-DOS will place all the buffers into conventional memory.) If
you're using SMARTDrive, specifying more than 10 buffers will not speed up
your system much, but will use additional memory.
 
Using BUFFERS with SMARTDRV.EXE
 
If you are using SMARTDRV.EXE, either use a smaller value for BUFFERS, or do
not specify a BUFFERS command at all.
 
How MS-DOS uses buffers
 
MS-DOS uses the memory reserved for each disk buffer to hold data during
read and write operations. To achieve the best performance with programs
such as word processors, specify a value between 10 and 20 for n. If you
plan to create many subdirectories, you might want to increase the number of
buffers to 20 or 30. Each buffer requires approximately 532 bytes of memory.
Therefore, the more buffers you have, the less memory you have available for
programs. (To find out how much memory MS-DOS is using for disk buffers, use
the MEM /D /P command.)
 
If MS-DOS is loaded in the high memory area (HMA) and there is enough room
in the HMA to contain all the buffers, MS-DOS also places the buffers in the
HMA. If you specify more than 48 buffers, or if you are running DoubleSpace
and specify more than 10 buffers, there might not be enough room in the HMA
for all the buffers. In that case, MS-DOS places all of the buffers into
conventional memory.
 
Using the secondary buffer cache
 
Using the cache can speed up certain disk operations if you are using a
computer with an 8086 processor. If you are using a computer with a faster
processor, it is better to use <SMARTDRV.EXE> for a cache.
 
----------------------------------------------------------------------------
                              BUFFERS--Example
 
To create 20 disk buffers, include the following command in your CONFIG.SYS
file:
 
    buffers=20
 
----------------------------------------------------------------------------
                                    CALL
 
Calls one batch program from another without causing the first batch program
to stop.
 
Syntax
 
    CALL [drive:][path]filename [batch-parameters]
 
Parameters
 
[drive:][path]filename
    Specifies the location and name of the batch program you want to call.
    Filename must have a .BAT extension.
 
batch-parameters
    Specifies any command-line information required by the batch program.
 
----------------------------------------------------------------------------
                                CALL--Notes
 
Using batch-parameters
 
Batch-parameters can contain any information that you can pass to a batch
program, including switches, filenames, the replaceable parameters %1
through %9, and environment variables such as %baud%.
 
Using pipes and redirection symbols
 
Do not use pipes ("|") and redirection symbols ("<<","<",">", and ">>") with
the CALL command.
 
Making a recursive call
 
You can create a batch program that calls itself; however, you must provide
an exit command. Otherwise, the parent and child batch programs can loop
endlessly.
                                      
----------------------------------------------------------------------------
                               CALL--Examples
 
To run the CHECKNEW.BAT program from another batch program, include the
following command in the parent batch program:
 
    call checknew
 
Suppose the parent batch program accepts two replaceable parameters and you
want it to pass those parameters to CHECKNEW.BAT. You can use the following
command in the parent batch program:
 
    call checknew %1 %2
 
----------------------------------------------------------------------------
                                    CHCP
 
Displays the number of the active character set (code page). You can also
use the CHCP command to change the active character set for all devices that
support character set switching.
 
You must install the <NLSFUNC> program before you can use the CHCP command.
 
For an introduction to using character sets and the CHCP command, see the
chapter "Customizing For International Use" in the MS-DOS 6 User's Guide.
 
Tables of the character sets included with MS-DOS are shown in the appendix
"Keyboard Layouts and Character Sets" in the MS-DOS 6 User's Guide.
 
Syntax
 
    CHCP [nnn]
 
To display the number of the active character set, use the following
syntax:
 
    CHCP
 
Parameter
 
nnn
    Specifies the prepared system character set defined by the COUNTRY
    command in the CONFIG.SYS file. MS-DOS provides character sets for the
    following countries and languages:
 
    437    United States
 
    850    Multilingual (Latin I)
 
    852    Slavic (Latin II)
 
    860    Portuguese
 
    863    Canadian-French
 
    865    Nordic
 
    Additional countries and languages are supported by the EGA2.CPI file.
    For more information, see the README.TXT file.
 
Related Commands
 
For more information about character sets, see the <COUNTRY>, <NLSFUNC>, and
<MODE (set device code pages)> commands.
 
----------------------------------------------------------------------------
                                CHCP--Notes
 
Requirements for using the CHCP command
 
Before you can use the CHCP command, you must specify the location of the
COUNTRY.SYS file by using the <COUNTRY> command and load the <NLSFUNC>
program into memory.
 
Assigning a new character set
 
After you assign a new character set, any program you start uses that new
character set. However, any program (not including COMMAND.COM) that you
started before assigning the new character set will probably attempt to use
the original character set.
 
----------------------------------------------------------------------------
                               CHCP--Examples
 
To view the active character set setting, type the following command:
 
    chcp
 
MS-DOS responds with a message similar to the following:
 
    Active code page: 437
 
To change the active character set to 850 (Multilingual), type the following
command:
 
    chcp 850
 
MS-DOS alerts you if the specified character set has not been prepared for
your system. The following error message appears:
 
    Invalid code page
 
If a device (monitor, keyboard, printer) is not prepared for a character
set, MS-DOS displays an error message in the following format:
 
    Code page 850 not prepared for device nnn
 
----------------------------------------------------------------------------
                                 CHDIR (CD)
 
Displays the name of the current directory or changes the current
directory.
 
Syntax
 
    CHDIR [drive:][path]
 
    CHDIR[..]
 
    CD [drive:][path]
 
    CD[..]
 
To display the current drive letter and directory name, use either of the
following syntax lines:
 
    CHDIR
 
    CD
 
Parameters
 
[drive:][path]
    Specifies the drive (if other than the current drive) and directory to
    which you want to change.
 
 ..
    Specifies that you want to change to the parent directory.
 
----------------------------------------------------------------------------
                                CHDIR--Notes
 
Changing to the root directory
 
The root directory is the top of the directory hierarchy for a drive. To
return to the root directory, type the following command:
 
    cd \
 
Using the current directory from a different drive
 
If you are working in the \PUBLIC\JONES directory on drive C and you change
to drive D, you can copy files to and from the \PUBLIC\JONES directory by
specifying only the drive letter C.
 
Changing the directory on another drive
 
You can change the current directory on another drive by specifying the
drive letter on the command line when you use CHDIR or CD.
                                      
----------------------------------------------------------------------------
                              CHDIR--Examples
 
Either of the following commands changes your current directory to the
directory named PRIMETIM:
 
    chdir \primetim
 
    cd \primetim
 
Suppose you have a directory named SPECIALS with a subdirectory named
SPONSORS. To change your current directory to \SPECIALS\SPONSORS, type the
following command:
 
    cd \specials\sponsors
 
Or, if your current directory is \SPECIALS, you can use the following
command to change to the \SPECIALS\SPONSORS directory:
 
    cd sponsors
 
To change from a subdirectory back to the parent directory, type the
following command:
 
    cd..
 
To display the name of the current directory, you can use CHDIR or CD
without a parameter. For example, if your current directory is \PUBLIC\JONES
on the disk in drive B, type CHDIR to see the following response:
 
    B:\PUBLIC\JONES
 
If you are working on drive D and you want to copy all files in the
\PUBLIC\JONES and \PUBLIC\LEWIS directories on drive C to the root directory
on drive D, type the following commands:
 
    chdir c:\public\jones
    copy c:*.* d:\
    chdir c:\public\lewis
    copy c:*.* d:\
 
If, instead, you want to copy all files in the \PUBLIC\JONES and
\PUBLIC\LEWIS directories to your current location on drive D, type the
following commands:
 
    chdir c:\public\jones
    copy c:*.* d:
    chdir c:\public\lewis
    copy c:*.* d:
 
For more information on copying files, see the <COPY> command.
 
----------------------------------------------------------------------------
                                CHKSTATE.SYS
 
Used by the MemMaker memory-optimization program to track the optimization
process.
 
During optimization, MemMaker adds the CHKSTATE.SYS command line to the
beginning of your CONFIG.SYS file. When the optimization process is
complete, MemMaker removes the CHKSTATE.SYS command line.
 
CHKSTATE.SYS is used exclusively by MemMaker.
 
----------------------------------------------------------------------------
                                   CHKDSK
 
Checks the status of a disk and displays a status report. Can also fix disk
errors.
 
The status report shows errors found in the MS-DOS filing system, which
consists of the file allocation table and directories. CHKDSK also displays
a summary of disk usage. (CHKDSK does not verify that the information in
your files can be accurately read.) If errors exist on the disk, CHKDSK
alerts you with a message.
 
Note:  The ScanDisk program is the preferred method of fixing drive
       problems, and should be used instead of the CHKDSK /F command. For
       more information, see the <SCANDISK> command.
 
Syntax
 
    CHKDSK [drive:][[path]filename] [/F] [/V]
 
To display the status of the disk in the current drive, use the following
syntax:
 
    CHKDSK
 
Parameters
 
drive:
    Specifies the drive that contains the disk that you want CHKDSK to
    check.
 
[path]filename
    Specifies the location and name of a file or set of files that you want
    CHKDSK to check for fragmentation. You can use wildcards (* and ?) to
    specify multiple files.
 
Switches
 
/F
    Fixes errors on the disk. Do not use this option when running CHKDSK
    from other programs; for more information, see "Using CHKDSK With Open
    Files" in <CHKDSK--Notes>. In general, when fixing disk errors, use
    <ScanDisk> instead of CHKDSK.
 
/V
    Displays the name of each file in every directory as the disk is
    checked.
 
----------------------------------------------------------------------------
                               CHKDSK--Notes
 
Format of status reports
 
MS-DOS displays CHKDSK status reports similar to the following example:
 
    Volume Serial Number is B1AF-AFBF
 
      72,214,528 bytes total disk space
         73,728 bytes in 3 hidden files
         30,720 bytes in 12 directories
      11,493,376 bytes in 386 user files
         61,440 bytes in bad sectors
      6,055,264 bytes available on disk
 
          2,048 bytes in each allocation unit
         35,261 total allocation units on disk
         29,568 available allocation units on disk
 
        655,360 total bytes memory
        493,456 bytes free
 
Fixing disk errors
 
The ScanDisk program is the preferred method of fixing disk errors. For more
information, see the <SCANDISK> command.
 
If you want to use CHKDSK to fix disk errors, use the /F switch. (CHKDSK
corrects disk errors only if you specify the /F switch.) CHKDSK /F displays
a prompt similar to the following:
 
    10 lost allocation units found in 3 chains.
    Convert lost chains to files?
 
If you press Y, MS-DOS saves each lost chain in the root directory as a file
with a name in the format FILEnnnn.CHK. When CHKDSK finishes, you can
examine these files to see if they contain any data you need. If you press
N, MS-DOS fixes the disk but does not save the contents of the lost
allocation units.
 
If you do not use the /F switch, CHKDSK alerts you with a message if a file
needs to be fixed but does not fix the error(s).
 
Using CHKDSK with open files
 
Never use CHKDSK when files are currently open. CHKDSK is designed for use
when the files on the disk are in an unchanging state -- that is, when they
are not open. When a file is open, it is probably changing, and MS-DOS will
update the file allocation table and the directory structure to reflect
changes. Such updates are not always made immediately, and updates to the
file allocation table and the directories occur at different times. If you
run CHKDSK when files are open on the disk, it interprets differences
between the directory structure and the file allocation tables as errors.
Running CHKDSK /F when files are open can result in corruption or loss of
data. Therefore, never run CHKDSK /F from another program, or when Microsoft
Windows or the MS-DOS Task Swapper is running.
 
Using CHKDSK with assigned drives and networks
 
The CHKDSK command does not work on drives formed by the SUBST command. You
cannot use CHKDSK to check a disk on a network drive.
 
Physical disk errors
 
The CHKDSK command finds only logical errors in the file system, not
physical disk errors. To identify and repair physical disk errors, use the
ScanDisk program. For more information, see the <SCANDISK> command.
 
Bad disk sectors
 
Bad sectors reported by CHKDSK were marked as "bad" when your disk was first
prepared for operation. ScanDisk and other physical disk-error correction
utilities can also mark sectors as "bad." Bad sectors pose no danger.
 
Cross-Linked Files
 
CHKDSK reports a cross-linked file if two files or directories are recorded
as using the same disk space. If CHKDSK finds a cross-linked file, it
displays a message similar to the following:
 
    <File> is cross linked on allocation unit <number>
 
CHKDSK will not fix a cross-linked file, even if you specify the /F switch.
To correct a cross-linked file, run ScanDisk. Some of the information in
these files may be lost.
 
ERRORLEVEL parameters
 
If CHKDSK does not find any errors, it returns an ERRORLEVEL value of 0. If
CHKDSK found one or more errors, it returns an ERRORLEVEL value of 255.
 
Saving a CHKDSK status report to a file
 
You can save a CHKDSK status report by redirecting the output to a file. Do
not use the /F switch when you redirect CHKDSK output to a file.
 
----------------------------------------------------------------------------
                              CHKDSK--Examples
 
To find out how much data is stored on drive C and how much space is still
free, and to check the disk for errors, type the following command:
 
    chkdsk c:
 
CHKDSK pauses and displays messages if it encounters errors.
 
To redirect the output of CHKDSK to a file named STATUS, type the following
command:
 
    chkdsk a: > status
 
Because the output is redirected, MS-DOS does not repair errors it
encounters during the check; but it records all the errors in a report file.
Afterward, you can use CHKDSK with the /F switch without redirection to
correct any errors noted in the status report.
 
----------------------------------------------------------------------------
                                   CHOICE
 
Prompts the user to make a choice in a batch program. Displays a specified
prompt and pauses for the user to choose from among a specified set of keys.
You can use this command only in batch programs.
 
For more information on the ERRORLEVEL parameter, see <CHOICE--Note> and the
<IF> command.
 
Syntax
 
    CHOICE [/C[:]keys] [/N] [/S] [/T[:]c,nn] [text]
 
Parameters
 
text
    Specifies text you want to be displayed before the prompt. Quotation
    marks are necessary only if you include a switch character (/) as part
    of the text before the prompt. If you don't specify text, CHOICE
    displays only a prompt.
 
Switches
 
/C[:]keys
    Specifies allowable keys in the prompt. When displayed, the keys will be
    separated by commas, will appear in brackets ([]), and will be followed
    by a question mark. If you don't specify the /C switch, CHOICE uses YN
    as the default. The colon (:) is optional.
 
/N
    Causes CHOICE not to display the prompt. The text before the prompt is
    still displayed, however. If you specify the /N switch, the specified
    keys are still valid.
 
/S
    Causes CHOICE to be case sensitive. If the /S switch is not specified,
    CHOICE will accept either upper or lower case for any of the keys that
    the user specifies.
 
/T[:]c,nn
    Causes CHOICE to pause for a specified number of seconds before
    defaulting to a specified key. The values for the /T switch are as
    follows:
 
    c
        Specifies the character to default to after nn seconds. The
        character must be in the set of choices specified in the /C switch.
 
    nn
        Specifies the number of seconds to pause. Acceptable values are from
        0 to 99. If 0 is specified, there will be no pause before
        defaulting.
 
----------------------------------------------------------------------------
                                CHOICE--Note
 
ERRORLEVEL parameters
 
The first key you assign returns a value of 1, the second a value of 2, the
third a value of 3, and so on. If the user presses a key that is not among
the keys you assigned, CHOICE sounds a warning beep (that is, it sends a
BEL, or 07h, character to the console).
 
If CHOICE detects an error condition, it returns an ERRORLEVEL value of 255.
If the user presses CTRL+BREAK or CTRL+C, CHOICE returns an ERRORLEVEL value
of 0.
 
When you use ERRORLEVEL parameters in a batch program, list them in
decreasing order.
 
----------------------------------------------------------------------------
                              CHOICE--Examples
 
What the user sees when you use CHOICE in a batch file
 
If you use the following syntax in a batch file,
 
    choice /c:ync
 
the user sees the following when CHOICE is started:
 
    [Y,N,C]?
 
If you add text to the syntax,
 
    choice /c:ync Yes, No, or Continue
 
the user sees the following when CHOICE is started:
 
    Yes, No, or Continue [Y,N,C]?
 
What the user sees if you leave out a prompt
 
If, as in the following example, you use the /N switch to leave out the
prompt in a batch program,
 
    choice /n Yes, No, or Continue?
 
the user sees only the text you specified when CHOICE is started:
 
    Yes, No, or Continue?
 
What the user sees if you use the T switch
 
If you use the following syntax in a batch program,
 
    choice /c:ync /t:n,5
 
the user sees the following when CHOICE is started:
 
    [Y,N,C]?
 
If, after 5 seconds, the user hasn't pressed a key, CHOICE chooses N and
returns an ERRORLEVEL value of 2. If the user presses a key before 5
seconds, CHOICE returns the value corresponding to the user's choice.
 
To have the option of defragmenting drive C when you start your computer,
you could add the following lines to your AUTOEXEC.BAT file:
 
    choice Defrag drive /ty,5
    if errorlevel 2 goto SkipDefrag
    defrag c:
    :SkipDefrag
 
If you press N within 5 seconds, DEFRAG will not run and CHOICE returns an
ERRORLEVEL value of 2. If you do not press N within 5 seconds, or if you
choose Y, DEFRAG is run on drive C.
 
Using CHOICE in a batch program
 
The following batch program demonstrates using the CHOICE option to select
one of three programs: MS-DOS Editor, Microsoft Anti-Virus, or Microsoft
Backup.
 
Notice that the IF ERRORLEVEL statements are listed in decreasing order.
MS-DOS will consider the IF statement true if the ERRORLEVEL parameter
returned by CHOICE is greater than or equal to the parameter specified in
the IF command.
 
    @echo off
    cls
    echo.
    echo A   Microsoft Editor
    echo B   Microsoft Anti-Virus
    echo C   Microsoft Backup
    echo.
    choice /c:abc Choose an option
    if errorlevel 3 goto MSBackup
    if errorlevel 2 goto Msav
    if errorlevel 1 goto Edit
 
    :Edit
    edit
    goto End
 
    :Msav
    msav
    goto End
 
    :Msbackup
    msbackup
    goto End
 
    :End
 
----------------------------------------------------------------------------
                                    CLS
 
Clears the screen.
 
The cleared screen shows only the command prompt and cursor.
 
Syntax
 
    CLS
 
----------------------------------------------------------------------------
                                  COMMAND
 
Starts a new instance of the MS-DOS command interpreter.
 
A command interpreter is a program that lets you type commands. Use the EXIT
command to stop the new command interpreter and return control to the old
one.
 
Syntax
    COMMAND [[drive:]path] [device] [/E:nnnnn] [/Y [/C command|/K command]]
 
In your CONFIG.SYS file, use the following syntax:
 
    SHELL=[[dos-drive:]dos-path]COMMAND.COM [[drive:]path][device]
    [/E:nnnn] [/P [/MSG]]
 
Parameters
 
[drive:]path
    Specifies the directory in which the command interpreter is to look for
    the COMMAND.COM file when the transient part of the program needs to be
    reloaded. This parameter must be included when loading COMMAND.COM for
    the first time if the COMMAND.COM file is not located in the root
    directory. This parameter is used to set the COMSPEC environment
    variable. For more information, see Transient and Resident Memory in
    <COMMAND--Notes>.
 
device
    Specifies a different device for command input and output. For more
    information about this parameter, see the <CTTY> command.
 
[dos-drive:]dos-path
    Specifies the location of the COMMAND.COM file.
 
Switches
 
/C command
    Specifies that the command interpreter is to perform the specified
    command and then exit. This switch must be the last switch on the
    command line.
 
/E:nnnnn
    Specifies the environment size, where nnnnn is the size in bytes. The
    value of nnnnn must be in the range 160 through 32768. MS-DOS rounds
    this number up to a multiple of 16 bytes. The default value is 256.
 
/K command
    Runs the specified command, program, or batch program and then displays
    the MS-DOS command prompt. This switch must be the last switch on the
    COMMAND command line.
 
    This switch is particularly useful for specifying a startup batch file
    for the MS-DOS Prompt in Windows (much like AUTOEXEC.BAT for MS-DOS). To
    do this, open the DOSPRMPT.PIF file using the PIF Editor, and type the
    /K switch in the Optional Parameters box. It is not recommended to use
    the /K switch on the SHELL command line in your CONFIG.SYS file; doing
    so can cause problems with applications and installation programs that
    make changes to your AUTOEXEC.BAT file.
 
/P
    Should be used only when COMMAND is used with the SHELL command in the
    CONFIG.SYS file. The /P switch makes the new copy of the command
    interpreter permanent. In this case, the EXIT command cannot be used to
    stop the command interpreter. If you specify /P, MS-DOS runs your
    AUTOEXEC.BAT file before displaying the command prompt. If there is no
    AUTOEXEC.BAT file in the root directory of the startup drive, MS-DOS
    carries out the DATE and TIME commands instead. If you do not have a
    SHELL command in your CONFIG.SYS file, COMMAND.COM is automatically
    loaded from the root directory with the /P switch.
 
/MSG
    Specifies that all error messages should be stored in memory. Usually,
    some messages are stored only on disk. This switch is useful only if you
    are running MS-DOS from floppy disks. You must specify the /P switch
    when you use the /MSG switch. For more information about using the /MSG
    switch, see <COMMAND--Notes>.
/Y
    Directs COMMAND.COM to step through the batch file specified by the /C
    or /K switches. This switch is useful for debugging batch files. For
    example, to step through the TEST.BAT batch file line by line, you would
    type COMMAND /Y /C TEST. The /Y switch requires either the /C or the /K
    switch.
 
Related Command
 
The <SHELL> command is the preferred method of using COMMAND to permanently
increase space for the environment table.
 
----------------------------------------------------------------------------
                               COMMAND--Notes
 
Limits on environment size
 
If nnnnn is less than 160 or greater than 32768, MS-DOS uses the default
value of 256 bytes and displays the following message:
 
    Parameter value not in allowed range.
 
Changing your terminal device
 
You can specify a different device (such as AUX) for input and output by
using the device parameter. For more information about device, see the
<CTTY> command.
 
Running multiple command interpreters
 
When you start a new command interpreter, MS-DOS creates a new command
environment. This new environment is a copy of the parent environment. You
can change the new environment without affecting the old one. The default
size of the new environment is 256 bytes or the size of the current
environment rounded up to the next 16 bytes, whichever is larger. Use the /E
switch to override the default size. (Note that the current environment
refers to the memory actually being used, not to the environment size
specified with the previous /E switch.)
 
Transient and resident memory
 
MS-DOS loads the command interpreter in two parts: the resident part (which
is always in memory) and the transient part (at the top of conventional
memory). Some programs write over the transient part of COMMAND.COM when
they run. When this happens, the resident part must locate the COMMAND.COM
file on disk to reload the transient part. The COMSPEC environment variable
identifies where COMMAND.COM is located on the disk. If COMSPEC is set to a
floppy disk drive, MS-DOS might prompt you to insert a disk that contains
COMMAND.COM.
 
If MS-DOS is loaded in the HMA, a portion of resident COMMAND.COM is also
loaded into the HMA, making more conventional memory available for
programs.
 
Using the /MSG switch
 
Usually, MS-DOS leaves many error messages in the COMMAND.COM file on the
disk instead of using memory to store them. When MS-DOS needs to display one
of these messages, MS-DOS retrieves the message from the disk containing
COMMAND.COM.
 
If you are running MS-DOS from floppy disks instead of from a hard disk,
MS-DOS cannot retrieve such error messages unless you have the disk
containing COMMAND.COM in drive A. If this disk is not present, MS-DOS
displays one of the following short messages instead of the full message:
 
    Parse error
 
    Extended error
 
You can make sure MS-DOS displays complete error messages by using the /MSG
switch with COMMAND. This switch forces MS-DOS to keep these error messages
in memory so that they are always available when needed.
 
Use the /MSG switch with COMMAND if you have a floppy disk system, unless
you cannot afford to lose the memory used to store the error messages.
 
You must also specify the /P switch when you use the /MSG switch.
 
Internal commands
 
COMMAND is called a command processor because it reads any commands that you
type and processes them.
 
Some commands are recognized and carried out by COMMAND itself. These
commands are considered internal to COMMAND. Other MS-DOS commands are
separate programs located on your hard disk, which MS-DOS loads just like
your other programs.
 
The following MS-DOS commands are implemented by COMMAND:
 
<BREAK>            <ECHO>              <REM>
<CALL>             <EXIT>              <RENAME (REN)>
<CHCP>             <FOR>               <RMDIR (RD)>
<CHDIR (CD)>       <GOTO>              <SET>
<CLS>              <IF>                <SHIFT>
<COPY>             <LOADHIGH (LH)>     <TIME>
<CTTY>             <MKDIR (MD)>        <TYPE>
<DATE>             <PATH>              <VER>
<DEL (ERASE)>      <PAUSE>             <VERIFY>
<DIR>              <PROMPT>            <VOL>
 
----------------------------------------------------------------------------
                             COMMAND--Examples
 
The following command specifies that the MS-DOS command interpreter is to
start a new command interpreter from the current program, run a batch
program named MYBAT.BAT, and then return to the first command interpreter:
 
    command /c mybat.bat
 
The following CONFIG.SYS command specifies that COMMAND.COM is located in
the DOS directory on drive C:
 
    shell=c:\dos\command.com c:\dos\ /e:1024
 
This command directs MS-DOS to set the COMSPEC environment variable to
C:\DOS\COMMAND.COM. This command also creates an environment of 1024 bytes
for this command interpreter.
 
The following command starts an instance of COMMAND.COM and runs the
MYBATCH.BAT file, stepping through the file command by command:
 
    command /y /c mybatch.bat
 
----------------------------------------------------------------------------
                                    COPY
 
Copies one or more files to the location you specify.
 
This command can also be used to combine files. When more than one file is
copied, MS-DOS displays each filename as the file is copied.
 
Syntax
 
    COPY [/Y|/-Y] [/A|/B] source [/A|/B] [+ source [/A|/B] [+
    ...]][destination [/A|/B]] [/V]
 
Parameters
 
source
    Specifies the location and name of a file or set of files from which you
    want to copy. Source can consist of a drive letter and colon, a
    directory name, a filename, or a combination.
 
destination
    Specifies the location and name of a file or set of files to which you
    want to copy. Destination can consist of a drive letter and colon, a
    directory name, a filename, or a combination.
 
Switches
 
/Y
    Indicates that you want COPY to replace existing file(s) without
    prompting you for confirmation. By default, if you specify an existing
    file as the destination file, COPY will ask you if you want to overwrite
    the existing file. (Previous versions of MS-DOS would simply replace the
    existing file.) If the COPY command is part of a batch file, COPY will
    behave as in previous versions. Specifying this switch overrides all
    defaults and the current setting of the COPYCMD environment variable.
 
/-Y
    Indicates that you want COPY to prompt you for confirmation when
    replacing an existing file. Specifying this switch overrides all
    defaults and the current setting of the COPYCMD environment variable.
 
/A
    Indicates an ASCII text file. When the /A switch precedes the list of
    filenames on the command line, it applies to all files whose names
    follow the /A switch, until COPY encounters a /B switch, in which case
    the /B switch applies to the file whose name precedes the /B switch.
 
    When the /A switch follows a filename, it applies to the file whose name
    precedes the /A switch and to all files whose names follow the /A
    switch, until COPY encounters a /B switch, in which case the /B switch
    applies to the file whose name precedes the /B switch.
 
    An ASCII text file can use an end-of-file character (CTRL+Z) to indicate
    the end of the file. When combining files, COPY treats files as ASCII
    text files by default.
 
/B
    Indicates a binary file. When the /B switch precedes the list of
    filenames on the command line, it applies to all files whose names
    follow the /B switch, until COPY encounters an /A switch, in which case
    the /A switch applies to the file whose name precedes the /A switch.
 
    When the /B switch follows a filename, it applies to the file whose name
    precedes the /B switch and to all files whose names follow the /B
    switch, until COPY encounters an /A switch, in which case the /A switch
    applies to the file whose name precedes the /A switch.
 
    The /B switch specifies that the command interpreter is to read the
    number of bytes specified by the file size in the directory. The /B
    switch is the default value for COPY unless COPY is combining files.
 
/V
    Verifies that new files are written correctly.
 
Related Command
 
For information about copying directories and subdirectories, see the
<XCOPY> command.
 
----------------------------------------------------------------------------
                                COPY--Notes
 
Setting the COPYCMD environment variable
 
You can set the COPYCMD environment variable to specify whether you want the
COPY, MOVE, and XCOPY commands to prompt you for confirmation before
overwriting a file, whether issued from the command prompt or a batch file.
 
To force the COPY, MOVE, and XCOPY commands to prompt you before overwriting
in all cases, set the COPYCMD environment variable /-Y. To force these
commands to overwrite in all cases without prompting you, set the COPYCMD
environment variable to /Y.
 
Typing any of these commands with the /Y or /-Y switch overrides all
defaults and the current setting of the COPYCMD environment variable.
 
Copying to and from devices
 
You can substitute a device name for one or more occurrences of source or
for destination.
 
Using or omitting the /B switch when copying to a device
 
When destination is a device (for example, COM1 or LPT1), the /B switch
causes MS-DOS to copy data to the device in binary mode. In binary mode, all
characters (including such special characters as CTRL+C, CTRL+S, CTRL+Z, and
carriage return) are copied to the device as data. Whereas, omission of the
/B switch causes MS-DOS to copy data to the device in ASCII mode. In ASCII
mode, such special characters as those previously listed may cause MS-DOS to
take special action during the copying process.
 
Using the default destination file
 
If you do not specify a destination file, MS-DOS creates a copy with the
same name, creation date, and creation time as the original file, placing
the new copy in the current directory on the current drive. If the source
file is on the current drive and in the current directory and you do not
specify a different drive or directory for the destination file, the COPY
command stops and MS-DOS displays the following error message:
 
    File cannot be copied onto itself
    0 File(s) copied
 
Using the /V switch
 
If MS-DOS cannot verify a write operation, it displays an error message.
Although recording errors rarely occur with the COPY command, the /V switch
lets you verify that critical data has been correctly recorded. The /V
switch also slows down the COPY command, because MS-DOS must check each
sector recorded on the disk.
 
Using the /A and /B switches
 
The effect of an /A or /B switch depends upon its position on the command
line. When the /A or /B switch follows the source filename, COPY performs as
shown in the following list:
 
/A
    Treats the file as an ASCII (text) file and copies data that precedes
    the first end-of-file character. COPY does not copy the first
    end-of-file character or the remainder of the file.
 
/B
    Copies the entire file, including any end-of-file character.
 
When the /A or /B switch follows the destination filename, COPY performs as
shown in the following list:
 
/A
    Adds an end-of-file character as the last character of the file.
 
/B
    Does not add an end-of-file character.
 
Combining files with the COPY command
 
If you specify more than one source, separating entries with a plus sign
(+), COPY combines the files, creating a single file. If you use wildcards
in source but specify a single filename in destination, COPY combines all
files matching the filename in source and creates a single file with the
filename specified in destination.
 
In either case, COPY assumes the combined files are ASCII files unless you
specify the /B switch. (Do not combine non-ASCII files without specifying
the /B switch; doing so can result in truncated files, since most binary
files contain CTRL+Z characters which cause COPY to behave as if it has
reached the end of the file.)
 
If the name of the destination file is the same as the name of one of the
files being copied (except the first file), the original contents of the
destination file are lost. When this happens, COPY displays the following
message:
 
    Content of destination lost before copy
 
Copying files in subdirectories
 
To copy all of a directory's files and subdirectories, you should use the
XCOPY command.
 
Copying zero-length files
 
COPY does not copy files that are 0 bytes long; instead, it deletes such
files. Use XCOPY to copy these files.
 
Changing the time and date of a file
 
If you want to assign the current time and date to a file without modifying
the file, use a command in the following format. The commas indicate the
omission of the destination parameter.
 
    copy /b source+,,
                                      
----------------------------------------------------------------------------
                               COPY--Examples
 
The following command copies a file and ensures that an end-of-file
character is at the end of the copied file:
 
    copy memo.doc letter.doc /a
 
To copy the NOTE.TXT file from the current drive and directory to the
directory MYNOTES, and to prevent MS-DOS from prompting you before
overwriting the destination file (if it already exists), type the following
command:
 
    copy note.txt mynotes /y
 
To copy a file named ROBIN.TYP from the current drive and directory to an
existing directory named BIRDS that is located on drive C, type the
following command:
 
    copy robin.typ c:\birds
 
If the BIRDS directory doesn't exist, MS-DOS copies the file ROBIN.TYP into
a file named BIRDS that is located in the root directory on the disk in
drive C.
 
To copy several files into one file, list any number of files as source
parameters on the COPY command line. Separate filenames with a plus sign (+)
and specify a filename for the resulting combined file, as the following
example shows:
 
    copy mar89.rpt + apr89.rpt + may89.rpt report
 
This command combines the files named MAR89.RPT, APR89.RPT, and MAY89.RPT
from the current drive and directory and places them in a file named REPORT
in the current directory on the current drive. When files are combined, the
destination file is created with the current date and time. If you omit
destination, MS-DOS combines the files and stores them under the name of the
first specified file. For example, if a file named REPORT already exists,
you can use the following command to combine all four files in REPORT:
 
    copy report + mar89.rpt + apr89.rpt + may89.rpt
 
You can also combine several files into one by using wildcards, as the
following example shows:
 
    copy *.txt combin.doc
 
This command combines all files in the current directory on the current
drive that have the extension .TXT into one file named COMBIN.DOC, also in
the current directory on the current drive.
 
If you want to combine several binary files into one by using wildcards,
include the /B switch, as the following example shows:
 
    copy /b *.exe combin.exe
 
This prevents MS-DOS from treating CTRL+Z as an end-of-file character.
 
CAUTION:  If you combine binary files, the resulting file might not be
          usable due to internal formatting.
 
In the following example, COPY combines each file that has a .TXT extension
with its corresponding .REF file. The result is a file with the same
filename but with a .DOC extension. Thus, COPY combines FILE1.TXT with
FILE1.REF to form FILE1.DOC. Then COPY combines FILE2.TXT with FILE2.REF to
form FILE2.DOC, and so on.
 
    copy *.txt + *.ref *.doc
 
The following COPY command combines first all files with the .TXT extension,
then all files with the .REF extension into one file named COMBIN.DOC:
 
    copy *.txt + *.ref combin.doc
 
Copying information from the keyboard
 
The following COPY command copies what you type at the keyboard to the
OUTPUT.TXT file:
 
    copy con output.txt
 
After you type this command and press ENTER, MS-DOS copies everything you
type to the file OUTPUT.TXT. When you are finished typing, press CTRL+Z to
indicate that you want to end the file. The CTRL+Z character will appear on
the screen as "Z". You can also end a COPY CON command by pressing the F6
key. When you press F6, it generates the CTRL+Z character, which appears on
the screen as Z.
 
The following example copies information from the keyboard to the printer
connected to LPT1:
 
    copy con lpt1
 
----------------------------------------------------------------------------
                                  COUNTRY
 
Enables MS-DOS to use country-specific conventions for displaying times,
dates, and currency; for determining the order by which characters are
sorted; and for determing which characters can be used in filenames. You can
use this command only in your CONFIG.SYS file.
 
The COUNTRY command configures MS-DOS to recognize the character set and
punctuation conventions observed when using one of the supported languages.
 
Syntax
 
    COUNTRY=xxx[,[yyy][,[drive:][path]filename]]
 
Parameters
 
xxx
    Specifies the country code.
 
yyy
    Specifies the character set for the country.
 
[drive:][path]filename
    Specifies the location and name of the file containing country
    information.
 
Related Commands
 
For information about changing characters and their arrangement on your
keyboard, see the <KEYB> command, or see the chapter "Customizing for
International Use" in the MS-DOS 6 User's Guide.
 
For information about preparing and selecting character sets, see the
<MODE (set device code pages)> command.
 
For information about loading country-specific information, see the
<NLSFUNC> command.
 
----------------------------------------------------------------------------
                               COUNTRY--Notes
 
Changing default settings
 
MS-DOS uses the United States as the default setting. You can use the
COUNTRY command in your CONFIG.SYS file to change the setting.
 
If you do not specify the location and name of the file containing
country-specific information, MS-DOS tries to find the COUNTRY.SYS file in
the root directory of your startup drive.
 
Specifying supported languages
 
The following table lists each country or language supported by MS-DOS. The
table also lists the character sets you can use with each country code. For
example, if you use country code 003, you can use only character set 437 or
850 for the yyy parameter. The first of the two character sets listed for
each country or language is its default character set.
 
Country or language    Country       Character sets
                       code
---------------------------------------------------------------------------
 
Belgium                032           850, 437
 
Brazil                 055           850, 437
 
Canadian-French        002           863, 850
 
Croatia                038           852, 850
 
Czech Republic         042           852, 850
 
Denmark                045           850, 865
 
Finland                358           850, 437
 
France                 033           850, 437
 
Germany                049           850, 437
 
Hungary                036           852, 850
 
International          061           437, 850
English
 
Italy                  039           850, 437
 
Latin America          003           850, 437
 
Netherlands            031           850, 437
 
Norway                 047           850, 865
 
Poland                 048           852, 850
 
Portugal               351           850, 860
 
Serbia/Yugoslavia      038           852, 850
 
Slovakia               042           852, 850
 
Slovenia               038           852, 850
 
Spain                  034           850, 437
 
Sweden                 046           437, 850
 
Switzerland            041           850, 437
 
United Kingdom         044           437, 850
 
United States          001           437, 850
 
Character sets for the following countries or languages are also available
with special versions of MS-DOS: Arabic, Israel, Japan, Korea, People's
Republic of China, and Taiwan.
 
Specifying international time and date formats
 
The country code specifies the time and date formats used by the following
MS-DOS commands: BACKUP, DATE, RESTORE, and TIME.
 
The following table lists the date and time formats related to each country
code. For each country code, the "Date format" column shows how MS-DOS
displays January 3, 1993, and the "Time format" column shows how MS-DOS
displays 5:35 P.M. (with 0 seconds and 0 hundredths of a second).
 
Country or language    Country       Date         Time format
                       code          format
---------------------------------------------------------------------------
 
Belgium                032           23/01/1993   17:35:00
 
Brazil                 055           23/01/1993   17:35:00
 
Canadian-French        002           1993-01-23   17:35:00
 
Czechoslovakia         042           1993-01-23   17:35:00
 
Denmark                045           23-01-1993   17.35.00
 
Finland                358           23.01.1993   17.35.00
 
France                 033           23.01.1993   17:35:00
 
Germany                049           23.01.1993   17:35:00
 
Hungary                036           1993-01-23   17:35:00
 
International          061           23-01-1993   5:35:00.00p
English
 
Italy                  039           23/01/1993   17.35.00
 
Latin America          003           23/01/1993   5:35:00.00p
 
Netherlands            031           23-01-1993   17:35:00
 
Norway                 047           23.01.1993   17:35:00
 
Poland                 048           1993-01-23   17:35:00
 
Portugal               351           23-01-1993   17:35:00
 
Spain                  034           23/01/1993   17:35:00
 
Sweden                 046           1993-01-23   17.35.00
 
Switzerland            041           23.01.1993   17,35,00
 
United Kingdom         044           23/01/1993   17:35:00.00
 
United States          001           01-23-1993   5:35:00.00p
 
Yugoslavia             038           1993-01-23   17:35:00
 
Character sets for the following countries or languages are also available
with special versions of MS-DOS: Arabic, Israel, Japan, Korea, People's
Republic of China, and Taiwan.
 
----------------------------------------------------------------------------
                             COUNTRY--Examples
 
To convert international currency, time, date, and case to French
conventions, add the following command to your CONFIG.SYS file:
 
    country=033
 
For this example, assume that the COUNTRY.SYS file is in the root directory
of the startup drive. If COUNTRY.SYS is in a different location, you would
specify the location in [drive:]path on the command line.
 
To specify a character set with the country code for France, type the
following:
 
    country=033,850
 
If you omit the character set but include the [drive:][path] filename
parameter, you must still type the comma that would have preceded the
character set, as the following example shows:
 
    country=033,,c:\dos\country.sys
 
----------------------------------------------------------------------------
                                    CTTY
 
Changes the terminal device used to control your computer.
 
Use the CTTY command if you want to use another device to enter commands.
 
Syntax
 
    CTTY device
 
Parameter
 
device
    Specifies the alternative device you want to use to type MS-DOS
    commands. Valid values for the device parameter are PRN, LPT1, LPT2,
    LPT3, CON, AUX, COM1, COM2, COM3, and COM4.
 
Related Command
 
For more information about changing the input device when specifying a
command interpreter, see the <COMMAND> command.
                                      
----------------------------------------------------------------------------
                                CTTY--Notes
 
Setting up a serial port for CTTY
 
Use the MODE command to set up your serial port for baud rate, parity, bits,
and stop bit before using the CTTY command.
 
Using CTTY with programs that do not use MS-DOS
 
Many programs do not use MS-DOS for input or output. These programs send
input directly to the hardware on your computer. The CTTY command has no
effect on these programs; it affects only programs that use MS-DOS for
reading keyboard input and displaying output.
 
Setting the terminal device with COMMAND
 
In addition to the CTTY command, you can use the device parameter of the
COMMAND command to specify the input device.
                                      
----------------------------------------------------------------------------
                               CTTY--Examples
 
To change control of all input and output from the current device (your
computer monitor and keyboard) to the AUX port, type the following at the
command prompt:
 
    ctty aux
 
In this example, a remote terminal device connected to the AUX port controls
input and output for your system.
 
To transfer input and output back to the monitor and keyboard, type the
following command at the remote terminal:
 
    ctty con
 
----------------------------------------------------------------------------
                                    DATE
 
Displays the date and prompts you to change the date if necessary.
 
MS-DOS records the current date for each file you create or change; this
date is listed next to the filename in the directory.
 
Syntax
 
    DATE [mm-dd-yy]
 
Parameter
 
mm-dd-yy
    Sets the date you specify. Values for day, month, and year must be
    separated by periods (.), hyphens (-), or slash marks (/). The date
    format depends on the COUNTRY setting you are using in your CONFIG.SYS
    file. The following list shows the valid values for the month, day, and
    year portions of the mm-dd-yy parameter.
 
    mm    1 through 12
 
    dd    1 through 31
 
    yy    80 through 99    or    1980 through 2099
 
Related Command
 
For information about changing the current time, see the <TIME> command.
 
----------------------------------------------------------------------------
                                DATE--Notes
 
Adjusting for days in a month
 
MS-DOS is programmed to change months and years correctly, whether the month
has 28, 29, 30, or 31 days.
 
Using the DATE command in your AUTOEXEC.BAT file
 
To prompt users for the date every time the computer is restarted, include
the DATE command in your AUTOEXEC.BAT file.
 
Changing the date format
 
To display the date in other format besides mm-dd-yy, add the COUNTRY
command to your CONFIG.SYS file. You can change the date format to the
European standard format (dd-mm-yy) or to the Scientific International
(Metric) format (yy-mm-dd).
 
----------------------------------------------------------------------------
                                  DBLSPACE
 
Compresses hard disk drives or floppy disks, and configures drives that were
compressed by using DoubleSpace.
 
Syntax
 
When you issue the DBLSPACE command by itself, the DoubleSpace program
starts. This program provides an easy-to-use, menu-oriented user interface
for setting up and working with compressed drives. For more information, see
the chapter "Making More Disk Space Available" in the MS-DOS 6 User's Guide.
For tips on using DoubleSpace, see <DoubleSpace Tips>.
 
If you add switches or parameters to the DBLSPACE command, MS-DOS carries
out the requested task without starting the DoubleSpace program. The command
syntax differs from task to task. You can use the DBLSPACE command to
perform the following tasks:
 
  Compress a hard disk drive or floppy disk. For more information, see
   <DBLSPACE /COMPRESS>.
 
  Create a new compressed drive in the free space on an existing drive. For
   more information, see <DBLSPACE /CREATE>.
 
  Defragment a compressed drive. For more information, see
   <DBLSPACE /DEFRAGMENT>.
 
  Delete a compressed drive. For more information, see <DBLSPACE /DELETE>.
 
  Format a compressed drive. For more information, see <DBLSPACE /FORMAT>.
 
  Display information about a compressed drive. For more information, see
   <DBLSPACE /INFO>.
 
  Display a list of the drives on your computer. The list includes
   compressed and uncompressed hard disk drives, floppy disk drives, and
   other removable-media drives. It does not include network drives. For
   more information, see <DBLSPACE /LIST>.
 
  Mount a compressed volume file (CVF). When DoubleSpace mounts a CVF, it
   assigns it a drive letter; you can then use the files that CVF contains.
   For more information, see <DBLSPACE /MOUNT>.
 
  Change the estimated compression ratio of a compressed drive. For more
   information, see <DBLSPACE /RATIO>.
 
  Change the size of a compressed drive. For more information, see
   <DBLSPACE /SIZE>.
 
  Uncompress a compressed drive. For more information, see
   <DBLSPACE /UNCOMPRESS>.
 
  Unmount a compressed drive. For more information, see
   <DBLSPACE /UNMOUNT>.
 
  Change the settings in your DBLSPACE.INI file. For more information, see
   <DBLSPACE.INI>.
 
----------------------------------------------------------------------------
                              DBLSPACE--Notes
 
Fixing problems with drives compressed using DoubleSpace
 
Previous versions of DoubleSpace included the DoubleSpace Chkdsk command
(DBLSPACE /CHKDSK) for checking the validity of the specified compressed
drive.
 
DoubleSpace no longer provides a Chkdsk command. Instead, MS-DOS version 6.2
includes the new ScanDisk program, a full-featured disk analysis and repair
utility. ScanDisk can check and repair both uncompressed drives and
DoubleSpace drives. It can even check and repair unmounted DoubleSpace
compressed volume files. For more information, see <ScanDisk>.
 
Running the DBLSPACE command without switches or parameters
 
The first time you run the DBLSPACE command, it starts the DoubleSpace Setup
program. DoubleSpace Setup compresses your hard disk drive and loads
DBLSPACE.BIN into memory. DBLSPACE.BIN is the part of MS-DOS that provides
access to compressed drives.
 
Thereafter, when you run the DBLSPACE command without specifying any
switches or parameters, the DoubleSpace program starts. This program lists
your compressed drives and provides menu commands for working with them. You
can perform all DoubleSpace tasks either from within the DoubleSpace program
or from the MS-DOS command line.
 
DBLSPACE.BIN and DBLSPACE.SYS
 
DBLSPACE.BIN is the part of MS-DOS that provides access to your compressed
drives. When you start your computer, MS-DOS loads DBLSPACE.BIN along with
other operating system functions, before carrying out the commands in your
CONFIG.SYS and AUTOEXEC.BAT files. DBLSPACE.BIN initially loads in
conventional memory, since it loads before device drivers that provide
access to upper memory. Normally, if your hard drive has been compressed
using DoubleSpace, DBLSPACE.BIN is loaded even if you press F5 or F8. For
information about starting your computer without loading DBLSPACE.BIN, see
<CONFIG.SYS commands>.
 
The DBLSPACE.SYS device driver does not provide access to compressed drives;
it simply determines the final location of DBLSPACE.BIN in memory. When
loaded with a DEVICE command, the DBLSPACE.SYS device driver moves
DBLSPACE.BIN from the top to the bottom of conventional memory. When loaded
with a DEVICEHIGH command, DBLSPACE.SYS moves DBLSPACE.BIN from conventional
to upper memory, if available. Whenever possible, DBLSPACE.SYS moves a
portion of DBLSPACE.BIN into the HMA.
 
For more information, see the topic <DBLSPACE.SYS>.
 
How DoubleSpace assigns drive letters
 
When you install DoubleSpace, it creates a new drive and assigns a drive
letter to that drive. DoubleSpace skips the first four available drive
letters and assigns the next available drive letter to the new drive. For
example, if your computer has only drives A, B, and C, DoubleSpace skips
letters D, E, F, and G, and assigns drive letter H to the new drive.
 
When assigning letters to additional drives (for example, if you compress
another drive), DoubleSpace works backwards from the first drive letter it
assigned. In the example above, DoubleSpace would next assign the letter G.
 
DoubleSpace attempts to avoid drive-letter conflicts with drives created by
FDISK, RAMDrive, networks, or other installable device drivers that assign
drive letters. However, if a drive-letter conflict does occur, DoubleSpace
resolves the conflict by reassigning its drive letters.
 
Compressing a RAMDrive
 
To compress a RAMDrive, use the <DBLSPACE /CREATE> command. Although it is
possible to compress a RAMDrive by using the DBLSPACE /COMPRESS command, it
is not recommended. Due to the inherent volatility of a RAMDrive,
DoubleSpace's automatic recovery mechanisms cannot work on a RAMDrive.
 
If you compress your RAMDrive, make sure the DEVICE command for RAMDRIVE.SYS
appears in your CONFIG.SYS file before the DEVICE=DBLSPACE.SYS command.
Otherwise, the compressed RAMDrive will not be automatically mounted when
your computer starts.
 
----------------------------------------------------------------------------
                              DBLSPACE /CHKDSK
 
Previous versions of DoubleSpace included the DoubleSpace Chkdsk command
(DBLSPACE /CHKDSK) for checking the validity of the specified compressed
drive.
 
DoubleSpace no longer provides a Chkdsk command. Instead, MS-DOS version 6.2
includes the new ScanDisk program, a full-featured disk analysis and repair
utility. ScanDisk can check and repair both uncompressed drives and
DoubleSpace drives. It can even check and repair unmounted DoubleSpace
compressed volume files. For more information, see <ScanDisk>.
 
----------------------------------------------------------------------------
                             DBLSPACE /COMPRESS
 
Compresses the files on an existing hard disk drive, floppy disk, or other
removable media. Compressing an existing drive makes more space available on
that drive.
 
Note:  DoubleSpace cannot compress a drive that's completely full. To
       compress your startup hard disk drive, the drive must contain at
       least 1.2 MB of free space. Other hard disk drives and floppy disks
       must contain at least 1.1 MB of free space. (DoubleSpace cannot
       compress 360K floppy disks.)
 
Syntax
 
    DBLSPACE /COMPRESS drive1: [/NEWDRIVE=drive2:] [/RESERVE=size] [/F]
 
Parameter
 
drive1:
    Specifies the existing drive you want to compress.
 
Switches
 
/COMPRESS
    Compresses the hard disk drive or floppy disk specified by the drive
    parameter. This switch can be abbreviated to /COM.
 
/NEWDRIVE=drive2:
    Specifies the drive letter for the uncompressed (host) drive. After
    DoubleSpace compresses an existing drive, your system will include both
    the existing drive (now compressed) and a new uncompressed drive. The
    /NEWDRIVE switch is optional; if you omit it, DoubleSpace assigns the
    next available drive letter to the new drive. This switch can be
    abbreviated to /NEW.
 
/RESERVE=size
    Specifies how many megabytes of space to leave uncompressed. Because
    some files, such as the Windows swap file, do not work properly when
    stored on a compressed drive, it's a good idea to reserve some
    uncompressed space. The uncompressed space will be located on the new
    uncompressed drive. (If the drive you are compressing contains a Windows
    permanent swap file, DoubleSpace moves the file to the new uncompressed
    drive.) This switch can be abbreviated to /RES.
 
/F
    Prevents DoubleSpace from displaying the final screen when compression
    is complete. This screen includes compression statistics. If you specify
    the /F switch, DoubleSpace returns to the command prompt when
    compression is complete.
 
----------------------------------------------------------------------------
                        DBLSPACE /COMPRESS -- Notes
 
Compressing Floppy Disks
 
You can use DoubleSpace to increase the storage capacity of floppy disks in
addition to hard disks. After compressing a floppy disk, you can use it to
store data or to transfer data from one computer to another.
 
Compressing a floppy disk is similar to compressing an existing hard disk
drive. You can compress a floppy disk that is completely empty or one that
contains a few files. (Make sure the floppy disk is formatted and has at
least 1.1 MB of free space. DoubleSpace cannot compress a floppy disk that
is full. DoubleSpace also cannot compress 360K floppy disks.)
 
Using Compressed Floppy Disks
 
In general, you use a compressed floppy disk just as you would a normal
floppy disk. The main difference is that, to use a compressed floppy disk to
transfer data from one computer to another, both computers must be running
DoubleSpace.
 
Mounting Compressed Floppy Disks
 
By default, DoubleSpace automatically mounts a compressed floppy disk when
you try to use that disk. However, if you disable DoubleSpace's Automount
feature in order to save memory, you must mount each compressed floppy disk
yourself, before you can use it.
 
If you have turned off Automount, when you first compress a floppy disk,
DoubleSpace mounts it for you. However, if you change floppy disks or
restart your computer, you will have to remount the floppy disk before you
can use it again.
 
To mount a floppy disk, use the <DBLSPACE /MOUNT> command.
 
To enableor disable DoubleSpace's Automount feature, use the
<DBLSPACE /AUTOMOUNT> command.
 
----------------------------------------------------------------------------
                       DBLSPACE /COMPRESS -- Examples
 
To compress drive D, type the following command:
 
    dblspace /compress d:
 
Because this command does not specify how much space to leave uncompressed,
DoubleSpace leaves 2 MB of uncompressed space (the default). Because the
command does not specify a drive letter for the uncompressed drive,
DoubleSpace assigns the next available drive letter to the new uncompressed
drive (the host drive).
 
To direct DoubleSpace to compress drive E, assign the drive letter F to the
new uncompressed drive (the host drive), and leave 4 MB of uncompressed
space on drive F, type the following command:
 
    dblspace /compress e: /newdrive=f: /reserve=4
 
----------------------------------------------------------------------------
                              DBLSPACE /CREATE
 
Creates a new compressed drive by using free space on an uncompressed drive.
The new compressed drive will provide more storage capacity than the amount
of space it uses.
 
Syntax
 
    DBLSPACE /CREATE drive1: [/NEWDRIVE=drive2:] [/SIZE=size |
    /RESERVE=size]
 
Parameter
 
drive1:
    Specifies the uncompressed drive that contains the space you want to use
    to create the new drive.
 
Switches
 
/CREATE
    Creates a new compressed drive by using free space on the uncompressed
    drive specified by drive1. This switch can be abbreviated to /CR.
 
/NEWDRIVE=drive2:
    Specifies the drive letter for the new compressed drive. The /NEWDRIVE
    switch is optional; if you omit it, DoubleSpace assigns the next
    available drive letter to the new drive. This switch can be abbreviated
    to /N.
 
/RESERVE=size
    Specifies how many megabytes of free space DoubleSpace should leave on
    the uncompressed drive. To make the compressed drive as large as
    possible, specify a size of 0.
 
    You can include either the /RESERVE switch or the /SIZE switch, but not
    both. If you omit both switches, DoubleSpace reserves 2 MB of free
    space. The /RESERVE switch can be abbreviated as /RE.
 
/SIZE=size
    Specifies the total size, in megabytes, of the compressed volume file.
    (This is the amount of space on the uncompressed drive that you want to
    allocate to the compressed drive.) You can include either the /RESERVE
    switch or the /SIZE switch, but not both. The /SIZE switch can be
    abbreviated as /SI.
 
----------------------------------------------------------------------------
                        DBLSPACE /CREATE -- Examples
 
To create a new compressed drive that uses all available space on
uncompressed drive E, type the following command:
 
    dblspace /create e: /reserve=0
 
To create a new compressed drive by using 10 MB of space on uncompressed
drive E, type the following command:
 
    dblspace /create e: /size=10
 
To create a new compressed drive by using space on uncompressed drive D, and
to direct DoubleSpace to leave 2.75 MB of free space on drive D, type the
following command:
 
    dblspace /create d: /reserve=2.75
 
The following command creates a new compressed drive by using all but 2 MB
of the space on drive D:
 
    dblspace /create d:
 
Because the command includes neither the /RESERVE switch nor the /SIZE
switch, DoubleSpace uses the default value for the /RESERVE switch and
leaves 2 MB of space on drive D.
 
----------------------------------------------------------------------------
                            DBLSPACE /DEFRAGMENT
 
Defragments the selected compressed drive. Defragmenting a compressed drive
consolidates the free space on it. If you are planning to reduce the size of
a compressed drive, you should first use the Defragment command to
consolidate the drive's free space. You can then make the drive smaller than
you could if you did not first defragment it.
 
Syntax
 
    DBLSPACE /DEFRAGMENT [/F ] [drive:]
 
Parameter
 
drive1:
    Specifies the drive you want to defragment. This parameter is optional;
    if you do not specify a drive, DoubleSpace defragments the current
    drive.
 
Switches
 
/DEFRAGMENT
    Directs DoubleSpace to defragment the specified drive. This switch can
    be abbreviated as /DEF.
 
/F
    Enables the specified drive to be defragmented more fully. For more
    information about using the /F switch, see Notes.
 
----------------------------------------------------------------------------
                       DBLSPACE /DEFRAGMENT -- Notes
 
Difference between DBLSPACE /DEFRAGMENT and the DEFRAG command
 
The <DEFRAG> command optimizes disk performance by reorganizing the files on
a drive. You can use DEFRAG to optimize uncompressed drives. Although you
can run DEFRAG on a compressed drive, doing so will probably not improve
your system's speed.
 
Unlike the DEFRAG command, the DBLSPACE /DEFRAGMENT command does not speed
up your system. DBLSPACE /DEFRAGMENT simply consolidates a compressed
drive's free space so that all the free space is at the end of the
compressed volume file. This provides the fullest utilization of your disk
space, and also enables you to reduce the size of the compressed drive more
than you otherwise could.
 
Thoroughly defragmenting a compressed drive
 
To defragment a compressed drive as much as possible, use both the DEFRAG
command and the DBLSPACE /DEFRAGMENT command, as follows:
 
1. Defragment the drive by using the DEFRAG command.
 
2. Defragment it again by using the DBLSPACE /DEFRAGMENT /F command.
 
3. Defragment it a third time by using the DBLSPACE /DEFRAGMENT command
   without the /F switch.
 
----------------------------------------------------------------------------
                      DBLSPACE /DEFRAGMENT -- Example
 
To defragment compressed drive D, you would type the following at the
command prompt:
 
    dblspace /defragment d:
 
To defragment the current compressed drive, type the following command:
 
    dblspace /defragment
 
To defragment compressed drive C as much as possible, type the following
commands:
 
    defrag c:
    dblspace /defragment /f c:
    dblspace /defragment c:
 
----------------------------------------------------------------------------
                              DBLSPACE /DELETE
 
Deletes the selected compressed drive and erases the associated compressed
volume file.
 
CAUTION:  Deleting a compressed drive erases the entire drive and all the
          files it contains.
 
Syntax
 
    DBLSPACE /DELETE drive:
 
Parameter
 
drive:
    Specifies the drive you want to delete. (DoubleSpace will not allow you
    to delete drive C.)
 
Switch
 
/DELETE
    Deletes the specified drive. This switch can be abbreviated as /DEL.
 
See <DBLSPACE /DELETE -- Note> for information about restoring a compressed
drive that has been accidentally deleted.
 
----------------------------------------------------------------------------
                          DBLSPACE /DELETE -- Note
 
If you accidentally delete a compressed drive, you might be able to restore
it by using Microsoft Undelete. When DoubleSpace deletes a compressed drive,
it actually deletes a file on your uncompressed drive. This file is called
the "compressed volume file". A compressed volume file has a filename in the
form DBLSPACE.xxx (for example, DBLSPACE.000).
 
First, restore the deleted compressed volume file by using Undelete. Once
you have restored the file, remount it by using the <DBLSPACE /MOUNT>
command. If DoubleSpace cannot remount the compressed volume file, run
<ScanDisk> on that compressed volume file.
 
For information about using Microsoft Undelete, see the chapter "Managing
Your System" in the MS-DOS 6 User's Guide.
 
----------------------------------------------------------------------------
                        DBLSPACE /DELETE -- Example
 
The following command directs DoubleSpace to delete compressed drive E:
 
    dblspace /delete e:
 
DoubleSpace then deletes the compressed volume file for drive E. This
completely erases drive E and all the files it contains.
 
Note:  You cannot delete drive C.
 
See <DBLSPACE /DELETE -- Note> for information about restoring a compressed
drive that has been accidentally deleted.
 
----------------------------------------------------------------------------
                              DBLSPACE /FORMAT
 
Formats the selected compressed drive.
 
CAUTION:  Formatting a compressed drive deletes all the files it contains.
          You cannot unformat a drive that has been formatted by using
          DBLSPACE /FORMAT.
 
Syntax
 
    DBLSPACE /FORMAT drive:
 
Parameter
 
drive:
    Specifies the drive you want to format. (DoubleSpace will not allow you
    to format drive C.)
 
Switch
 
/FORMAT
    Directs DoubleSpace to format the specified compressed drive. This
    switch can be abbreviated as /F.
 
----------------------------------------------------------------------------
                        DBLSPACE /FORMAT -- Example
 
The following command directs DoubleSpace to format compressed drive E:
 
    dblspace /format e:
 
DoubleSpace then formats compressed drive E, which completely erases all the
files on it.
 
----------------------------------------------------------------------------
                               DBLSPACE /INFO
 
Displays information about the selected drive's free and used space, the
name of its compressed volume file, and its actual and estimated compression
ratios.
 
You can use the DBLSPACE /INFO command while Windows is running.
 
Syntax
 
    DBLSPACE [/INFO | drive:]
 
Parameter
 
drive:
    Specifies the compressed drive about which you want information. If you
    don't specify a drive letter, DoubleSpace displays information about the
    current drive.
 
Switch
 
/INFO
    Directs DoubleSpace to display information about the selected drive.
    This switch is optional and can be omitted as long as you specify a
    drive letter.
 
----------------------------------------------------------------------------
                         DBLSPACE /INFO -- Examples
 
The following command displays information about the current drive:
 
    dblspace /info
 
The following command displays information about drive C:
 
    dblspace /info c:
 
The following command displays information about drive E:
 
    dblspace e:
 
----------------------------------------------------------------------------
                               DBLSPACE /LIST
 
Lists and briefly describes all your computer's drives (except network
drives and CD-ROM drives), and specfies whether DoubleSpace's Automount and
DoubleGuard features are enabled or disabled.
 
You can use the DBLSPACE /LIST command while Windows is running.
 
Syntax
 
    DBLSPACE /LIST
 
Switch
 
/LIST
    Directs DoubleSpace to display a list of your computer's local
    (non-network) drives. This switch can be abbreviated to /LI.
 
----------------------------------------------------------------------------
                         DBLSPACE /LIST -- Example
 
The following command displays a list of your computer's drives (except
network drives and CD-ROM drives):
 
    dblspace /list
 
When you type this command, DoubleSpace displays information similar to the
following:
 
Drive  Type                        Total Free  Total Size  CVF Filename
-----  --------------------------  ----------  ----------  ---------------
  A    Removable-media drive       No disk in drive
  B    Compressed floppy disk         1.27 MB     1.27 MB  H:DBLSPACE.000
  C    Compressed hard drive         13.99 MB    96.49 MB  K:DBLSPACE.000
  D    Local hard drive               2.38 MB    39.98 MB
  E    Local hard drive              37.33 MB   201.94 MB
  F    Available for DoubleSpace
  G    Available for DoubleSpace
  H    Floppy drive                   0.00 MB     0.70 MB
  I    Available for DoubleSpace
  J    Available for DoubleSpace
  K    Local hard drive              12.52 MB    66.80 MB
 
DoubleGuard safety checking is enabled.
Automounting is enabled.
 
----------------------------------------------------------------------------
                              DBLSPACE /MOUNT
 
Establishes a connection between a compressed volume file (CVF) and a drive
letter so that you can use the files the CVF contains. DoubleSpace usually
mounts CVFs automatically. You need to mount a CVF only only if you
previously unmounted it, or if the CVF is located on a floppy disk and
Automount is disabled.
 
Syntax
 
    DBLSPACE /MOUNT[=nnn] drive1: [/NEWDRIVE=drive2:]
 
Parameter
 
drive1:
    Specifies the drive that contains the compressed volume file you want to
    mount. You must specify a drive letter.
 
Switches
 
/MOUNT=nnn
    Directs DoubleSpace to mount the compressed volume file with the
    filename extension specified by the nnn parameter. For example, to mount
    a CVF named DBLSPACE.001, you would specify /MOUNT=001. If you omit the
    nnn parameter, DoubleSpace attempts to mount the compressed volume file
    named DBLSPACE.000. The /MOUNT switch can be abbreviated as /MO.
 
/NEWDRIVE=drive2:
    Specifies the drive letter to assign to the new drive. This switch is
    optional; if you don't specify a drive letter, DoubleSpace assigns the
    new drive the next available drive letter. This switch can be
    abbreviated as /NEW.
 
----------------------------------------------------------------------------
                        DBLSPACE /MOUNT -- Examples
 
To mount a compressed floppy disk in drive A, you would type the following:
 
    dblspace /mount a:
 
To mount the compressed volume file DBLSPACE.001 located on uncompressed
drive D, you would type the following:
 
    dblspace /mount=001 d:
 
----------------------------------------------------------------------------
                              DBLSPACE /RATIO
 
Changes the estimated compression ratio of the selected drive. DoubleSpace
uses this ratio to estimate how much free space the drive contains. You
might want to change the estimated compression ratio if you plan to store
new files with a compression ratio that differs greatly from the current
ratio.
 
Syntax
 
    DBLSPACE /RATIO[=r.r] [drive: | /ALL]
 
Parameter
 
drive:
    Specifies the drive for which you want to change the estimated
    compression ratio.
 
    You can include either a drive letter or the /ALL switch, but not both.
    If you specify neither the drive nor the /ALL switch, DoubleSpace
    changes the estimated compression ratio for the current drive.
 
Switch
 
/RATIO=r.r
    Changes the estimated compression ratio of the specified drive(s). To
    change the ratio to a specific number, specify the ratio you want. You
    can specify a ratio from 1.0 to 16.0. If you don't specify a ratio,
    DoubleSpace sets the drive's estimated compression ratio to the average
    actual compression ratio for all the files currently on the drive. This
    switch can be abbreviated as /RA.
 
/ALL
    Specifies that you want to change the ratio of all currently mounted
    compressed drives. (If you use this switch, you cannot also specify a
    value for the drive parameter.)
 
----------------------------------------------------------------------------
                        DBLSPACE /RATIO -- Examples
 
To change the estimated compression ratio of all your compressed drives to
match each drive's actual compression ratio, type the following command:
 
    dblspace /ratio /all
 
To change drive D's estimated compression ratio so that it is 3.2 to 1, you
would type the following:
 
    dblspace /ratio=3.2 d:
 
To change the estimated compression ratio of the current drive to 6 to 1,
you would type the following:
 
    dblspace /ratio=6
 
To have DoubleSpace adjust the compression ratio for all your drives each
time your computer starts, add the following command to the end of your
AUTOEXEC.BAT file:
 
    dblspace /ratio /all
 
----------------------------------------------------------------------------
                               DBLSPACE /SIZE
 
Enlarges or reduces the size of a compressed drive. You might want to
enlarge a compressed drive if its host drive contains plenty of free space.
You might want to reduce the size of a compressed drive if you need more
free space on the host drive.
 
Syntax
 
    DBLSPACE /SIZE[=size1 | /RESERVE=size2] drive:
 
Parameter
 
drive:
    Specifies the drive you want to resize.
 
Switches
 
/SIZE=size1
    Changes the size of the specified drive. You can specify the new size of
    the drive by using the size1 parameter. The size of the drive is the
    number of megabytes of space that the drive's compressed volume file
    uses on the uncompressed (host) drive. The /SIZE switch can be
    abbreviated as /SI.
 
    You can specify the drive's new size by using either the size1 parameter
    or the /RESERVE switch, but not both. If you include neither the size1
    parameter nor the /RESERVE switch, DoubleSpace makes the drive as small
    as possible.
 
/RESERVE=size2
 
    Specifies how many megabytes of free space you want the uncompressed
    (host) drive to contain after DoubleSpace resizes the drive. The
    /RESERVE switch can be abbreviated as /RES.
 
    You can specify the drive's new size by using either the /RESERVE switch
    or the size1 parameter of the /SIZE switch, but not both. If you include
    neither the /RESERVE switch nor the size1 parameter, DoubleSpace makes
    the drive as small as possible.
 
----------------------------------------------------------------------------
                         DBLSPACE /SIZE -- Examples
 
To change the size of drive C so that its compressed volume file uses 60.5
MB of space on drive D, type the following command:
 
    dblspace /size=60.5 c:
 
To change the size of drive E so that its host drive, drive D, contains 20
MB of free uncompressed space, type the following command:
 
    dblspace /size /reserve=20 e:
 
To change the size of drive C so that it is as large as possible, type the
following command:
 
    dblspace /size /reserve=0 c:
 
----------------------------------------------------------------------------
                            DBLSPACE /UNCOMPRESS
 
Uncompresses a drive that was compressed by using DoubleSpace. When you
uncompress the last mounted drive, the /UNCOMPRESS switch also removes
DBLSPACE.BIN from memory. (DBLSPACE.BIN is the portion of MS-DOS that
provides access to compressed drives. It uses about 50K of memory.)
 
Syntax
 
    DBLSPACE /UNCOMPRESS drive:
 
Parameter
 
drive:
    Specifies the drive you want to uncompress.
 
Switch
 
/UNCOMPRESS
    Uncompresses the specified drive.
 
----------------------------------------------------------------------------
                         DBLSPACE /UNCOMPRESS-Notes
 
Backing up before uncompressing
 
Before uncompressing your drive, you should back up the files it contains.
To back up your files, use Microsoft Backup for MS-DOS (MSBACKUP) or
Microsoft Backup for Windows.
 
Invalid pathnames after uncompressing
 
When you uncompress a drive, DoubleSpace either changes that drive's letter
or the letter of its host drive (depending on how the compressed drive was
originally created.) DoubleSpace shows how the drive letters will change
when it uncompresses the drive.
 
Some programs have settings that include explicit pathnames and drive
letters. If a program's settings specify a drive that is no longer valid
after uncompressing, the program will probably display an error message or
be unable to find one of its components or data files. In that case, you
need to correct the drive letter specified by that setting.
 
Disk Space
 
You can uncompress a drive only if the data it contains will fit on the host
drive. If you use the DBLSPACE /UNCOMPRESS command, and DoubleSpace
indicates your drive will not have enough free disk space, delete
unnecessary files or move them to another drive.
 
Duplicate Filenames on Compressed and Host Drives
 
If the root directories of the compressed and host drives contain files or
directories with identical names, DoubleSpace cannot uncompress the
compressed drive. If this happens, DoubleSpace displays an error message,
and creates a DBLSPACE.LOG file that lists the files involved. Use the TYPE
command to view the contents of the DBLSPACE.LOG file. Then, remove or
rename one copy of each file, and then try uncompressing the drive again.
 
Uninstalling DoubleSpace
 
When you uncompress the last mounted compressed drive, DoubleSpace first
uncompresses the drive, and then removes DBLSPACE.BIN from memory.
(DBLSPACE.BIN is the portion of MS-DOS that provides access to compressed
drives. It uses about 50K of memory.) If there are any unmounted compressed
drives left on your computer, you will not be able to mount them until you
reinstall DoubleSpace. (To reinstall DoubleSpace, type DBLSPACE at the
command prompt.)
 
----------------------------------------------------------------------------
                        DBLSPACE /UNCOMPRESS-Example
 
To uncompress drive E, type the following command:
 
    dblspace /uncompress e:
 
----------------------------------------------------------------------------
                             DBLSPACE /UNMOUNT
 
Breaks the connection between the selected drive's compressed volume file
and its drive letter. Unmounting a drive makes it temporarily unavailable.
 
You cannot unmount drive C.
 
Syntax
 
    DBLSPACE /UNMOUNT [drive:]
 
Parameter
 
drive:
    Specifies the drive you want to unmount. This parameter is optional; if
    you omit it, DoubleSpace unmounts the current drive.
 
Switch
 
/UNMOUNT
    Unmounts the specified compressed drive.
 
----------------------------------------------------------------------------
                        DBLSPACE /UNMOUNT -- Example
 
To unmount compressed drive E, type the following command:
 
    dblspace /unmount e:
 
----------------------------------------------------------------------------
                                DBLSPACE.SYS
 
Determines the final memory location of DBLSPACE.BIN.
 
DBLSPACE.BIN is the part of MS-DOS that provides access to your compressed
drives. When you start your computer, MS-DOS loads DBLSPACE.BIN along with
other operating system functions, before carrying out the commands in your
CONFIG.SYS and AUTOEXEC.BAT files. DBLSPACE.BIN always loads in conventional
memory because it loads before device drivers that provide access to upper
memory.
 
When you run DoubleSpace Setup, it adds a command for DBLSPACE.SYS to your
CONFIG.SYS file.
 
Syntax
 
    DEVICE = [drive:][path]DBLSPACE.SYS /MOVE [/NOHMA]
 
    DEVICEHIGH = [drive:][path]DBLSPACE.SYS /MOVE [/NOHMA]
 
Switches
 
/MOVE
    Moves DBLSPACE.BIN to its final location in memory.
 
    Initially, DBLSPACE.BIN loads at the top of conventional memory. After
    MS-DOS finishes carrying out the commands in the CONFIG.SYS file, it
    moves DBLSPACE.BIN to the bottom of conventional memory. When
    DBLSPACE.SYS is loaded by using the DEVICE command, it moves
    DBLSPACE.BIN from the top of conventional memory to the bottom. This can
    be useful for avoiding conflicts with programs that are loaded from the
    CONFIG.SYS file and require access to the top of conventional memory.
 
    When DBLSPACE.SYS is loaded by using the DEVICEHIGH command,
    DBLSPACE.BIN moves to upper memory, if available. Moving DBLSPACE.BIN to
    upper memory makes more conventional memory available.
 
/NOHMA
    Prevents DBLSPACE.SYS from moving a portion of DBLSPACE.BIN to the high
    memory area (HMA).
 
    If MS-DOS is loaded into the HMA, DBLSPACE.SYS moves a  portion of
    DBLSPACE.BIN to the HMA (if there is enough room in the HMA). Use this
    switch if you do not want DBLSPACE.BIN to use the HMA.
 
    Parameter
 
    [drive:][path]
    Specifies the location of the DBLSPACE.SYS file.
 
----------------------------------------------------------------------------
                           DBLSPACE.SYS -- Notes
 
DBLSPACE.SYS does not provide access to compressed drives
 
The DBLSPACE.SYS device driver does not provide access to compressed drives;
it simply moves DBLSPACE.BIN to its final location in memory. (DBLSPACE.BIN
is the part of MS-DOS that provides access to compressed drives; it loads
with other operating system functions, before MS-DOS carries out the
commands in your CONFIG.SYS file.)
 
If your compressed drive's host drive requires a device driver
 
A few disk drives require an installable device driver. If such a drive
contains compressed volume files (either you compressed that drive, or you
created new compressed drives on that drive), the command for the
DBLSPACE.SYS device driver must appear in the CONFIG.SYS file after the
command for your drive's device driver. Otherwise, DoubleSpace will not
mount any compressed volume files located on that drive when your computer
starts.
 
Avoiding conflicts with programs that require access to the top of
conventional memory
 
When you start your computer, MS-DOS loads DBLSPACE.BIN at the top of
conventional memory; after processing the CONFIG.SYS file, MS-DOS moves
DBLSPACE.BIN to the bottom of conventional memory.
 
However, a few programs that are loaded from the CONFIG.SYS file require
access to the top of conventional memory and do not work properly if
DBLSPACE.BIN is located there. To avoid such conflicts, DoubleSpace Setup
adds a command for DBLSPACE.SYS before any command that starts a program
that is known to require this area of memory. The DBLSPACE.SYS device driver
moves DBLSPACE.BIN from the top of conventional memory to another area of
memory (either to the bottom of conventional memory or to upper memory).
 
Depending on your configuration, your CONFIG.SYS file might contain more
than one command for DBLSPACE.SYS. This will not cause any problems.
 
Moving part of DBLSPACE.BIN to the high memory area
 
By default, if your CONFIG.SYS file contains a DOS=HIGH command,
DBLSPACE.SYS moves the compression server, a portion of DBLSPACE.BIN, to the
HMA. To move a portion of DBLSPACE.BIN to the HMA, you must have an 80286 or
higher computer with extended memory, and must be running HIMEM or another
extended-memory manager.
 
Moving DBLSPACE.BIN to upper memory
 
When loaded with a DEVICEHIGH command, the DBLSPACE.SYS device driver moves
DBLSPACE.BIN from conventional to upper memory. If there is no upper memory
block large enough to accommodate DBLSPACE.BIN, it is instead moved to the
bottom of conventional memory.
 
To use the upper memory area, you must have an 80386 or 80486 computer with
extended memory.
 
Using BUFFERS with DoubleSpace
 
If you are using DoubleSpace and SMARTDrive, and MS-DOS is loaded into the
HMA, set BUFFERS=10. This ensures that there will be enough room in the HMA
for MS-DOS, DoubleSpace, and all your buffers. (If BUFFERS is set to a value
higher than 10, there might not be enough room in the HMA for all your
buffers, and MS-DOS will place all the buffers into conventional memory.) If
you're using SMARTDrive, specifying more than 10 buffers will not speed up
your system much, but will use additional memory.
 
----------------------------------------------------------------------------
                          DBLSPACE.SYS -- Examples
 
To move a portion of DBLSPACE.BIN to the HMA and move the rest to the bottom
of conventional memory, you must have an 80286 or higher computer, and your
CONFIG.SYS file must contain a DOS=HIGH command and a `DEVICE command for
HIMEM or another extended-memory manager. Load DBLSPACE.SYS by using the
following command:
 
    device=dblspace.sys /move
 
To move a portion of DBLSPACE.BIN to the HMA and the rest to the upper
memory area (if available), you must have an 80386 or higher computer with
extended memory. Ensure that your CONFIG.SYS file contains a DEVICE command
for DBLSPACE.SYS, and then run MemMaker.
 
To move all of DBLSPACE.BIN to the bottom of conventional memory, and to
prevent DBLSPACE.BIN from using the HMA or upper memory, load DBLSPACE.SYS
by using the following command:
 
    device=dblspace.sys /move /nohma
 
To move all of DBLSPACE.BIN to upper memory (if available), and to prevent
DBLSPACE.BIN from using the HMA, load DBLSPACE.SYS by using the following
command:
 
    devicehigh=dblspace.sys /move /nohma
 
----------------------------------------------------------------------------
                             DBLSPACE.INI File
 
The DBLSPACE.INI file is a text file with the System, Read-Only, and Hidden
attributes. DoubleSpace stores this file in the root directory of your
startup drive. The DBLSPACE.INI file contains variables that DoubleSpace
uses when your computer starts.
 
Note:  Although it is possible to change these variables yourself (by using
       the <DBLSPACE> command or by editing the file directly), you should
       do so only if you understand what they do and what the results might
       be. Before changing the DBLSPACE.INI file, you should make a backup
       copy of the file. For changes to the DBLSPACE.INI settings to take
       effect, you must restart your computer.
 
The DBLSPACE.INI file can contain one or more of the following variables:
 
AUTOMOUNT=0|1|A...Z
 
    Enables or disables the automatic mounting of removable drives,
    including floppy disk drives. By default, DoubleSpace automatically
    mounts all removable drives. To change this setting, use the
    <DBLSPACE /AUTOMOUNT> command.
 
DOUBLEGUARD=0|1
 
    The DOUBLEGUARD setting enables or disables DoubleGuard(tm) safety
    checking. When DoubleGuard is enabled, DoubleSpace will constantly check
    its memory for damage by some other program. By default, DoubleGuard is
    enabled. To change this setting, use the <DBLSPACE /DOUBLEGUARD>
    command.
 
LASTDRIVE=drive
 
    The LASTDRIVE setting specifies the highest drive letter available for
    use by DoubleSpace. To change this setting, use the
    <DBLSPACE /LASTDRIVE> command.
 
MAXFILEFRAGMENTS=n
 
    The MAXFILEFRAGMENTS setting sets the limit for the amount of
    fragmentation allowed for all mounted compressed volume files. To change
    this setting, use the <DBLSPACE /MAXFILEFRAGMENTS> command.
 
    The MAXREMOVABLEDRIVES setting specifies how many additional drives
    DoubleSpace should allocate memory for when your computer starts. This
    determines how many additional compressed drives you can create,
    compress, or mount without restarting your computer. To change this
    setting, use the <DBLSPACE /MAXREMOVABLEDRIVES> command.
 
ROMSERVER=0|1
    Enables or disables the check for a ROM BIOS Microsoft Real-time
    Compresson Interface (MRCI) server. By default, the ROM MRCI check is
    disabled. To change this setting, use the <DBLSPACE /ROMSERVER>
    command.
 
SWITCHES=/F|/N|/FN
 
    Controls the way the CTRL+F5 and CTRL+F8 keys work. (Normally, you can
    press CTRL+F5 or CTRL+F8 to bypass DoubleSpace when your computer
    starts.) To change this setting, use the <DBLSPACE /SWITCHES> command.
    (To remove SWITCHES settings from your DBLSPACE.INI file, you must edit
    the file directly.)
 
ActivateDrive=x,yn
    This setting specifies that DoubleSpace should mount a compressed volume
    file when your computer starts. The DBLSPACE.INI file can contain more
    than one ActivateDrive setting. Except for the host drive letter, which
    you can change by using the <DBLSPACE /HOST> command, do not change the
    ActivateDrive setting yourself.
 
    The ActivateDrive setting requires the following parameters:
 
    x
        The drive letter to assign to the newly mounted compressed drive.
 
    y
        The drive letter of the host drive. To change the host drive letter,
        use the <DBLSPACE /HOST> command.
 
    n
        The number of the compressed volume file (CVF). To determine the CVF
        number, examine its filename extension. If the CVF filename is
        DBLSPACE.000, set n to 0; if the CVF filename is DBLSPACE.001, set n
        to 1, and so on.
 
FIRSTDRIVE=x
 
    Set by DoubleSpace each time it modifies the DBLSPACE.INI file.
    DoubleSpace uses this setting to control the overall assignment of drive
    letters. Do not change this setting yourself.
 
----------------------------------------------------------------------------
                            DBLSPACE /AUTOMOUNT
 
Modifes the AUTOMOUNT setting in the <DBLSPACE.INI> file. The AUTOMOUNT
setting enables or disables the automatic mounting of removable drives,
including floppy disk drives. By default, DoubleSpace automatically mounts
all removable drives.
 
Note:  For this switch to take effect, you must restart your computer.
 
Syntax
 
    DBLSPACE /AUTOMOUNT=0|1|A...Z
 
Parameters
 
0
    Prevents DoubleSpace from automatically mounting removable drives. Use
    this value to save memory.
 
1
    Directs DoubleSpace to automatically mount all removable drives. This is
    the default setting.
 
A...Z
    Directs DoubleSpace to automatically mount specified removable drives.
    For example, to have DoubleSpace automatically mount drives A, B, and G,
    you would type DBLSPACE /AUTOMOUNT=ABG at the command prompt.
 
----------------------------------------------------------------------------
                       DBLSPACE /AUTOMOUNT--Examples
 
If you have floppy drives A and B, and a Bernoulli removable drive D, the
following command enables automatic mounting of all these drives:
 
    dblspace /automount=1
 
Note:  Before a floppy drive actually mounts, you must insert the floppy
       disk in the drive, and then begin using the floppy disk.
 
If you just want to enable automatic mounting of floppy drives A and B, use
the following command:
 
    dblspace /automount=ab
 
----------------------------------------------------------------------------
                           DBLSPACE /DOUBLEGUARD
 
Modifes the DOUBLEGUARD setting in the <DBLSPACE.INI> file. The DOUBLEGUARD
setting enables or disables DoubleGuard(tm) safety checking. When
DoubleGuard is enabled, DoubleSpace will constantly check its memory for
damage by some other program. If it detects any memory damage, DoubleSpace
will halt your computer to minimize damage to your data. By default,
DoubleGuard is enabled.
 
Note:  For this switch to take effect, you must restart your computer.
 
Syntax
 
    DBLSPACE /DOUBLEGUARD=0|1
 
Parameters
 
    0
    Prevents DoubleSpace from checking its memory for damage by other
    programs. Using this switch might speed up your system, but could result
    in loss of data if a program violates the memory DoubleSpace is using.
 
1
    Directs DoubleSpace to check its memory for damage by other programs.
    This is the default setting.
 
----------------------------------------------------------------------------
                               DBLSPACE /HOST
 
Changes the drive letter of the host drive for the specfied compressed drive
by modifying the corresponding ActivateDrive setting in the <DBLSPACE.INI>
file. You cannot use this switch to change the letter of a compressed
drive's host drive if you used free space to create that compressed drive.
 
Note:  For this switch to take effect, you must restart your computer.
 
Syntax
 
    DBLSPACE drive1: /HOST=drive2
 
Parameters
 
drive1
 
    Specifies the current drive letter of either the compressed drive or its
    host drive.
 
drive2
    Specifies the new drive letter for the host drive.
 
----------------------------------------------------------------------------
                          DBLSPACE /HOST--Examples
 
If your compressed drive letter is C, and your host drive letter is H, you
can use the following command to change the host drive letter to G:
 
    dblspace c: /host=g:
 
You can also use the following command to change the host drive letter to
G:
 
    dblspace h: /host=g:
 
----------------------------------------------------------------------------
                            DBLSPACE /LASTDRIVE
 
Modifes the LASTDRIVE setting in the <DBLSPACE.INI> file. The LASTDRIVE
setting specifies the highest drive letter available for use by
DoubleSpace.
 
Note:  For this switch to take effect, you must restart your computer.
 
Syntax
 
    DLBSPACE /LASTDRIVE=drive
 
Parameter
 
drive
 
    The drive letter that is the highest drive letter you want to be
    available to DoubleSpace. (If another program uses one of the drive
    letters specified for DoubleSpace, the highest drive letter available to
    DoubleSpace will be higher than that specified by LASTDRIVE.)
 
----------------------------------------------------------------------------
                         DBLSPACE /MAXFILEFRAGMENTS
 
Modifes the MAXFILEFRAGMENTS setting in the <DBLSPACE.INI> file. The
MAXFILEFRAGMENTS setting sets the limit for the amount of fragmentation
allowed for all mounted compressed volume files.
 
Note:  For this switch to take effect, you must restart your computer.
 
Syntax
 
    DBLSPACE /MAXFILEFRAGMENTS=n
 
Parameter
 
n
 
    The maximim number of fragments in which the compressed volume files may
    be stored on the host drive. For each fragment, 6 bytes of memory are
    allocated.
 
----------------------------------------------------------------------------
                        DBLSPACE /MAXREMOVABLEDRIVES
 
Modifes the MAXREMOVABLEDRIVES setting in the <DBLSPACE.INI> file. The
MAXREMOVABLEDRIVES setting specifies how many additional drives DoubleSpace
should allocate memory for when your computer starts. This determines how
many additional compressed drives you can create, compress, or mount without
restarting your computer.
 
Note:  For this switch to take effect, you must restart your computer.
 
Syntax
 
    DBLSPACE /MAXREMOVABLEDRIVES=n
 
Parameter
 
n
 
    The number of additional drives for which DoubleSpace should allocate
    memory when your computer starts. DoubleSpace allocates 96 bytes of
    memory for each additional drive.
 
----------------------------------------------------------------------------
                            DBLSPACE /ROMSERVER
 
Modifes the ROMSERVER setting in the <DBLSPACE.INI> file. The ROMSERVER
setting enables or disables the check for a ROM BIOS Microsoft Real-time
Compresson Interface (MRCI) server. By default, the ROM MRCI check is
disabled.
 
CAUTION: Do not enable the MRCI check unless you are certain that you have
hardware that uses the MRCI. The MRCI check can interfere with a ROM BIOS
that does not have the MRCI.
 
Note:  For this switch to take effect, you must restart your computer.
 
Syntax
 
    DBLSPACE /ROMSERVER=0|1
 
Parameters
 
0
        Disables the check for the ROM BIOS MRCI server.
 
    1
        Enables the check for the ROM BIOS MRCI server.
                                      
----------------------------------------------------------------------------
                             DBLSPACE /SWITCHES
 
Modifes the SWITCHES setting in the <DBLSPACE.INI> file. The SWITCHES
setting controls the way the CTRL+F5 and CTRL+F8 keys work. (Normally, you
can press CTRL+F5 or CTRL+F8 to bypass DoubleSpace when your computer
starts.)
 
If your DBLSPACE.INI file does not contain a /SWITCHES setting, you can use
CTRL+F5 or CTRL+F8 to keep from loading DoubleSpace when your computer
starts. For more information, see <CONFIG.SYS commands>.
 
Note:  For this switch to take effect, you must restart your computer.
 
Syntax
 
    DBLSPACE /SWITCHES=F|N
 
Parameters
 
The values for /SWITCHES are as follows:
 
N
    Prevents you from using CTRL+F8 or CTRL+F5 to bypass DoubleSpace when
    your computer starts.
 
    If you choose this setting and press CTRL+F8, MS-DOS will still allow
    you to selectively choose commands in your CONFIG.SYS and AUTOEXEC.BAT
    files. If you choose this setting and press CTRL+F5, MS-DOS will still
    bypass your AUTOEXEC.BAT and CONFIG.SYS files.
 
    (Although you do not use the "/" character when specifying the N
    parameter , the setting in the DBLSPACE.INI file is SWITCHES=/N.)
 
F
    Reduces the amount of time you have to press CTRL+F8 or CTRL+F5 when
    your computer starts. Use this setting to speed up processing of your
    startup files. (Although you do not use the "/" character when
    specifying the F parameter , the setting in the DBLSPACE.INI file is
    SWITCHES=/F.)
 
----------------------------------------------------------------------------
                         DBLSPACE /SWITCHES--Notes
 
Removing /SWITCHES settings
 
To remove any /SWITCHES settings in your DBLSPACE.INI file, you must edit
the file directly. To edit the file, use a text editor such as MS-DOS Editor
(EDIT).
 
DBLSPACE /SWITCHES and the SWITCHES command
 
The DoubleSpace /SWITCHES command and the SWITCHES setting in the
DBLSPACE.INI file affect only the behavior of the CTRL+F5 and CTRL+F8 keys.
To control the behavior of the F5 and F8 keys, use the <SWITCHES> command.
 
----------------------------------------------------------------------------
                                   DEBUG
 
Starts the Debug program, which you can use to test and debug executable
files.
 
For information on DEBUG command-line syntax, type DEBUG /? at the command
prompt.
 
For a list of Debug commands, start Debug, and then type ?.
 
For more information about Debug commands, see the MS-DOS 6.2 Technical
Reference, which comes with the MS-DOS 6.2 Resource Kit. To order the
Resource Kit, use the coupon in the back of your MS-DOS 6 User's Guide.
 
----------------------------------------------------------------------------
                                   DEFRAG
 
Reorganizes the files on a disk to optimize disk performance. Do not use
this command when Windows is running.
 
Syntax
    DEFRAG [drive:] [/F] [/S[:]order] [/B] [/SKIPHIGH] [/LCD | /BW | /G0]
    [/H]
 
    DEFRAG [drive:] [/U] [/B] [/SKIPHIGH] [/LCD | /BW | /G0] [/H]
 
Parameter
 
drive:
    Specifies the drive that contains the disk you want to optimize.
 
Switches
 
/F
    Defragments files and ensures that the disk contains no empty spaces
    between files.
 
/U
    Defragments files and leaves empty spaces, if any, between files.
 
/S
    Controls how the files are sorted in their directories. If you omit this
    switch, DEFRAG uses the current order on the disk. The colon (:) is
    optional. The following list describes each of the values you can use to
    sort files. Use any combination of the values, and do not separate these
    values with spaces.
 
    N
        In alphabetic order by name
 
    N-
        In reverse alphabetic order by name (Z through A)
 
    E
        In alphabetic order by extension
 
    E-
        In reverse alphabetic order by extension (Z through A)
 
    D
        By date and time, earliest first
 
    D-
        By date and time, latest first
 
    S
        By size, smallest first
 
    S-
        By size, largest first
 
/B
    Restarts your computer after files have been reorganized.
 
/SKIPHIGH
    Loads DEFRAG into conventional memory. By default, DEFRAG is loaded into
    upper memory, if upper memory is available.
 
/LCD
    Starts DEFRAG using an LCD color scheme.
 
/BW
    Starts DEFRAG using a black and white color scheme.
 
/G0
    Disables the graphic mouse and graphic character set.
 
/H
    Moves hidden files.
 
----------------------------------------------------------------------------
                               DEFRAG--Notes
 
Network and INTERLNK drives
 
You cannot use DEFRAG to optimize network drives or drives created with
INTERLNK.
 
Disk information reported by DEFRAG and CHKDSK
 
Disk information that DEFRAG reports differs from information that CHKDSK
reports. DEFRAG reports hidden and user files as one number; CHKDSK reports
numbers for each type. DEFRAG counts the root as a directory; CHKDSK does
not. DEFRAG does not count the volume label as a file; CHKDSK does.
 
Start DEFRAG only from MS-DOS
 
If you start DEFRAG from a program such as Microsoft Windows, you may lose
data.
 
DEFRAG exit codes
 
The following list briefly describes the meaning of each DEFRAG exit code
(ERRORLEVEL parameter):
 
0
    The defragmentation was successful.
 
1
    An internal error occurred.
 
2
    The disk contained no free clusters. To operate, DEFRAG needs 1 free
    cluster.
 
3
    The user pressed CTRL+C to stop the process.
 
4
    A general error occurred.
 
5
    DEFRAG encountered an error while reading a cluster.
 
6
    DEFRAG encountered an error while writing a cluster.
 
7
    An allocation error occurred. To correct the error, use the <SCANDISK>
    command.
 
8
    A memory error occurred.
 
9
    There was insufficient memory to defragment the disk.
 
You can use the ERRORLEVEL parameter on the IF command line in a batch
program to process exit codes returned by DEFRAG. For an example of a batch
program that processes exit codes, see the <CHOICE> command.
 
----------------------------------------------------------------------------
                              DEFRAG--Example
 
To load DEFRAG into conventional memory and specify that DEFRAG sort files
according to the date they were created, from latest created to earliest
created, type the following command:
 
    defrag c: /f /sd- /skiphigh
 
This example fully optimizes drive C, but slows DEFRAG.
                                      
----------------------------------------------------------------------------
                                DEL (Erase)
 
Deletes the files you specify.
 
Syntax
 
    DEL [drive:][path]filename [/P]
 
    ERASE [drive:][path]filename [/P]
 
Parameter
 
[drive:][path]filename
    Specifies the location and name of the file or set of files you want to
    delete.
 
Switch
 
/P
    Prompts you for confirmation before deleting the specified file.
 
Related Commands
 
For information about retrieving a deleted file, see the <UNDELETE>
command.
 
For information about removing a directory, see the <RMDIR> command.
 
For information about deleting a directory, its files, and all
subdirectories and files subordinate to it, see the <DELTREE> command.
 
----------------------------------------------------------------------------
                                 DEL--Notes
 
Using the /P switch
 
If you use the /P switch, DEL displays the name of a file and prompts you
with a message in the following format:
 
    filename, Delete (Y/N)?
 
Press Y to confirm the deletion, N to cancel the deletion and display the
next filename (if you specified a group of files), or CRTL+C to stop the DEL
command.
 
Deleting more than one file at a time
 
You can delete all the files in a directory by typing the DEL command
followed by [drive:]path. You can also use wildcards (* and ?) to delete
more than one file at a time. However, you should use wildcards cautiously
with the DEL command to avoid deleting files unintentionally. Suppose you
type the following command:
 
    del *.*
 
DEL displays the following prompt:
 
    All files in directory will be deleted! Are you sure (Y/N)?
 
Press Y and then ENTER to delete all files in the current directory, or
press N and then ENTER to cancel the deletion.
 
Before you use wildcards with the DEL command to delete a group of files,
you can use the same wildcards with the DIR command to see a list of the
names of all the files included in the group.
 
CAUTION:  Once you delete a file from your disk, you may not be able to
          retrieve it. Although the UNDELETE command can retrieve deleted
          files, it can do so with certainty only if no other files have
          been created or changed on the disk. If you accidentally delete a
          file that you want to keep, stop what you are doing and
          immediately use the UNDELETE command to retrieve the file.
 
          For more information on undeleting files, see the chapter
          "Managing Your System" in the MS-DOS 6 User's Guide.
 
----------------------------------------------------------------------------
                               DEL--Examples
 
To delete the CAT.TMP file from the TEST directory on drive C, you can use
either of the following commands:
 
    del c:\test\cat.tmp
 
    erase c:\test\cat.tmp
 
To delete all the files in a directory named TEST on drive C, you can use
either of the following commands:
 
    del c:\test
 
    del c:\test\*.*

----------------------------------------------------------------------------
                                  DELTREE
 
Deletes a directory and all the files and subdirectories that are in it.
 
Syntax
 
    DELTREE [/Y] [drive:]path [[drive:]path[...]]
 
Parameter
 
drive:path
    Specifies the name of the directory you want to delete. The DELTREE
    command will delete all the files contained in the directory you
    specify, as well as all subdirectories and files in the subdirectories
    subordinate to this directory. You can specify more than one directory.
 
Switch
 
/Y
    Carries out the DELTREE command without first prompting you to confirm
    the deletion.
 
Related Commands
 
For information about removing a directory, see the <RMDIR> command.
 
For information about deleting files, see the <DEL> command.
 
----------------------------------------------------------------------------
                               DELTREE--Notes
 
DELTREE and hidden, system, and read-only attributes
 
The DELTREE command deletes all files contained in a directory or
subdirectory, regardless of attributes.
 
Errorlevel parameters
 
If DELTREE successfully deleted the directory, it returns an ERRORLEVEL
value of 0.
 
Using wildcards with DELTREE
 
You can use wildcards with the DELTREE command, but use them with extreme
caution. If you specify a wildcard that matches both directory names and
filenames, both the directories and files will be deleted. Before specifying
wildcards with the DELTREE command, use the DIR command to view the files
and directories you will delete.
 
----------------------------------------------------------------------------
                              DELTREE--Example
 
To delete the TEMP directory on drive C, including all files and
subdirectories of the TEMP directory, type the following at the command
prompt:
 
    deltree c:\temp
 
----------------------------------------------------------------------------
                                   DEVICE
 
Loads the device driver you specify into memory. You can use this command
only in your CONFIG.SYS file.
 
Syntax
 
    DEVICE=[drive:][path]filename [dd-parameters]
 
Parameters
 
[drive:][path]filename
    Specifies the location and name of the device driver you want to load.
 
[dd-parameters]
    Specifies any command-line information required by the device driver.
 
Related Command
 
For information about loading device drivers into the upper memory area, see
the <DEVICEHIGH> command.
 
----------------------------------------------------------------------------
                               DEVICE--Notes
 
Using standard device drivers
 
The standard installable device drivers provided with MS-DOS 6 are
<ANSI.SYS>, <DISPLAY.SYS>, <DRIVER.SYS>, <DBLSPACE.SYS>, <EGA.SYS>,
<EMM386.EXE>, <HIMEM.SYS>, <INTERLNK.EXE>, <POWER.EXE>, <RAMDRIVE.SYS>,
<SETVER.EXE>, and <SMARTDRV.EXE>.
 
The files COUNTRY.SYS and KEYBOARD.SYS are not device drivers. They are data
files for the COUNTRY and KEYB commands, respectively. Do not try to load
either of these files with the DEVICE command. If you do, your system halts,
and you cannot restart MS-DOS. For information about loading COUNTRY.SYS,
see the <COUNTRY> command. For information about loading KEYBOARD.SYS, see
the <KEYB> command.
 
Installing device drivers for other products
 
When you purchase a mouse, a scanner, or a similar product, the manufacturer
usually includes device-driver software. To install a device driver, specify
its location and name on a DEVICE command line.
 
Installing a third-party console driver
 
If you install both DISPLAY.SYS and a third-party console driver, such as
VT52.SYS, the third-party device driver must be installed first. Otherwise,
the third-party device driver may disable DISPLAY.SYS.
 
Installing multiple device drivers
 
Sometimes one installable device driver will require that it be loaded
before or after another in your CONFIG.SYS file. For example, EMM386.EXE
requires HIMEM.SYS to be loaded first. If the device driver requires that
another device driver be loaded before it, make sure the commands are listed
in the correct order in your CONFIG.SYS file.
 
----------------------------------------------------------------------------
                              DEVICE--Example
 
If you plan to use an ANSI escape sequence to control the screen and
keyboard, you should add the following command to your CONFIG.SYS file
(assuming MS-DOS files are in the DOS directory on drive C):
 
    device=c:\dos\ansi.sys
 
----------------------------------------------------------------------------
                                 DEVICEHIGH
 
Loads device driver you specify into the upper memory area. Loading a device
driver into the upper memory area frees more bytes of conventional memory
for other programs. If upper memory is not available, the DEVICEHIGH command
functions just like the DEVICE command.
 
You can use this command only in your CONFIG.SYS file.
 
Syntax
 
    DEVICEHIGH [drive:][path]filename [dd-parameters]
 
To specify the region(s) of memory into which to load the device driver, use
the following syntax:
 
    DEVICEHIGH [[/L:region1[,minsize1][;region2[,minsize2] [/S]]=
    [drive:][path]filename [dd-parameters]
 
Parameters
 
[drive:][path]filename
    Specifies the location and name of the device driver you want to load
    into the upper memory area.
 
dd-parameters
    Specifies any command-line information required by the device driver.
 
Switches
 
/L:region1[,minsize1][;region2[,minsize2]...
    Specifies one or more regions of memory into which to load the device
    driver. By default, MS-DOS loads the driver into the largest free
    upper-memory block (UMB) and makes all other UMBs available for the
    driver's use. You can use the /L switch to load the device driver into a
    specific region of memory or to specify which region(s) the driver can
    use.
 
    To load the driver into the largest block in a specific region of upper
    memory, specify the region number after the /L switch. For example, to
    load the driver into the largest free block in region 4, you would type
    /L:4. (To list the free areas of memory, type MEM /F at the command
    prompt.)
 
    When loaded with the /L switch, a device driver can use only the
    specified memory region. Some device drivers use more than one area of
    memory; for those drivers, you can specify more than one region. (To
    find out how a particular device driver uses memory, issue the MEM /M
    command and specify the device-driver name as an argument.) To specify
    two or more regions, separate the block numbers with a semicolon (;).
    For example, to use blocks 2 and 3, you would type /L:2;3.
 
    Normally, MS-DOS loads a driver into a UMB in the specified region only
    if that region contains a UMB larger than the driver's load size
    (usually equal to the size of the executable program file). If the
    driver requires more memory while running than it does when loaded, you
    can use the minsize parameter to ensure that the driver will not be
    loaded into a UMB that is too small for it. If you specify a value for
    minsize, MS-DOS loads the driver into that region only if it contains a
    UMB that is larger than both the driver's load size and the minsize
    value.
 
/S
    Shrinks the UMB to its minimum size while the driver is loading. Using
    this switch makes the most efficient use of memory. This switch is
    normally used only by the MemMaker program, which can analyze a device
    driver's memory use to determine whether the /S switch can safely be
    used when loading that driver. This switch can be used only in
    conjunction with the /L switch and affects only UMBs for which a minimum
    size was specified.
 
Related Commands
 
For information about loading programs into the upper memory area, see the
<LOADHIGH> command.
 
For information about loading device drivers into conventional memory, see
the <DEVICE> command.
 
For information about using the MemMaker program to move programs to the
upper memory area, see the <MEMMAKER> command.
 
----------------------------------------------------------------------------
                             DEVICEHIGH--Notes
 
Using the DOS=UMB command
 
To use the DEVICEHIGH command, you must also include the DOS=UMB command in
your CONFIG.SYS file. If you do not specify this command, all device drivers
are loaded into conventional memory, as if you had used the DEVICE command.
For more information, see the <DOS> command.
 
Using MemMaker to optimize upper memory area automatically
 
The MemMaker program, included with MS-DOS 6, automatically optimizes your
system's memory. MemMaker surveys the upper memory area, analyzes the memory
use of your drivers and programs, and determines which drivers and programs
fit best into the available UMBs. MemMaker then changes selected DEVICE
commands in your CONFIG.SYS file to DEVICEHIGH commands and adds /L and /S
switches as necessary. For more information about using MemMaker to optimize
your computer's memory, see "Making More Memory Available" in the MS-DOS 6
User's Guide.
 
Using MS-DOS 5 DEVICEHIGH syntax
 
The version of DEVICEHIGH provided with MS-DOS 5 used the following syntax:
 
    DEVICEHIGH SIZE=hexsize [drive:][path] filename [dd-parameters]
 
Although the MS-DOS 5 DEVICEHIGH syntax will still work with MS-DOS 6, it is
strongly recommended that you use the current DEVICEHIGH syntax whenever
possible.
 
Installing HIMEM.SYS and a UMB provider
 
To load a device driver into the upper memory area, your computer must have
extended memory. You must use the DEVICE command once to install the
HIMEM.SYS device driver and then again to install an upper-memory-block
(UMB) provider. These commands must appear before the DEVICEHIGH command in
your CONFIG.SYS file. If your computer has an 80386 or 80486 processor, you
can use EMM386.EXE as the UMB provider. If your computer has a different
processor, you must supply a different UMB provider.
 
If no upper memory area is available
 
If there is not enough upper memory area available to load the device driver
you specified with the DEVICEHIGH command, MS-DOS will load it into
conventional memory (as if you had used the DEVICE command).
 
----------------------------------------------------------------------------
                            DEVICEHIGH--Examples
 
The following CONFIG.SYS commands make the upper memory area available for
running device drivers and programs:
 
    device=c:\dos\himem.sys
    device=c:\dos\emm386.exe ram
    dos=umb
 
The following command directs MS-DOS to load a device driver named
MYDRIV.SYS into the upper memory area of an 80386 computer:
 
    devicehigh=mydriv.sys
 
The following CONFIG.SYS command directs MS-DOS to run the MOUSE.SYS driver
in the upper memory area and load the driver into upper memory block 2:
 
    devicehigh=/L:2 C:\drivers\mouse.sys
 
The following command loads the MYDRIV.SYS driver into region 1 of upper
memory, and also allows the driver to use region 3 if it needs to:
 
    devicehigh=/L:1;3 C:\util\mydriv.sys
 
The following command loads the same driver into upper memory regions 1 and
3, but only if each region is at least 30 bytes in size:
 
    devicehigh=/L:1,30;3,30 C:\util\mydriv.sys
 
----------------------------------------------------------------------------
                                    DIR
 
Displays a list of the files and subdirectories that are in the directory
you specify.
 
When you use DIR without parameters or switches, it displays the disk's
volume label and serial number; one directory or filename per line,
including the filename extension, the file size in bytes, and the date and
time the file was last modified; and the total number of files listed, their
cumulative size, and the free space (in bytes) remaining on the disk.
 
Syntax
 
    DIR [drive:][path][filename] [/P] [/W]
    [/A[[:]attributes]][/O[[:]sortorder]] [/S] [/B] [/L] [/C]
 
Parameters
 
[drive:][path]
    Specifies the drive and directory for which you want to see a listing.
 
[filename]
    Specifies a particular file or group of files for which you want to see
    a listing.
 
Switches
 
/P
    Displays one screen of the listing at a time. To see the next screen,
    press any key.
 
/W
    Displays the listing in wide format, with as many as five filenames or
    directory names on each line.
 
/A[[:] attributes]
    Displays only the names of those directories and files with the
    attributes you specify. If you omit this switch, DIR displays the names
    of all files except hidden and system files. If you use this switch
    without specifying attributes, DIR displays the names of all files,
    including hidden and system files. The following list describes each of
    the values you can use for attributes. The colon (:) is optional. Use
    any combination of these values, and do not separate the values with
    spaces.
 
    H
        Hidden files
 
    -H
        Files that are not hidden
 
    S
        System files
 
    -S
        Files other than system files
 
    D
        Directories
 
    -D
        Files only (not directories)
 
    A
        Files ready for archiving (backup)
 
    -A
        Files that have not changed since the last backup
 
    R
        Read-only files
 
    -R
        Files that are not read-only
 
/O[[:] sortorder]
    Controls the order in which DIR sorts and displays directory names and
    filenames. If you omit this switch, DIR displays the names in the order
    in which they occur in the directory. If you use this switch without
    specifying sortorder, DIR displays the names of the directories, sorted
    in alphabetic order, and then displays the names of files, sorted in
    alphabetic order. The colon (:) is optional. The following list
    describes each of the values you can use for sortorder. Use any
    combination of the values, and do not separate these values with
    spaces.
 
    N
        In alphabetic order by name
 
    -N
        In reverse alphabetic order by name (Z through A)
 
    E
        In alphabetic order by extension
 
    -E
        In reverse alphabetic order by extension (Z through A)
 
    D
        By date and time, earliest first
 
    -D
        By date and time, latest first
 
    S
        By size, smallest first
 
    -S
        By size, largest first
 
    G
        With directories grouped before files
 
    -G
        With directories grouped after files
 
    C
        By compression ratio, lowest first.
 
    -C
        By compression ratio, highest first.
 
/S
    Lists every occurrence, in the specified directory and all
    subdirectories, of the specified filename.
 
/B
    Lists each directory name or filename, one per line (including the
    filename extension). This switch displays no heading information and no
    summary. The /B switch overrides the /W switch.
 
/L
    Displays unsorted directory names and filenames in lowercase. This
    switch does not convert extended characters to lowercase.
 
/C[H]
    Displays the compression ratio of files compressed using Doublespace,
    based on an 8K cluster size. The optional H switch displays the
    compression ratio of files compressed using Doublespace, based on the
    cluster size of the host drive. The /C[H] switch is ignored when used
    with the /W or /B switch.
 
Related Commands
 
For information about displaying the directory structure of a path or disk,
see the <TREE> command.
 
For information about compressing disks, see the <DBLSPACE> command.

----------------------------------------------------------------------------
                                 DIR--Notes
 
Using wildcards with DIR
 
You can use wildcards (* and ?) to display a listing of a subset of files
and subdirectories. For an example illustrating the use of a wildcard, see
the "Examples" screen.
 
Specifying file display attributes
 
If you specify the /A switch with more than one value in attributes, DIR
displays the names of only those files with all the specified attributes.
For example, if you specify the /A switch with the R and -H values for
attributes by using either /A:R-H or /AR-H, DIR displays only the names of
read-only files that are not hidden.
 
Specifying filename sorting
 
If you specify more than one sortorder value, DIR sorts the filenames by the
first criterion first, then by the second criterion, and so on. For example,
if you specify the /O switch with the E and -S values for sortorder by using
either /O:E-S or /OE-S, DIR sorts the names of directories and files by
extension, with the largest first, and displays the final result. The
alphabetic sorting by extension causes filenames with no extensions to
appear first, then directory names, then filenames with extensions.
 
Setting date and time formats
 
The date and time formats used by DIR depend on the country setting you use
in your CONFIG.SYS file. If you don't use the COUNTRY command, the formats
are those for the United States.
 
Using redirection symbols and pipes
 
When you use a redirection symbol (>) to send DIR output to a file or a pipe
(|) to send DIR output to another command, use the /A:-D and /B switches to
list only the filenames. You can use the filename parameter with the /B and
/S switches to specify that DIR is to search the current directory and its
subdirectories for all filenames that match filename. DIR lists only the
drive letter, directory name, filename, and filename extension, one path per
line, for each filename it finds.
 
Before using a pipe for redirection, you should set the TEMP environment
variable in your AUTOEXEC.BAT file. Otherwise, the temporary file will
appear in the directory listing.
 
Presetting DIR parameters and switches
 
You can preset DIR parameters and switches by including the SET command with
the DIRCMD environment variable in your AUTOEXEC.BAT file. You can use any
valid combination of DIR parameters and switches with the SET DIRCMD
command, including the location and name of a file.
 
For example, to use the DIRCMD environment variable to set the wide display
format (/W) as the default format, include the following command in your
AUTOEXEC.BAT file:
 
    set dircmd=/w
 
For a single use of the DIR command, you can override a switch set by using
the DIRCMD environment variable. To do so, you use the same switch on the
DIR command line, but you must also precede the switch letter with a minus
sign, as the following example shows:
 
    dir /-w
 
You can change the DIRCMD default settings by typing the SET command at the
command prompt with a new parameter or switch after the equal sign (=). The
new default settings are effective for all subsequent DIR commands until you
use SET DIRCMD again on the command line or until you restart MS-DOS.
 
To clear all default settings, type the following command:
 
    set dircmd=
 
You can view the current settings of the DIRCMD environment variable by
typing the following command:
 
    set
 
MS-DOS displays a list of environment variables and their settings. For more
information about setting environment variables, see the <SET> command.
 
----------------------------------------------------------------------------
                               DIR--Examples
 
Suppose you want to display all files and directories in a directory,
including hidden or system files. To specify this display, type the
following command:
 
    dir /a
 
Suppose you want DIR to display one directory listing after another, until
it has displayed the listing for every directory on the disk in the current
drive. Suppose also that you want DIR to alphabetize each directory listing,
display it in wide format, and pause after each screen. To specify such a
display, be sure the root directory is the current directory and then type
the following command:
 
    dir /s/w/o/p
 
DIR lists the name of the root directory, the names of the subdirectories of
the root directory, and the names of the files in the root directory
(including extensions). Then DIR lists the subdirectory names and filenames
in each subdirectory in the directory tree.
 
To alter the preceding example so that DIR displays the filenames and
extensions but omits the directory names, type the following command:
 
    dir /s/w/o/p/a:-d
 
To print a directory listing, type the redirection symbol and PRN after any
form of the DIR command, as the following example shows:
 
    dir > prn
 
When you specify PRN on the DIR command line, the directory listing is sent
to the printer attached to the LPT1 port. If your printer is attached to a
different port, you must replace PRN with the name of the correct port.
 
You can also redirect output of the DIR command to a file by replacing PRN
with a filename. A path is also accepted on the command line. For example,
to direct DIR output to the file DIR.DOC in the RECORDS directory, type the
following command:
 
    dir > \records\dir.doc
 
If DIR.DOC does not exist, MS-DOS creates it, unless the directory RECORDS
also does not exist. In that case, MS-DOS displays the following message:
 
    File creation error
 
To display a list of all the filenames with the .TXT extension in all
directories on drive C, type the following command:
 
    dir c:\*.txt /w/o/s/p
 
DIR displays, in wide format, an alphabetized list of the matching filenames
in each directory and pauses each time the screen fills, until you press a
key to continue.
 
----------------------------------------------------------------------------
                                  DISKCOMP
 
Compares the contents of two floppy disks.
 
This command performs a track-by-track comparison. DISKCOMP determines the
number of sides and sectors per track to compare based on the format of the
first disk you specify.
 
Syntax
 
    DISKCOMP [drive1: [drive2:]] [/1] [/8]
 
Parameters
 
drive1:
    Specifies the drive containing one of the floppy disks.
 
drive2:
    Specifies the drive containing the other floppy disk.
 
Switches
 
/1
    Compares only the first sides of the disks, even if the disks are
    double-sided and the drives can read double-sided disks.
 
/8
    Compares only the first 8 sectors per track, even if the disks contain 9
    or 15 sectors per track.
 
Related Command
 
For information about comparing two files, see the <FC> command.
 
----------------------------------------------------------------------------
                              DISKCOMP--Notes
 
Invalid drive for DISKCOMP
 
The DISKCOMP command works only with floppy disks. You cannot use DISKCOMP
with a hard disk. If you specify a hard disk drive for drive1 or drive2,
DISKCOMP displays the following error message:
 
    Invalid drive specification
    Specified drive does not exist
    or is non-removable
 
DISKCOMP messages
 
If all tracks on the two disks being compared are the same, DISKCOMP
displays the following message:
 
    Compare OK
 
If the tracks are not the same, DISKCOMP displays a message similar to the
following:
 
    Compare error on
    side 1, track 2
 
When DISKCOMP completes the comparison, it displays the following message:
 
    Compare another diskette (Y/N)?
 
If you press Y, DISKCOMP prompts you to insert disks for the next
comparison. If you press N, DISKCOMP stops the comparison.
 
DISKCOMP ignores a disk's volume number when it makes the comparison.
 
Omitting drive parameters
 
If you omit the drive2 parameter, DISKCOMP uses the current drive for
drive2. If you omit both drive parameters, DISKCOMP uses the current drive
for both. If the current drive is the same as drive1, DISKCOMP prompts you
to swap disks as necessary.
 
Using one drive for the comparison
 
If you specify the same floppy disk drive for drive1 and drive2, DISKCOMP
does a comparison by using one drive and prompts you to insert the disks as
necessary. You might have to swap the disks more than once, depending on the
capacity of the disks and the amount of available memory.
 
Comparing different types of disks
 
DISKCOMP cannot compare a single-sided disk with a double-sided disk or a
high-density disk with a double-density disk. If the disk in drive1 is not
of the same type as the disk in drive2, DISKCOMP displays the following
message:
 
    Drive types or diskette types not compatible
 
Using DISKCOMP with networks and redirected drives
 
DISKCOMP does not work on a network drive or on a drive created or affected
by a SUBST command. If you attempt to use DISKCOMP with a network drive or a
drive created by the SUBST command, DISKCOMP displays an error message.
 
Comparing an original disk with a copy
 
When you use DISKCOMP with a disk that you made with the COPY command,
DISKCOMP may display a message similar to the following:
 
    Compare error on
    side 0, track 0
 
This type of error can occur even if the files on the disks are identical.
Although the COPY command duplicates information, it doesn't necessarily
place it in the same location on the destination disk. For more information
about comparing individual files on two disks, see the <FC> command.
 
DISKCOMP exit codes
 
The following list shows each exit code and gives a brief description of its
meaning:
 
0
    The disks are the same.
 
1
    Differences were found.
 
2
    The user pressed CTRL+C to stop the process.
 
3
    A critical error occurred.
 
4
    An initialization error occurred.
 
You can use the ERRORLEVEL parameter on the IF command line in a batch
program to process exit codes returned by DISKCOMP. For an example of a
batch program that processes exit codes, see the <CHOICE> command.
 
----------------------------------------------------------------------------
                             DISKCOMP--Example
 
If your system has only one floppy disk drive, drive A, and you want to
compare two disks, type the following command:
 
    diskcomp a: a:
 
DISKCOMP prompts you to insert each disk, as required.
 
----------------------------------------------------------------------------
                                  DISKCOPY
 
Copies the entire contents of one floppy disk to another floppy disk.
DISKCOPY writes over the existing contents of the destination disk as it
copies the new information to it.
 
This command determines the number of sides to copy based on the source
drive and disk.
 
Syntax
 
    DISKCOPY [drive1: [drive2:]] [/1] [/V] [/M]
 
Parameters
 
drive1:
    Specifies the drive containing the source disk.
 
drive2:
    Specifies the drive containing the destination disk.
 
Switches
 
/1
    Copies only the first side of a disk.
 
/V
    Verifies that the information is copied correctly. Use of this switch
    slows the copying process.
 
/M
    Forces DISKCOPY to use only conventional memory for interim storage. By
    default, DISKCOPY uses your hard disk as an interim storage area so you
    don't have to swap floppy disks.
 
Related Commands
 
For information about copying one or more files, see the <COPY> command.
 
For information about copying directories and subdirectories, see the
<XCOPY> command.
 
For information about comparing two disks to see if they are identical, see
the <DISKCOMP> command.
 
----------------------------------------------------------------------------
                              DISKCOPY--Notes
 
Invalid drive for DISKCOPY
 
The DISKCOPY command works only with uncompressed removable disks, such as
floppy disks. You cannot use DISKCOPY with a hard disk or a network drive.
If you specify a hard disk drive for drive1 or drive2, DISKCOPY displays the
following error message:
 
    Invalid drive specification
    Specified drive does not exist
    or is non-removable
 
DISKCOPY messages
 
The DISKCOPY command prompts you to insert the source and destination disks
and waits for you to press any key before continuing.
 
After copying, DISKCOPY displays the following message:
 
    Copy another diskette (Y/N)?
 
If you press Y, DISKCOPY prompts you to insert source and destination disks
for the next copy operation. To stop the DISKCOPY process, press N.
 
If you are copying to an unformatted floppy disk in drive2, DISKCOPY formats
the disk with the same number of sides and sectors per track as are on the
disk in drive1. DISKCOPY displays the following message while it formats the
disk and copies the files:
 
    Formatting while copying
 
If the capacity of the source disk is greater than that of the destination
disk and your computer can detect this difference, DISKCOPY displays the
following message:
 
    Drive types or diskette types not compatible
 
Disk serial numbers
 
If the source disk has a volume serial number, DISKCOPY creates a new volume
serial number for the destination disk and displays the number when the copy
operation is complete.
 
Omitting drive parameters
 
If you omit the drive2 parameter, DISKCOPY uses the current drive as the
destination drive. If you omit both drive parameters, DISKCOPY uses the
current drive for both. If the current drive is the same as drive1, DISKCOPY
prompts you to swap disks as necessary.
 
Using one drive for copying
 
When you use a single drive as both the source and destination drive,
DISKCOPY stores an image of the source disk in the directory specified by
the TEMP environment variable. If there is not enough space on that drive to
contain the source-disk image, you might have to swap floppy disks. DISKCOPY
prompts you each time you should insert a disk in the drive. DISKCOPY reads
from the source disk, writes to the destination disk, and prompts you to
insert the source disk again. This process continues until the entire disk
has been copied.
 
Avoiding disk fragmentation
 
Because DISKCOPY makes an exact copy of the source disk on the destination
disk, any fragmentation on the source disk is transferred to the destination
disk. Fragmentation is the presence of small areas of unused disk space
between existing files on a disk.
 
A fragmented source disk can slow down the finding, reading, or writing of
files. To avoid transferring fragmentation from one disk to another, use
either the COPY command or the XCOPY command to copy your disk. Because COPY
and XCOPY copy files sequentially, the new disk is not fragmented.
 
Copying Startup disks
 
If you use the DISKCOPY command to copy a startup disk, the copy will also
be a startup disk. If you use COPY or XCOPY to copy a startup disk, the copy
usually will not be a startup disk.
 
DISKCOPY exit codes
 
The following list shows each exit code (ERRORLEVEL parameter) and gives a
brief description of its meaning:
 
0
    The copy operation was successful.
 
1
    A nonfatal read/write error occurred.
 
2
    The user pressed CTRL+C to stop the process.
 
3
    A critical error occurred.
 
4
    An initialization error occurred.
 
You can use the ERRORLEVEL parameter on the IF command line in a batch
program to process exit codes returned by DISKCOPY. For an example of a
batch program that processes exit codes, see the <CHOICE> command.
 
----------------------------------------------------------------------------
                                DISPLAY.SYS
 
Enables you to display international character sets on EGA, VGA, and LCD
monitors. This device driver must be loaded by a <DEVICE> or <DEVICEHIGH>
command in your CONFIG.SYS file.
 
For an introduction to preparing your screen and keyboard for character
sets, see the chapter "Customizing for International Use" in the MS-DOS 6
User's Guide.
 
Syntax
 
    DEVICE=[drive:][path]DISPLAY.SYS CON[:]=(type[,[hwcp][,n]])
 
    DEVICE=[drive:][path]DISPLAY.SYS CON[:]=(type[,[hwcp][,(n,m)]])
 
Parameters
 
[drive:][path]
    Specifies the location of the DISPLAY.SYS file.
 
type
    Specifies the display adapter in use. Valid values include EGA and LCD.
    The EGA value supports both EGA and VGA display adapters. If you omit
    the type parameter, DISPLAY.SYS checks the hardware to determine which
    display adapter is in use. You can also specify CGA and MONO as values
    for type, but they have no effect because character set switching is not
    enabled for these devices.
 
hwcp
    Specifies the number of the character set that your hardware supports.
    The following list shows the character sets that MS-DOS supports and the
    country or language for each:
 
        437    United States
        850    Multilingual (Latin I)
        852    Slavic (Latin II)
        860    Portuguese
        863    Canadian-French
        865    Nordic
 
    Additional character sets are supported by the EGA2.CPI file. For more
    information, see the README.TXT file.
 
    For more information about using character sets, see the appendix
    "Keyboard Layouts and Character Sets" in the MS-DOS 6 User's Guide.
 
n
    Specifies the number of character sets the hardware can support in
    addition to the primary character set specified for the hwcp parameter.
    Valid values for n are in the range 0 through 6. This value depends on
    your hardware. For EGA display adapters, the maximum value for n is 6;
    for LCD display adapters, the maximum value for n is 1.
 
m
    Specifies the number of subfonts the hardware supports for each code
    page. The default value is 2 if type is EGA, and 1 if type is LCD.
 
----------------------------------------------------------------------------
                             DISPLAY.SYS--Notes
 
Using DISPLAY.SYS with monochrome or CGA display adapters
 
Because monochrome and CGA display adapters do not support character set
switching, using DISPLAY.SYS with either type of adapter has no effect.
 
Installing a third-party console driver
 
If you install both DISPLAY.SYS and a third-party console driver, such as
VT52.SYS, the third-party device driver must be installed first. Otherwise,
the third-party device driver may disable DISPLAY.SYS.
 
----------------------------------------------------------------------------
                            DISPLAY.SYS--Example
 
Suppose you want DISPLAY.SYS to support an EGA display adapter with the
United States hardware character set (437) and the potential for two
additional MS-DOS character sets. To do this and to specify that DISPLAY.SYS
is in the DOS directory on drive C, add the following line to your
CONFIG.SYS file:
 
    device=c:\dos\display.sys con=(ega,437,2)
 
----------------------------------------------------------------------------
                                    DOS
 
Specifies that MS-DOS should maintain a link to the upper memory area, load
part of itself into the high memory area (HMA), or both. You can use this
command only in your CONFIG.SYS file.
 
Syntax
 
    DOS=HIGH|LOW[,UMB|,NOUMB]
 
    DOS=[HIGH,|LOW,]UMB|NOUMB
 
Parameters
 
UMB|NOUMB
    Specifies whether MS-DOS should manage upper memory blocks (UMBs)
    created by a UMB provider such as EMM386.EXE. The UMB parameter
    specifies that MS-DOS should manage UMBs, if they exist. The NOUMB
    parameter specifies that MS-DOS should not manage UMBs. The default
    setting is NOUMB.
 
HIGH|LOW
    Specifies whether MS-DOS should attempt to load a part of itself into
    the HMA (HIGH) or keep all of MS-DOS in conventional memory (LOW). The
    default setting is LOW.
 
Related Commands
 
For information about loading a device driver into the upper memory area,
see the <DEVICEHIGH> command.
 
For information about loading a program into the upper memory area, see the
<LOADHIGH> command.
 
----------------------------------------------------------------------------
                                 DOS--Notes
 
Must install HIMEM.SYS for DOS=UMB or DOS=HIGH
 
You must install the HIMEM.SYS device driver or another extended memory
manager before you specify either DOS=UMB or DOS=HIGH.
 
Using the UMB parameter
 
You must specify the DOS=UMB command in order to load programs and device
drivers into the upper memory area. Using the upper memory area frees more
space in conventional memory for programs. In addition to using this
command, you must install an upper-memory-block (UMB) provider. If your
computer has an 80386 or 80486 processor, you can use <EMM386.EXE> for your
UMB provider.
 
If you specify DOS=UMB and no UMB provider is installed, MS-DOS will not
display an error message.
 
Using the HIGH parameter
 
If you specify the HIGH parameter, MS-DOS attempts to load part of itself
into the HMA. Loading part of MS-DOS into the HMA frees conventional memory
for programs. If you specify DOS=HIGH and MS-DOS is unable to use the HMA,
the following message will appear:
 
    HMA not available
    Loading DOS low
 
Combining parameters
 
You can include more than one parameter on a single DOS command line, using
commas to separate them. For example, the following command lines are
valid:
 
    dos=umb,low
 
    dos=high,umb
 
You can place the DOS command anywhere in your CONFIG.SYS file.
 
----------------------------------------------------------------------------
                                   DOSKEY
 
Loads the Doskey program into memory. The Doskey program recalls MS-DOS
commands and enables you to edit command lines and create and run macros.
 
Doskey is a memory-resident program. When installed, Doskey occupies about 3
kilobytes of resident memory.
 
Syntax
 
    DOSKEY [/REINSTALL] [/BUFSIZE=size] [/MACROS]
    [/HISTORY][/INSERT|/OVERSTRIKE] [macroname=[text]]
 
To start the Doskey program and use the default settings, use the following
syntax:
 
    DOSKEY
 
Parameter
 
macroname=[text]
    Creates a macro that carries out one or more MS-DOS commands (a Doskey
    macro). Macroname specifies the name you want to assign to the macro.
    Text specifies the commands you want to record.
 
Switches
 
/REINSTALL
    Installs a new copy of the Doskey program, even if one is already
    installed. In the latter case, the /REINSTALL switch also clears the
    buffer.
 
/BUFSIZE=size
    Specifies the size of the buffer in which Doskey stores commands and
    Doskey macros. The default size is 512 bytes. The minimum buffer size is
    256 bytes.
 
/MACROS
    Displays a list of all Doskey macros. You can use a redirection symbol
    (>) with the /MACROS switch to redirect the list to a file. You can
    abbreviate the /MACROS switch as /M.
 
/HISTORY
    Displays a list of all commands stored in memory. You can use a
    redirection symbol (>) with the /HISTORY switch to redirect the list to
    a file. You can abbreviate the /HISTORY switch as /H.
 
/INSERT|/OVERSTRIKE
    Specifies whether new text you type is to replace old text. If you use
    the /INSERT switch, new text that you type on a line is inserted into
    old text (as if you had pressed the INSERT key). If you use the
    /OVERSTRIKE switch, new text replaces old text. The default setting is
    /OVERSTRIKE.
 
----------------------------------------------------------------------------
                               DOSKEY--Notes
 
Recalling a command
 
To recall a command, you can use any of the following keys after loading
Doskey into memory:
 
UP ARROW
    Recalls the MS-DOS command you used before the one displayed.
 
DOWN ARROW
    Recalls the MS-DOS command you used after the one displayed.
 
PAGE UP
    Recalls the oldest MS-DOS command you used in the current session.
 
PAGE DOWN
    Recalls the most recent MS-DOS command you used.
 
Editing the command line
 
With the Doskey program, you can edit the current command line. The
following list describes the Doskey editing keys and their functions:
 
LEFT ARROW
    Moves the cursor back one character.
 
RIGHT ARROW
    Moves the cursor forward one character.
 
CTRL+LEFT ARROW
    Moves the cursor back one word.
 
CTRL+RIGHT ARROW
    Moves the cursor forward one word.
 
HOME
    Moves the cursor to the beginning of the line.
 
END
    Moves the cursor to the end of the line.
 
ESC
    Clears the command from the display.
 
F1
    Copies one character from the template to the MS-DOS command line. (The
    template is a memory buffer that holds the last command you typed.)
 
F2
    Searches forward in the template for the next key you type after
    pressing F2. Doskey inserts the text from the template up to but not
    including the character you specify.
 
F3
    Copies the remainder of the template to the command line. Doskey begins
    copying characters from the position in the template that corresponds to
    the position indicated by the cursor on the command line.
 
F4
    Deletes characters, beginning with the current character position, up to
    a character you specify. To use this editing key, press F4 and type a
    character. Doskey deletes up to, but not including, that character.
 
F5
    Copies the current command into the template and clears the command
    line.
 
F6
    Places an end-of-file character (CTRL+Z) at the current position on the
    command line.
 
F7
    Displays all commands stored in memory, with their associated numbers.
    Doskey assigns these numbers sequentially, beginning with 1 for the
    first (oldest) command stored in memory.
 
ALT+F7
    Deletes all commands stored in memory.
 
F8
    Searches memory for a command that you want Doskey to display. To use
    this editing key, type the first character, or the first few characters,
    of the command you want Doskey to search for and then press F8. Doskey
    displays the most recent command that begins with the text you typed.
    Press F8 repeatedly to cycle through all the commands that start with
    the characters you specified.
 
F9
    Prompts you for a command number and displays the command associated
    with the number you specify. To display all the numbers and their
    associated commands, press F7.
 
ALT+F10
    Deletes all macro definitions.
 
Specifying a default insert mode
 
If you press the INSERT key, you can type text on the Doskey command line in
the middle of old text without replacing the old text. However, once you
press ENTER, Doskey returns your keyboard to replace mode. You must press
INSERT again to return to insert mode.
 
The /INSERT switch puts your keyboard in insert mode each time you press
ENTER. Your keyboard effectively remains in insert mode until you use the
/OVERSTRIKE switch. You can temporarily return to replace mode by pressing
the INSERT key; but once you press ENTER, Doskey returns your keyboard to
insert mode.
 
The cursor changes shape when you use the INSERT key to change from one mode
to the other.
 
Creating a macro
 
You can use the Doskey program to create macros that carry out one or more
MS-DOS commands.
 
You can use the following special characters to control command operations
when defining a macro:
 
$G or $g
    Redirects output. Use either of these special characters to send output
    to a device or a file instead of to the screen. This character is
    equivalent to the redirection symbol for output (>).
 
$G$G or $g$g
    Appends output to the end of a file. Use either of these special double
    characters to append output to an existing file rather than replace the
    data in the file. These double characters are equivalent to the "append"
    redirection symbol for output (>>).
 
$L or $l
    Redirects input. Use either of these special characters to read input
    from a device or a file instead of from the keyboard. This character is
    equivalent to the redirection symbol for input (<).
 
$B or $b
    Sends macro output to a command. Using one of these special characters
    is equivalent to using the pipe (|) on a command line.
 
$T or $t
    Separates commands. Use either of these special characters to separate
    commands when you are creating macros or typing commands on the Doskey
    command line.
 
$$
    Specifies the dollar-sign character ($).
 
$1 through $9
    Represents any command-line information you want to specify when you run
    the macro. The special characters $1 through $9 are batch parameters,
    which make it possible for you to use different data on the command line
    each time you run the macro. The $1 character in a DOSKEY command is
    similar to the %1 character in a batch program.
 
$*
    Represents all the command-line information you want to specify when you
    type the macro name. The special character $* is a replaceable parameter
    that is similar to the batch parameters $1 through $9, with one
    important difference. Here, everything you type on the command line
    after the macro name is substituted for the $* in the macro.
 
For example, to create a macro that performs a quick and unconditional
format of a disk, type the following command:
 
    doskey qf=format $1 /q /u
 
For information about quick and unconditional formatting, see the <FORMAT>
command.
 
You can use the DOSKEY command in a batch program to create a macro.
 
Running a macro
 
To run a macro, type the macro name starting at the first position on the
command line. If the macro was defined with $* or any of the batch
parameters $1 through $9, use a space to separate parameters.
 
You could run the QF macro created in the previous example to format a disk
in drive A quickly and unconditionally. To do so, you would type the
following command:
 
    qf a:
 
You cannot run a macro from a batch program.
 
Creating a macro with the same name as an MS-DOS command
 
You might want to create a macro that has the same name as an MS-DOS
command. This can be useful, for example, if you always use a certain
command with specific switches. To specify whether you want to run the macro
or the MS-DOS command, follow these guidelines:
 
  To run the macro, begin typing the macro name immediately after the
   command prompt, with no space between the prompt and the command name.
 
  To carry out the command, insert one or more spaces between the command
   prompt and the command name.
 
Deleting a macro
 
To delete a macro, type the following command:
 
    doskey macroname=
 
----------------------------------------------------------------------------
                              DOSKEY--Examples
 
The /MACROS and /HISTORY switches are useful for creating batch programs to
save macros and commands. For example, to create a batch program named
MACINIT.BAT that includes all Doskey macros, type the following command:
 
    doskey /macros > macinit.bat
 
To use the MACINIT.BAT file, edit it to include the DOSKEY command at the
beginning of each macro line.
 
To create a batch program named TMP.BAT that contains recently used
commands, type the following command:
 
    doskey /history >  tmp.bat
 
To define a macro with multiple commands, use $T to separate commands, as
follows:
 
    doskey tx=cd\temp$tdir/w $*
 
In the preceding example, the TX macro changes the current directory to TEMP
and then displays a directory listing, using the wide display format. You
can use $* at the end of the macro to append other switches to the DIR
command when you run TX.
 
The following macro uses a batch parameter for a new directory name. The
macro first creates a new directory and then changes to it from the current
directory.
 
    doskey mc=md $1$tcd $1
 
To use the preceding macro to create and change to a directory named BOOKS,
type the following:
 
    mc books
 
To create a macro that uses batch parameters for moving a file or group of
files, type the following command:
 
    doskey mv=copy $1 $2 $t del $1
 
To create a macro that causes the MEM command to pause after each screen,
type the following command:
 
    doskey mem=mem $* /p
 
----------------------------------------------------------------------------
                                  DOSSHELL
 
Starts MS-DOS Shell, a graphical interface to MS-DOS.
 
MS-DOS Shell is included with MS-DOS 6.0 and earlier; it is not included
with MS-DOS 6.2. MS-DOS Shell is available in the MS-DOS 6.2 Resource Kit.
To order the Resource Kit, use the coupon in the back of your MS-DOS 6
User's Guide.
 
Syntax
 
To start MS-DOS Shell in text mode, use the following syntax:
 
    DOSSHELL [/T[:res[n]]] [/B]
 
To start MS-DOS Shell in graphics mode, use the following syntax:
 
    DOSSHELL [/G[:res[n]]] [/B]
 
Parameters
 
res
    Specifies a screen-resolution category. Valid values are L, M, and H to
    specify low, medium, and high resolution, respectively. The default
    value of res depends on your hardware.
 
n
    Specifies a screen resolution when there is more than one choice within
    a category. For information about the valid values for this parameter,
    see the "Notes" screen. The default value of n depends on your
    hardware.
 
Switches
 
/T
    Starts MS-DOS Shell in text mode.
 
/B
    Starts MS-DOS Shell using a black-and-white color scheme.
 
/G
    Starts MS-DOS Shell in graphics mode.
 
----------------------------------------------------------------------------
                              DOSSHELL--Notes
 
Running MS-DOS Shell with Microsoft Windows
 
Do not start Microsoft Windows from within MS-DOS Shell. If you want to use
both Microsoft Windows and MS-DOS Shell, start Windows, and then start
MS-DOS Shell from within Windows.
 
Memory requirement
 
To run MS-DOS Shell, you should ensure that your computer has at least 384K
of available conventional memory.
 
Adjusting screen resolution
 
Once you have started MS-DOS Shell, you can adjust the screen resolution by
using the Display command on the Options menu. A dialog box displays the
mode (text or graphics), the number of lines, the resolution category, and
the specific number within each category for all possible screen-resolution
modes available for your hardware.
 
The DOSSHELL.INI file
 
Your current MS-DOS Shell settings for program items and groups, options,
screen resolution, colors, and so on, are stored in a file called
DOSSHELL.INI. The DOSSHELL.INI file will be updated whenever you make a
change or start a program item, so it must be located on a drive that is not
write-protected. You can specify the location of the DOSSHELL.INI file by
setting a DOSSHELL environment variable in your AUTOEXEC.BAT file.
 
For example, if the DOSSHELL.INI file is located in the DOS directory on
drive C, type the following command in your AUTOEXEC.BAT file:
 
    dosshell=c:\dos
 
If you customize MS-DOS Shell to suit your own needs, you should back up
this file regularly. If the DOSSHELL.INI file is deleted or corrupted, a new
file will be created the next time you start MS-DOS Shell.
 
Setting the location to store temporary files
 
When you run a program from MS-DOS Shell, temporary files are created in the
directory where the DOSSHELL.EXE file is located. You can specify that
temporary files should be placed elsewhere by setting the TEMP environment
variable in your AUTOEXEC.BAT file.
 
----------------------------------------------------------------------------
                             DOSSHELL--Example
 
To start MS-DOS Shell in graphics mode, type the following command:
 
    dosshell /g
 
----------------------------------------------------------------------------
                                 DRIVER.SYS
 
Creates a logical drive that you can use to refer to a physical floppy disk
drive. This device driver must be loaded by a <DEVICE> or <DEVICEHIGH>
command in your CONFIG.SYS file.
 
A logical drive is a pointer to a physical disk drive in your system. The
logical drive is associated with a drive letter (for example, A or B). You
can specify parameters to describe the disk drive to MS-DOS.
 
Syntax
 
    DEVICE=[drive:][path]DRIVER.SYS /D:number [/C] [/F:factor] [/H:heads]
    [/S:sectors] [/T:tracks]
 
Parameter
 
[drive:][path]
    Specifies the location of the DRIVER.SYS file.
 
Switches
 
/D:number
    Specifies the number of the physical floppy disk drive. Valid values for
    number are in the range 0 through 127. The first physical floppy disk
    drive (drive A) is drive 0; a second physical floppy disk drive is drive
    1; a third physical floppy disk drive, which must be external, is drive
    2. For a computer with one floppy disk drive, drives A and B are both
    numbered 0; for a computer with multiple floppy disk drives, drive B is
    numbered 1.
 
/C
    Specifies that the physical disk drive can detect whether the drive door
    is closed (change-line support).
 
/F:factor
    Specifies the type of disk drive. Valid values for factor are as
    follows:
 
        0    160K/180K or 320K/360K
        1    1.2 megabyte (MB)
        2    720K (3.5-inch disk) or other
        7    1.44 MB (3.5-inch disk)
        9    2.88 MB (3.5-inch disk)
 
    The default value for factor is 2.
 
    Generally, if you use the /F switch, you can omit the /H, /S, and /T
    switches. Check the default values for these switches to make sure they
    are correct for the type of disk drive you are using. To determine the
    appropriate values for the disk drive, see the disk-drive manufacturer's
    documentation.
 
    If you specify the /H, /S, and /T switches, you can omit the /F switch.
 
/H:heads
    Specifies the number of heads in the disk drive. Valid values for heads
    are in the range 1 through 99. The default value is 2. To determine the
    correct value for your disk drive, see the disk-drive manufacturer's
    documentation.
 
/S:sectors
    Specifies the number of sectors per track. Valid values for sectors are
    in the range 1 through 99. The default value depends on the value of
    /F:factor, as follows:
 
        /F:0    /S:9
 
        /F:1    /S:15
 
        /F:2    /S:9
 
        /F:7    /S:18
 
        /F:9    /S:36
 
    To determine the correct value for your disk drive, see the disk-drive
    manufacturer's documentation.
 
/T:tracks
    Specifies the number of tracks per side on the block device. Valid
    values for tracks are in the range 1 through 999. The default value is
    80, unless /F:factor is 0, in which case the default value is 40. To
    determine the correct value for your disk drive, see the disk-drive
    manufacturer's documentation.
 
----------------------------------------------------------------------------
                             DRIVER.SYS--Notes
 
Disk-drive change-line support
 
The term "change-line support" means that a physical disk drive can detect
when the drive door is opened and closed. Change-line support allows faster
MS-DOS operation with floppy disks. The /C switch indicates to MS-DOS that
the physical disk drive can support change-line error detection. To
determine whether your disk drive has change-line support, see the
disk-drive manufacturer's documentation.
 
Modifying or redefining a supported physical disk drive
 
For information about modifying the parameters of a physical disk drive that
is supported by your hardware, see the <DRIVPARM> command. You can also use
DRIVER.SYS to redefine a physical floppy disk drive.
 
Limitations on DRIVER.SYS
 
You cannot use DRIVER.SYS with hard disk drives. For information about
substituting a logical drive letter for a hard disk drive, see the <SUBST>
command.
 
Creating a duplicate logical drive
 
Suppose you want to use one physical floppy disk drive to copy files from
one floppy disk to another. Because you cannot copy from and to the same
logical drive by using the COPY or XCOPY command, you must assign a second
drive letter to that physical drive.
 
If your system has just one physical floppy disk drive, you do not need to
install DRIVER.SYS for this purpose. MS-DOS already assigns both logical
drive A and logical drive B to that drive. Just copy files from drive A to
drive B and switch disks when MS-DOS prompts you.
 
If your system has more than one floppy disk drive, then you need to use
DRIVER.SYS to assign a second drive letter to the physical floppy disk
drive.
 
Creating a new logical drive with different parameters
 
If you use DRIVER.SYS to assign a logical drive that has parameters
different from those of the previously assigned logical drive, then the
parameters of the previous logical drive will be invalid. Therefore, you
should no longer use the drive letter corresponding to the previous logical
drive.
 
----------------------------------------------------------------------------
                            DRIVER.SYS--Examples
 
To add an external 720K drive to your system, add the following line to your
CONFIG.SYS file:
 
    device=driver.sys /d:2
 
Since no location is specified, MS-DOS searches for DRIVER.SYS in the root
directory of your startup drive.
 
Suppose you want to use a single 1.44-megabyte external disk drive to copy
files from one floppy disk to another. To do this, you must add two
identical DEVICE commands for DRIVER.SYS in your CONFIG.SYS file. This
procedure assigns two logical drive letters to the same physical drive. You
can then swap disks in the same drive during the copying process. The
following example shows how to do this:
 
    device=driver.sys /d:2 /f:7
    device=driver.sys /d:2 /f:7
 
----------------------------------------------------------------------------
                                  DRIVPARM
 
Defines parameters for devices such as disk and tape drives when you start
MS-DOS. You can use this command only in your CONFIG.SYS file.
 
The DRIVPARM command modifies the parameters of an existing physical drive.
It does not create a new logical drive. The settings specified in the
DRIVPARM command override the driver definitions for any previous block
device.
 
Syntax
 
    DRIVPARM=/D:number [/C] [/F:factor] [/H:heads] [/I] [/N] [/S:sectors]
    [/T:tracks]
 
Switches
 
/D:number
    Specifies the physical drive number. Values for number must be in the
    range 0 through 255 (for example, drive number 0 = drive A, 1 = drive B,
    2 = drive C, and so on).
 
/C
    Specifies that the drive can detect whether the drive door is closed.
 
/F:factor
    Specifies the drive type. The following list shows the valid values for
    factor and a brief description of each. The default value is 2.
 
    0
        160K/180K or 320K/360K
 
    1
        1.2 megabyte (MB)
 
    2
        720K (3.5-inch disk)
 
    5
        Hard disk
 
    6
        Tape
 
    7
        1.44 MB (3.5-inch disk)
 
    8
        Read/write optical disk
 
    9
        2.88 MB (3.5-inch disk)
 
/H:heads
    Specifies the maximum number of heads. Values for heads must be in the
    range 1 through 99. The default value depends upon the value you specify
    for /F:factor.
 
/I
    Specifies an electronically compatible 3.5-inch floppy disk drive.
    (Electronically compatible drives are installed on your computer and use
    your existing floppy-disk-drive controller.) Use the /I switch if your
    computer's ROM BIOS does not support 3.5-inch floppy disk drives.
 
/N
    Specifies a non-removable block device.
 
/S:sectors
    Specifies the number of sectors per track that the block device
    supports. Values for sectors must be in the range 1 through 99. The
    default value depends upon the value you specify for /F:factor.
 
/T:tracks
    Specifies the number of tracks per side that the block device supports.
    The default value depends upon the value you specify for /F:factor.
 
----------------------------------------------------------------------------
                              DRIVPARM--Notes
 
Using the /I switch
 
Use the /I switch if your system does not support 3.5-inch floppy disk
drives. (Some IBM PC/AT-compatible systems do not have a ROM BIOS that
supports 3.5-inch floppy disk drives.)
 
Disk drive change-line support
 
Change-line support means that a physical disk drive can detect whether the
drive door is opened and closed. Change-line support improves performance by
letting MS-DOS know when one floppy disk has been replaced by another. The
/C switch allows MS-DOS to make use of change-line support. To find out
whether your disk drive has change-line support, see your disk-drive
documentation.
 
Creating a logical drive
 
DRIVPARM modifies the parameters of an existing physical drive and does not
create a new logical drive.
 
----------------------------------------------------------------------------
                             DRIVPARM--Example
 
Suppose your system has an internal tape drive with one head on drive D that
is configured at startup to write 20 tracks of 40 sectors per track. To
reconfigure this tape drive to write 10 tracks of 99 sectors each, add the
following command to your CONFIG.SYS file:
 
    drivparm=/d:3 /f:6 /h:1 /s:99 /t:10
 
----------------------------------------------------------------------------
                                    ECHO
 
Displays or hides the text in batch programs when the program is running.
Also indicates whether the command-echoing feature is on or off.
 
When you run a batch program, MS-DOS typically displays (echoes) the batch
program's commands on the screen. You can turn this feature on or off by
using the ECHO command.
 
Syntax
 
    ECHO [ON|OFF]
 
To use the echo command to display a message, use the following syntax:
 
    echo [message]
 
Parameters
 
ON|OFF
    Specifies whether to turn the command-echoing feature on or off. To
    display the current ECHO setting, use the ECHO command without a
    parameter.
 
message
    Specifies text you want MS-DOS to display on the screen.
 
Related Command
 
For information about suspending the execution of a batch program, see the
<PAUSE> command.
 
----------------------------------------------------------------------------
                                ECHO--Notes
 
Using a message with the ECHO command
 
The ECHO message command is useful when ECHO is off. To display a message
that is several lines long without displaying other commands, you can
include several ECHO message commands after the ECHO OFF command in your
batch program.
 
Hiding the command prompt
 
If you use the ECHO OFF command on the command line, the command prompt does
not appear on your screen. To redisplay the command prompt, type ECHO ON.
 
Preventing MS-DOS from echoing a line
 
You can insert an at sign (@) in front of a command in a batch program to
prevent MS-DOS from echoing that line.
 
Echoing a blank line
 
To echo a blank line on the screen, you can type ECHO and then a period
(ECHO.). There must be no intervening space.
 
Displaying pipes and redirection characters
 
You cannot display a pipe (|) or redirection character (< or >) by using the
ECHO command.
                                      
----------------------------------------------------------------------------
                               ECHO--Examples
 
The following example shows a batch program that includes a three-line
message preceded and followed by a blank line:
 
    echo off
    echo.
    echo This batch program
    echo formats and checks
    echo new disks
    echo.
 
If you want to turn ECHO off and you do not want to echo the ECHO command
itself, include an at sign (@) before the command, as follows:
 
    @echo off
 
You can use the IF and ECHO commands on the same command line, as follows:
 
    if exist *.rpt echo The report has arrived.
 
----------------------------------------------------------------------------
                                    EDIT
 
Starts MS-DOS Editor, a text editor you can use to create and edit ASCII
text files.
 
MS-DOS Editor is a full-screen editor that allows you to create, edit, save,
and print ASCII text files. Using MS-DOS Editor, you can choose commands
from menus and specify information and preferences in dialog boxes. MS-DOS
Editor includes extensive online Help about MS-DOS Editor techniques and
commands.
 
Syntax
 
    EDIT [[drive:][path]filename] [/B] [/G] [/H] [/NOHI]
 
Parameter
 
[drive:][path]filename
    Specifies the location and name of an ASCII text file. If the file does
    not exist, MS-DOS Editor creates it. If the file exists, MS-DOS Editor
    opens it and displays its contents on the screen.
 
Switches
 
/B
    Displays MS-DOS Editor in black and white. Use this option if MS-DOS
    Editor isn't displayed correctly on a monochrome monitor.
 
/G
    Uses the fastest screen updating for a CGA monitor.
 
/H
    Displays the maximum number of lines possible for the monitor you are
    using.
 
/NOHI
    Enables you to use 8-color monitors with MS-DOS Editor. Usually, MS-DOS
    uses 16 colors.
 
CAUTION:  MS-DOS Editor does not work if the file QBASIC.EXE is not in the
          current directory or in the search path or in the same directory
          as the file EDIT.COM. If you delete QBASIC.EXE to save space on
          your hard disk, you cannot use MS-DOS Editor.
 
----------------------------------------------------------------------------
                                 EDIT--Note
 
Some monitors may not support the display of shortcut keys by default. If
your monitor does not display shortcut keys, use the /B switch (for CGA
monitors) and the /NOHI switch (for systems that do not support bold
characters).
 
----------------------------------------------------------------------------
                                  EGA.SYS
 
Saves and restores the display when the MS-DOS Shell Task Swapper is used
with EGA monitors. If you have an EGA monitor, you must install the EGA.SYS
device driver before using Task Swapper. This device driver must be loaded
by a <DEVICE> or <DEVICEHIGH> command in your CONFIG.SYS file.
 
Syntax
 
    DEVICE=[drive:][path]EGA.SYS
 
Parameters
 
[drive:][path]
    Specifies the location of the EGA.SYS file.
 
----------------------------------------------------------------------------
                               EGA.SYS--Note
 
If you are using a mouse on a system that has an EGA monitor, you can save
memory by installing EGA.SYS before you install your mouse driver.
 
----------------------------------------------------------------------------
                                   EMM386
 
Enables or disables EMM386 expanded-memory support on a computer with an
80386 or higher processor. The EMM386 command also enables or disables
Weitek coprocessor support. Do not use this command when Windows is
running.
 
The EMM386 device driver, EMM386.EXE, provides expanded-memory support and
also provides access to the upper memory area. For information about
EMM386.EXE, see <EMM386.EXE>.
 
Syntax
 
    EMM386 [ON|OFF|AUTO] [W=ON|W=OFF]
 
To display the current status of EMM386 expanded-memory support, use the
following syntax:
 
    EMM386
 
Parameters
 
ON|OFF|AUTO
    Activates the EMM386 device driver (if set to ON), or suspends the
    EMM386 device driver (if set to OFF), or places the EMM386 device driver
    in auto mode (if set to AUTO). Auto mode enables expanded-memory support
    only when a program calls for it. The default value is ON.
 
W=ON|W=OFF
    Enables (if set to W=ON) or disables (if set to W=OFF) Weitek
    coprocessor support. The default value is W=OFF.
 
----------------------------------------------------------------------------
                               EMM386--Notes
 
Installing the EMM386.EXE device driver
 
To use the EMM386 command, you must have an 80386 or higher processor, and
you must also install the EMM386.EXE device driver by using the DEVICE
command in your CONFIG.SYS file. If you try to use the EMM386 command on a
computer that does not have an 80386 or higher processor, MS-DOS displays
the following message:
 
    EMM386 driver not installed
 
Reactivating EMM386 expanded-memory support
 
If EMM386 was loaded when MS-DOS started but is not currently in use, the ON
parameter reactivates expanded-memory support.
 
Suspending EMM386 expanded-memory support
 
If EMM386 expanded-memory support is currently active, handle 0 is the only
handle allocated, and EMM386 is not providing access to the upper memory
area. The OFF parameter suspends EMM386 expanded-memory support. When EMM386
expanded-memory support is off, the EMM386.EXE device-driver header is
changed so that programs cannot use expanded memory. This enables you to run
non-VCPI-compliant programs such as Windows 3.0 in Standard mode.
 
Enabling and disabling Weitek coprocessor support
 
If the W=ON parameter is specified and the OFF parameter (different from the
W=OFF parameter) is not, EMM386 enables Weitek coprocessor support. The high
memory area (HMA) must be available to enable Weitek coprocessor support. If
you load MS-DOS into the HMA by specifying DOS=HIGH, you may not be able to
enable Weitek coprocessor support.
 
If you specify the W=ON or W=OFF parameter and no Weitek coprocessor is
installed in your computer system, MS-DOS displays the following error
message:
 
    Weitek Coprocessor not installed
 
----------------------------------------------------------------------------
                                 EMM386.EXE
 
Provides access to the upper memory area and uses extended memory to
simulate expanded memory. This device driver must be loaded by a <DEVICE>
command in your CONFIG.SYS file and can be used only on computers with an
80386 or higher processor.
 
EMM386 uses extended memory to simulate expanded memory for programs that
can use expanded memory. EMM386 also makes it possible to load programs and
device drivers into upper memory blocks (UMBs).
 
Syntax
 
    DEVICE=[drive:][path]EMM386.EXE [ON|OFF|AUTO] [memory] [MIN=size]
    [W=ON|W=OFF] [Mx|FRAME=address|/Pmmmm] [Pn=address] [X=mmmm-nnnn]
    [I=mmmm-nnnn] [B=address] [L=minXMS] [A=altregs] [H=handles] [D=nnn]
    [RAM=mmmm-nnnn] [NOEMS] [NOVCPI] [HIGHSCAN] [VERBOSE] [WIN=mmmm-nnnn]
    [NOHI] [ROM=mmmm-nnnn] [NOMOVEXBDA] [ALTBOOT]
 
Parameters
 
[drive:][path]
    Specifies the location of the EMM386.EXE file.
 
[ON|OFF|AUTO]
    Activates the EMM386 device driver (if set to ON), or suspends the
    EMM386 device driver (if set to OFF), or places the EMM386 device driver
    in auto mode (if set to AUTO). Auto mode enables expanded-memory support
    and upper memory block support only when a program calls for it. The
    default value is ON. Use the EMM386 command to change this value after
    EMM386 has started.
 
memory
    Specifies the maximum amount of extended memory (in kilobytes) that you
    want EMM386 to provide as expanded/Virtual Control Program Interface
    (EMS/VCPI) memory. This amount is in addition to the memory used for
    UMBs and EMM386 itself. Values for memory are in the range 64 through
    the lesser of either 32768 or the amount of extended memory available
    when EMM386 is loaded. The default value is the amount of free extended
    memory. If you specify the NOEMS switch, the default value is 0. EMM386
    rounds the value down to the nearest multiple of 16.
 
Switches
 
MIN=size
    Specifies the minimum amount of EMS/VCPI memory (in kilobytes) that
    EMM386 will provide, if that amount of memory is available. EMM386
    reserves this amount of extended memory for use as EMS/VCPI memory when
    EMM386 is loaded by the DEVICE=EMM386.EXE command in your CONFIG.SYS
    file. EMM386 may be able to provide additional EMS/VCPI memory (up to
    the amount specified by the MEMORY parameter) if sufficient XMS memory
    is available when a program requests EMS/VCPI memory. Values are in the
    range 0 through the value specified by the MEMORY parameter. The default
    value is 256. If you specify the NOEMS switch, the default value is 0.
    If the value of MIN is greater than the value of MEMORY, EMM386 uses the
    value specified by MIN.
 
W=ON|W=OFF
    Enables or disables support for the Weitek coprocessor. The default
    setting is W=OFF.
 
Mx
    Specifies the address of the page frame. Valid values for x are in the
    range 1 through 14. The following list shows each value and its
    associated base address in hexadecimal format:
 
            1 => C000h    8 => DC00h
            2 => C400h    9 => E000h
            3 => C800h    10 => 8000h
            4 => CC00h    11 => 8400h
            5 => D000h    12 => 8800h
            6 => D400h    13 => 8C00h
            7 => D800h    14 => 9000h
 
    Values in the range 10 through 14 should be used only on computers that
    have 512K of memory.
 
FRAME=address
    Specifies the page-frame segment base directly. To specify a specific
    segment-base address for the page frame, use the FRAME switch and
    specify the address you want. Valid values for address are in the ranges
    8000h through 9000h and C000h through E000h, in increments of 400h. To
    provide expanded memory and disable the page frame, you can specify
    FRAME=NONE; however, this may cause some programs that require expanded
    memory to work improperly.
 
/Pmmmm
    Specifies the address of the page frame. Valid values for mmmm are in
    the ranges 8000h through 9000h and C000h through E000h, in increments of
    400h.
 
Pn=address
    Specifies the segment address of a specific page, where n is the number
    of the page you are specifying and address is the segment address you
    want. Valid values for n are in the range 0 through 255. Valid values
    for address are in the ranges 8000h through 9C00h and C000h through
    EC00h, in increments of 400h. The addresses for pages 0 through 3 must
    be contiguous in order to maintain compatibility with version 3.2 of the
    Lotus/Intel/Microsoft Expanded Memory Specification (LIM EMS). If you
    use the Mx switch, the FRAME switch, or the /Pmmmm switch, you cannot
    specify the addresses for pages 0 through 3 for the /Pmmmm switch.
 
X=mmmm-nnnn
    Prevents EMM386 from using a particular range of segment addresses for
    an EMS page or for UMBs. Valid values for mmmm and nnnn are in the range
    A000h through FFFFh and are rounded down to the nearest 4-kilobyte
    boundary. The X switch takes precedence over the I switch if the two
    ranges overlap.
 
I=mmmm-nnnn
    Specifies a range of segment addresses to be used (included) for an EMS
    page or for UMBs. Valid values for mmmm and nnnn are in the range A000h
    through FFFFh and are rounded down to the nearest 4-kilobyte boundary.
    The X switch takes precedence over the I switch if the two ranges
    overlap.
 
B=address
    Specifies the lowest segment address available for EMS "banking"
    (swapping of 16-kilobyte pages). Valid values are in the range 1000h
    through 4000h. The default value is 4000h.
 
l=minXMS
    Ensures that the specified amount (in kilobytes) of extended memory will
    still be available after EMM386 is loaded. The default value is 0.
 
A=altregs
    Specifies how many fast alternate register sets (used for multitasking)
    you want to allocate to EMM386. Valid values are in the range 0 through
    254. The default value is 7. Every alternate register set adds about 200
    bytes to the size in memory of EMM386.
 
H=handles
    Specifies how many handles EMM386 can use. Valid values are in the range
    2 through 255. The default value is 64.
 
D=nnn
    Specifies how many kilobytes of memory should be reserved for buffered
    direct memory access (DMA). Discounting floppy-disk DMA, this value
    should reflect the largest DMA transfer that will occur while EMM386 is
    active. Valid values for nnn are in the range 16 through 256. The
    default value is 32.
 
RAM=mmmm-nnnn
    Specifies a range of segment addresses to be used for UMBs and also
    enables EMS support. If you do not specify a range, EMM386 uses all
    available adapter space to create UMBs and a page frame for EMS.
 
NOEMS
    Provides access to the upper memory area but prevents access to expanded
    memory.
 
NOVCPI
    Disables support for VCPI applications. This switch must be used with
    the NOEMS switch. If you specify the NOVCPI switch without specifying
    the NOEMS switch, EMM386 does not disable VCPI support. If you specify
    both switches, EMM386 disregards the MEMORY parameter and the MIN
    switch. Disabling support for VCPI applications reduces the amount of
    extended memory allocated.
 
HIGHSCAN
    Specifies that EMM386 use an additional check to determine the
    availablity of upper memory for use as UMBs or EMS windows. On some
    computers, specifying this switch may have no effect or cause EMM386 to
    identify upper memory areas as available when they are not. As a
    result, your computer might stop responding.
 
VERBOSE
    Directs EMM386 to display status and error messages while loading. By
    default, EMM386 displays messages only if it encounters an error
    condition. You can abbreviate VERBOSE as V. (To display status messages
    without adding the VERBOSE switch, press and hold the ALT key while
    EMM386 starts and loads.)
 
WIN=mmmm-nnnn
    Reserves a specified range of segment addresses for Windows instead of
    for EMM386. Valid values for mmmm and nnnn are in the range A000h
    through FFFFh and are rounded down to the nearest 4-kilobyte boundary.
    The X switch takes precedence over the WIN switch if the two ranges
    overlap. The WIN switch takes precedence over the RAM, ROM, and I
    switches if their ranges overlap.
 
[NOHI]
    Prevents EMM386 from loading into the upper memory area. Normally, a
    portion of EMM386 is loaded into upper memory. Specifying this switch
    decreases available conventional memory and increases the upper memory
    area available for UMBs.
 
[ROM=mmmm-nnnn]
    Specifies a range of segment addresses that EMM386 uses for shadow
    RAM--random-access memory used for read-only memory (ROM). Valid values
    for mmmm and nnnn are in the range A000h through FFFFh and are rounded
    down to the nearest 4-kilobyte boundary. Specifying this switch may
    speed up your system if it does not already have shadow RAM.
 
[NOMOVEXBDA]
    Prevents EMM386 from moving the extended BIOS data from conventional
    memory to upper memory.
 
[ALTBOOT]
    Specifies that EMM386 use an alternate handler to restart your computer
    when you press CTRL+ALT+DEL. Use this switch only if your computer stops
    responding or exhibits other unusual behavior when EMM386 is loaded and
    you press CTRL+ALT+DEL.
 
----------------------------------------------------------------------------
                             EMM386.EXE--Notes
 
Sharing XMS and EMS memory
 
EMM386 provides EMS/VCPI memory for programs that require it by converting
XMS memory to EMS/VCPI memory. When it is loaded, EMM386 reserves the amount
of memory specified by the MIN switch for use as EMS/VCPI memory (the
default value is 256K). Once this amount of XMS memory is reserved, it is
always available as EMS/VCPI memory and no longer available as XMS memory.
EMM386 may be able to convert additional amounts of XMS memory to EMS/VCPI
memory, up to the amount specified by the MEMORY parameter. EMM386 returns
the additional amount back to XMS memory when it is no longer needed as
EMS/VCPI memory.
 
If you specify MIN=0, EMM386 does not reserve any XMS memory for use as
EMS/VCPI memory. Instead, it converts XMS memory to EMS/VCPI memory only
when a program requests it. This frees XMS memory when EMS/VCPI memory is
not needed. However, EMM386 will not be able to supply the requested amount
of EMS/VCPI memory if programs have allocated all the XMS memory at the time
of the request.
 
Must install HIMEM.SYS before EMM386.EXE
 
You must include a DEVICE command for the HIMEM.SYS device driver in your
CONFIG.SYS file before the DEVICE command for EMM386.EXE.
 
Using EMM386 memory switches
 
Unless you want to use EMM386 to provide access to the upper memory area,
you need not specify memory switches on the DEVICE command line. EMM386
usually runs properly with the default values. In some cases, however, you
might want to control how EMM386 uses memory. For example, you can control
where EMM386 puts the EMS page frame or which segments it uses for EMS
pages. You can use as many of these memory switches as you want, in any
order you want.
 
CAUTION:  Use EMM386.EXE parameters carefully. You can make your computer
          inoperable if you use them incorrectly.
 
Using EMM386 to provide access to the upper memory area
 
In addition to providing access to expanded memory, EMM386 provides access
to the upper memory area, which you can use to load certain programs and
device drivers. You must use either the RAM or NOEMS switch to provide
access to the upper memory area.
 
To give MS-DOS access to the upper memory area but not to expanded memory,
use the NOEMS switch. To give MS-DOS access to both the upper memory area
and expanded memory, use the RAM switch. The RAM switch provides access to
less of the upper memory area for running device drivers and programs than
does the NOEMS switch. In either case, you must include the DOS=UMB command
in your CONFIG.SYS file. The device command for EMM386.EXE must precede any
DEVICEHIGH commands.
 
Using EMM386 with Windows 3.1
 
When EMM386 is used with Windows 3.1, the I, X, NOEMS, Mx, Pnnnn, and FRAME
switches have precedence over the EMMINCLUDE, EMMEXCLUDE, and EMMPAGEFRAME
settings in the Windows SYSTEM.INI file. Changes to these settings in the
SYSTEM.INI file have no effect when EMM386 is loaded.
 
SMARTDRV double buffering may be required to use EMM386
 
If you have a small computer system interface (SCSI) or enhanced system
device interface (ESDI) hard disk or other device, you may have to add the
following line to your CONFIG.SYS file:
 
    device=smartdrv.exe /double_buffer
 
Add the line before any DEVICEHIGH statements and before any statements that
load installable device drivers that use expanded memory. The statement
enables an SCSI or EDSI controller to transfer information to programs that
use the upper memory area or expanded memory.
 
----------------------------------------------------------------------------
                            EMM386.EXE--Examples
 
To start EMM386 as an expanded-memory emulator, using the default values,
add the following lines to your CONFIG.SYS file:
 
    device=himem.sys
    device=emm386.exe
 
Since no location is specified, MS-DOS searches for the EMM386.EXE file in
the root directory of your startup drive.
 
To specify that EMM386 allocate a maximum of 4096K of memory and a
guaranteed 256K of memory (the default value), and to specify that the
EMM386.EXE file is located in the DOS directory on drive C, add the
following line to your CONFIG.SYS file:
 
    device=c:\dos\emm386.exe 4096
 
To emulate expanded memory, specify the segment-base address D000h for the
EMS page frame, and allocate 512K of memory to EMM386, use one of the
following commands:
 
    device=emm386.exe 512 frame=d000
 
    device=emm386.exe 512 p0=d000 p1=d400 p2=d800 p3=dc00
 
Suppose that, in addition to specifying the conditions set in the preceding
commands, you want to prevent EMM386 from using the segment addresses E000h
through EC00h. To do this and to specify that EMM386 can use 127 handles,
add the following line to your CONFIG.SYS file:
 
    device=emm386.exe 512 frame=d000 x=e000-ec00 h=127
 
To provide access to the upper memory area but not provide EMS/VCPI memory,
add the following line to your CONFIG.SYS file:
 
    device=emm386.exe noems novcpi
 
To provide access to the upper memory area and provide EMS/VCPI memory, add
the following line to your CONFIG.SYS file:
 
    device=emm386.exe ram
 
----------------------------------------------------------------------------
                                    EXIT
 
Quits the MS-DOS command interpreter (COMMAND.COM) and returns to the
program that started the command interpreter, if one exists.
 
Syntax
 
    EXIT
 
----------------------------------------------------------------------------
                                EXIT--Notes
 
Using exit with the command interpreter
 
When you use the MS-DOS COMMAND command to start a new instance of the
command interpreter, you can use the EXIT command to return to the old
command interpreter. Also, while running some programs, you can run the
MS-DOS command interpreter and then use the EXIT command to return to your
program. For more information about command interpreters, see the <COMMAND>
command.
 
If you are not using the /P (permanent) switch with the inital copy of
COMMAND.COM, the EXIT command quits the command interpreter. You must then
specify at the command prompt the location of the COMMAND.COM file to start
the command interpreter again.
 
Using exit when the command program is loaded as permanent
 
If you start the COMMAND.COM program with the /P (permanent) switch, the
EXIT command has no effect.
 
----------------------------------------------------------------------------
                                   EXPAND
 
Expands a compressed file. You can use this command to retrieve one or more
files from the Setup disks that accompany MS-DOS 6. These files are not
usable unless you expand them.
 
Syntax
 
    EXPAND [drive:][path]filename [[drive:][path]filename[ ...]]
    destination
 
If you type the following, EXPAND will prompt you for the location and/or
name you want to give the expanded file:
 
    EXPAND [drive:][path]filename
 
If you type the following, EXPAND will prompt you for the location and name
of the compressed file you want to expand, then prompt you for the location
and/or name you want to give the expanded file:
 
    EXPAND
 
Parameters
 
[drive:][path]filename
    Specifies the location and name of a compressed file or files to be
    expanded. You cannot use wildcards (* and ?).
 
destination
    Specifies the location and/or name of the expanded file or files.
    Destination can consist of a drive letter and colon, a directory name, a
    filename, or a combination. However, you cannot specify a filename for
    destination unless you also specify a single compressed file for
    filename.
 
----------------------------------------------------------------------------
                               EXPAND--Notes
 
Retrieving files from the Setup disks
 
Most of the files on the Setup disks provided with MS-DOS 6 are compressed.
Each of these compressed files has a file extension that ends with an
underscore character (_). When you installed MS-DOS, you ran the Setup
program, which expanded these files before copying them to your system.
However, if you need to retrieve just one or a few files from the original
disks, you can use the EXPAND command.
 
Letting EXPAND prompt you
 
If you don't include the destination, or don't include the compressed file
and the destination, EXPAND prompts you for the information and provides
examples.
 
----------------------------------------------------------------------------
                              EXPAND--Examples
 
Suppose you accidentally delete the SORT.EXE file from your DOS directory on
drive C. You can copy and expand the compressed file SORT.EX_ from the
MS-DOS 6 Setup disks to your hard disk. First, find out which disk contains
SORT.EX_ by opening the PACKING.LST file on Setup Disk 1. Then insert the
appropriate disk into drive A and use the following command to copy and
expand the file:
 
    expand a:\sort.ex_ c:\dos\sort.exe
 
To copy and expand the SORT.EX_ file to the hard disk by letting EXPAND
prompt you, type the following at the command prompt:
 
    expand
 
EXPAND prompts you with the following:
 
    Type the location and name of the compressed file you want to expand.
    (Example: A:\EGA.SY_)
 
    Compressed file:
 
To expand and copy the SORT.EX_ file from the Setup disk in drive A, type
the following:
 
    a:\sort.ex_
 
EXPAND prompts you with the following:
 
    Type the location and/or name you want to give the expanded file.
    (Example: C:\DOS\EGA.SYS)
 
    Expanded file:
 
If your MS-DOS files are in the C:\DOS directory, type the following:
 
    c:\dos\sort.exe
                                      
----------------------------------------------------------------------------
                                  FASTHELP
 
Displays a list of all MS-DOS 6 commands and gives a brief explanation of
each. The information that the FASTHELP command displays is similar to, but
less detailed than, the information found in MS-DOS Help.
 
Syntax
 
    FASTHELP [command]
 
    [command] /?
 
Parameter
 
command
    Specifies the name of the command about which you want information. If
    you do not specify a command name, the FASTHELP command lists and
    briefly describes every command provided with MS-DOS 6.
 
Related Command
 
For information about MS-DOS Help, see the <HELP> command.
 
----------------------------------------------------------------------------
                               FASTHELP--Note
 
You can use FASTHELP to get online Help for a command in two ways. You can
specify the name of the command on the FASTHELP command line, or you can
type the name of the command and the /? switch at the command prompt. For
example, you can type either of the following commands to get information
about the XCOPY command:
 
    fasthelp xcopy
 
    xcopy /?
 
The second command is slightly faster.
 
----------------------------------------------------------------------------
                                  FASTOPEN
 
Starts the Fastopen program, which improves performance on computers with
large directories. Fastopen decreases the amount of time that MS-DOS takes
to open frequently used files. Do not use this command when Windows is
running.
 
Fastopen tracks the location of files on a hard disk and stores the
information in memory for fast access.
 
Syntax
 
    FASTOPEN drive:[[=]n] [drive:[[n][...]] [/X]
 
In your CONFIG.SYS file, use the following syntax:
 
    INSTALL=[[dos-drive:]dos-path]FASTOPEN.EXE drive:[[=]n]
    [drive:[[=]n][...]] [/X]
 
Warning:  To avoid losing data, do not run a defragmentation program such as
          Microsoft Defragmenter while FASTOPEN.EXE is loaded.
 
Parameters
 
[dos-drive:]dos-path
    Specifies the location of FASTOPEN.EXE.
 
drive:
    Specifies a hard disk drive for which you want Fastopen to track the
    opening of files.
 
n
    Specifies the number of files Fastopen can work with at the same time.
    Valid values for n are in the range 10 through 999. The default value is
    48.
 
Switch
 
/X
    Creates the name cache in expanded memory instead of in conventional
    memory. The name cache is an area of memory in which MS-DOS stores
    (caches) the locations and names of the files that you open. This cache
    conforms to version 4.0 of the Lotus/Intel/Microsoft Expanded Memory
    Specification (LIM EMS).
 
----------------------------------------------------------------------------
                              FASTOPEN--Notes
 
How Fastopen tracks information
 
Every time you open a file, Fastopen records its name and location in the
name cache. If you later reopen a file recorded by Fastopen, the access time
is greatly reduced.
 
Limits on using Fastopen
 
Fastopen works only on hard disks and does not work over a network. You can
use Fastopen with as many as 24 hard-disk partitions at one time. For each
partition, Fastopen can track the number of files specified by the n
parameter. The maximum number of files that Fastopen can track on all
partitions is 999.
 
You cannot run more than one copy of Fastopen at the same time. If you want
to change the Fastopen settings, you must restart MS-DOS.
 
You should not use the Fastopen command from MS-DOS Shell, because doing so
can lock up your machine.
 
Memory requirements for Fastopen
 
Fastopen requires approximately 48 bytes of memory for each file that it
tracks.
 
Adding the FASTOPEN command to your CONFIG.SYS file
 
You can add a Fastopen command to your CONFIG.SYS file by using the INSTALL
command. Use this technique when you do not want to start Fastopen from the
MS-DOS command line or from your AUTOEXEC.BAT file.
 
----------------------------------------------------------------------------
                             FASTOPEN--Example
 
If you want MS-DOS to track the location of as many as 100 files on drive C,
add the following line to your CONFIG.SYS file:
 
    install=c:\dos\fastopen.exe c:=100
 
----------------------------------------------------------------------------
                                     FC
 
Compares two files and displays the differences between them.
 
Syntax
 
To make an ASCII comparison, use the following syntax:
 
    FC [/A] [/C] [/L] [/LBn] [/N] [/T] [/W] [/nnnn][drive1:][path1]filename1
    [drive2:][path2]filename2
 
To make a binary comparison, use the following syntax:
 
    FC /B [drive1:][path1]filename1 [drive2:][path2]filename2
 
Parameters
 
[drive1:][path1]filename1
    Specifies the location and name of the first file you want to compare.
 
[drive2:][path2]filename2
    Specifies the location and name of the second file you want to compare.
 
Switches
 
/A
    Abbreviates the output of an ASCII comparison. Instead of displaying all
    the lines that are different, FC displays only the first and last line
    for each set of differences.
 
/C
    Ignores the case of letters.
 
/L
    Compares the files in ASCII mode. FC compares the two files line by line
    and attempts to resynchronize the files after finding a mismatch. This
    is the default mode for comparing files that do not have extensions of
    .EXE, .COM, .SYS, .OBJ, .LIB, or .BIN.
 
/LBn
    Sets the number of lines for the internal line buffer. The default
    length of the line buffer is 100 lines. If the files being compared have
    more than this number of consecutive differing lines, FC cancels the
    comparison.
 
/N
    Displays the line numbers during an ASCII comparison.
 
/T
    Does not expand tabs to spaces. The default behavior is to treat tabs as
    spaces, with stops at each eighth character position.
 
/W
    Compresses white space (tabs and spaces) during the comparison. If a
    line contains many consecutive spaces or tabs, the /W switch treats
    these characters as a single space. When used with the /W switch, FC
    ignores (and does not compare) white space at the beginning and end of a
    line.
 
/nnnn
    Specifies the number of consecutive lines that must match before FC
    considers the files to be resynchronized. If the number of matching
    lines in the files is less than this number, FC displays the matching
    lines as differences. The default value is 2.
 
/B
    Compares the files in binary mode. FC compares the two files byte by
    byte and does not attempt to resynchronize the files after finding a
    mismatch. This is the default mode for comparing files that have
    extensions of .EXE, .COM, .SYS, .OBJ, .LIB, or .BIN.
 
----------------------------------------------------------------------------
                                 FC--Notes
 
Reporting differences between files for an ASCII comparison
 
When you use FC for an ASCII comparison, MS-DOS reports differences between
two files by displaying the name of the first file, followed by the last
line to match in both files, followed by the lines from filename1 that
differ between the files, followed by the first line to match in both files.
MS-DOS then displays the name of the second file, followed by the last line
to match, followed by the lines from filename 2 that differ, followed by the
next line to match.
 
Using the /B switch for binary comparisons
 
MS-DOS uses the following format to report mismatches found during a binary
comparison:
 
    xxxxxxxx: yy zz
 
The value of xxxxxxxx specifies the relative hexadecimal address for the
pair of bytes, measured from the beginning of the file. Addresses start at
00000000; the hexadecimal values for yy and zz represent the mismatched
bytes from filename1 and filename2, respectively.
 
Using wildcards
 
You can use wildcards (* and ?) in either of the filenames you specify with
the FC command. If you use a wildcard in filename1, FC compares all the
specified files to the file specified by filename2. If you use a wildcard in
filename2, FC uses the corresponding value from filename1.
 
How FC uses memory
 
When comparing ASCII files, FC uses an internal buffer (large enough to hold
100 lines) as storage. If the files are larger than the buffer, FC compares
what it can load into the buffer. If FC does not find a match in the loaded
portions of the files, it stops and displays the following message:
 
    Resynch failed. Files are too different.
 
When comparing binary files that are larger than available memory, FC
compares both files completely, overlaying the portions in memory with the
next portions from the disk. The output is the same as that for files that
fit completely in memory.
 
----------------------------------------------------------------------------
                                FC--Examples
 
Suppose you want to make an ASCII comparison of two text files that are
named MONTHLY.RPT and SALES.RPT, and you want to display the results in
abbreviated format. To make this comparison, type the following command:
 
    fc /a monthly.rpt sales.rpt
 
To make a binary comparison of two batch files named PROFITS.BAT and
EARNINGS.BAT, type the following command:
 
    fc /b profits.bat earnings.bat
 
The results of this command will be similar to the following:
 
    00000002: 72 43
    00000004: 65 3A
    0000000E: 56 92
    00000012: 6D 5C
    00000013: 0D 7C
    00000014: 0D 0A
    00000015: 0A 0D
    0000001E: 43 7A
    0000001F: 09 0A
    00000022: 72 44
         ...
         ...
         ...
    000005E0: 00 61
    000005E1: 00 73
    000005E2: 00 73
    000005E3: 00 69
    000005E4: 00 67
    000005E5: 00 6E
    000005E6: 00 6D
    000005E7: 00 65
    000005E8: 00 6E
    FC: EARNINGS.BAT longer than PROFITS.BAT
 
If the PROFITS.BAT and EARNINGS.BAT files were identical, FC would display
the following message:
 
    FC: no differences encountered
 
To compare every .BAT file in the current directory with the file NEW.BAT,
type the following command:
 
    fc *.bat new.bat
 
To compare the file NEW.BAT on drive C with the file NEW.BAT on drive D,
type the following command.
 
    fc c:new.bat d:*.bat
 
To compare each batch file in the root directory on drive C to the file with
the same name in the root directory on drive D, type the following command:
 
    fc c:\*.bat d:\*.bat
 
----------------------------------------------------------------------------
                                    FCBS
 
Specifies the number of file control blocks (FCBs) that MS-DOS can have open
at the same time. You can use this command only in your CONFIG.SYS file.
 
A file control block is a data structure that stores information about a
file.
 
Syntax
 
    FCBS=x
 
Parameter
 
x
    Specifies the number of file control blocks that MS-DOS can have open at
    one time. Valid values for x are in the range 1 through 255. The default
    value is 4.
 
----------------------------------------------------------------------------
                                FCBS--Notes
 
Limitation on opening files
 
If a program tries to open more than x files by using file control blocks,
MS-DOS might close the files that were opened earlier.
 
Recommended use of the FCBS command
 
You should use the FCBS command only if a program requires you to do so.
Most newer programs do not require file control blocks. However, some older
programs might require you to use the FCBS command in your CONFIG.SYS file.
 
Many programs use file handles. You can specify the number of file handles
available using the <FILES> command.
 
----------------------------------------------------------------------------
                               FCBS--Example
 
To specify that MS-DOS can have up to eight file control blocks open at the
same time, add the following line to your CONFIG.SYS file:
 
    fcbs=8
 
----------------------------------------------------------------------------
                                   FDISK
 
Starts the Fdisk program, which configures a hard disk for use with MS-DOS.
 
Fdisk displays a series of menus to help you partition your hard disk(s) for
MS-DOS.
 
Syntax
 
To start the Fdisk program, use the following syntax:
 
    FDISK
 
To display partition information without starting the Fdisk program, use the
following syntax:
 
    FDISK /STATUS
 
Switch
 
/STATUS
    Displays an overview of the partition information of your computer's
    hard disk(s), without starting the Fdisk program.

----------------------------------------------------------------------------
                                FDISK--Notes
 
Using Fdisk to partition a hard disk
 
You can use Fdisk for the following tasks:
 
  Creating a primary MS-DOS partition
 
  Creating an extended MS-DOS partition
 
  Setting a partition to active
 
  Deleting a partition
 
  Displaying partition data
 
  Selecting the next hard disk for partitioning, if a system has multiple
   hard disks
 
CAUTION:  Do not experiment with Fdisk. If you accidently delete a drive or
          partition, you will lose data from your hard disk.
 
Viewing partition information quickly and easily
 
To display an overview of your computer's partition information without
having to start the Fdisk program, use the /STATUS switch. If the /STATUS
switch doesn't provide enough detail about your hard disk, then start the
Fdisk program without the /STATUS switch and choose option 4.
 
Changing the size of a partition
 
To change the size of a partition, you must actually delete the partition
and create a new one with a different size.
 
Maximum partition size
 
The maximum partition size is 2 gigabytes.
 
CAUTION:  Deleting a partition deletes all the data stored on that
          partition.
 
Using Fdisk with SUBST
 
Fdisk does not work on a drive formed by using the SUBST command.
 
Limits of Fdisk
 
Fdisk does not work on a network or an Interlnk drive. Fdisk works only on
hard disks physically installed on your computer.
 
Fdisk and Compressed Drives
 
If your computer includes compressed drives, Fdisk does not display
information about those drives. A compressed disk drive exists on your
physical disk as a hidden, read-only system file called a compressed volume
file (CVF). DoubleSpace associates the CVF with a drive letter; you can then
use the files stored in that CVF. However, to Fdisk, the compressed volume
file is not a separate drive; it is a file just like any other file. For
more information about compressed drives, see the chapter "Freeing Disk
Space" in the MS-DOS 6 User's Guide.

----------------------------------------------------------------------------
                                   FILES
 
Specifies the number of files that MS-DOS can access at one time. You can
use this command only in your CONFIG.SYS file.
 
Syntax
 
    FILES=x
 
Parameter
 
x
    Specifies the number of files that MS-DOS can access at one time. Valid
    values for x are in the range 8 through 255. The default value is 8.
 
----------------------------------------------------------------------------
                                FILES--Note
 
Although the default setting for the x parameter is 8, some programs require
a larger value. A typical setting is 30.
 
The value you set for FILES may not be the only determining factor in how
many files a program can have open at a time. The design of the program may
limit how many files it can have open.
 
----------------------------------------------------------------------------
                               FILES--Example
 
To specify that MS-DOS can access up to 20 files at one time, add the
following line to your CONFIG.SYS file:
 
    files=20
 
----------------------------------------------------------------------------
                                    FIND
 
Searches for a specific string of text in a file or files.
 
After searching the specified files, FIND displays any lines of text that
contain the specified string.
 
Syntax
 
    FIND [/V] [/C] [/N] [/I] "string" [[drive:][path]filename[...]]
 
Parameters
 
"string"
    Specifies the group of characters you want to search for. You must
    enclose the text for string in quotation marks.
 
[drive:][path]filename
    Specifies the location and name of the file in which to search for the
    specified string.
 
Switches
 
/V
    Displays all lines not containing the specified string.
 
/C
    Displays only a count of the lines that contain the specified string.
 
/N
    Precedes each line with the file's line number.
 
/I
    Specifies that the search is not to be case-sensitive.
 
----------------------------------------------------------------------------
                                FIND--Notes
 
Specifying a string
 
Unless you specify the /I switch, FIND searches for exactly what you specify
for string. For example, to the FIND command the characters "a" and "A" are
different. If you were to use the /I switch, however, FIND would ignore case
and search for "a" and "A" as if they were the same character.
 
If the string you want to search for contains quotation marks, you must use
two quotation marks for each quotation mark contained within the string.
 
Using FIND as a filter
 
If you omit a filename, FIND acts as a filter, taking input from the MS-DOS
standard source (usually the keyboard, a pipe, or a redirected file) and
displaying any lines that contain the string.
 
Using wildcards with FIND
 
You cannot use wildcards (* and ?) in filenames or extensions that you
specify with the FIND command. To search for a string in a set of files you
specify with wildcards, you can use the FIND command in a FOR command.
 
Using the /V or /N switch with the /C switch
 
If you specify the /C and /V switches in the same command, FIND displays a
count of the lines that do not contain the specified string. If you specify
the /C and /N switches in the same command, FIND ignores the /N switch.
 
Using FIND in files with carriage returns
 
The FIND command does not recognize carriage returns. When you use FIND to
search for text in a file that includes carriage returns, you must limit the
search string to text that can be found between carriage returns--that is, a
string that is not likely to be interrupted by a carriage return. For
example, FIND does not report a match for the string "tax file" wherever a
carriage return occurs between the word "tax" and the word "file".
 
FIND exit codes
 
The following list shows each exit code and a brief description of its
meaning:
 
0
    The search was completed successfully and at least one match was found.
 
1
    The search was completed successfully, but no matches were found.
 
2
    The search was not completed successfully. In this case, an error
    occurred during the search, and FIND cannot report whether any matches
    were found.
 
You can use the ERRORLEVEL parameter on the <If> command line in a batch
program to process exit codes returned by FIND.
 
----------------------------------------------------------------------------
                               FIND--Examples
 
To display all lines from the file PENCIL.AD that contain the string "Pencil
Sharpener", type the following command:
 
    find "Pencil Sharpener" pencil.ad
 
To find a string that contains text within quotation marks, you must enclose
the entire string in quotation marks and, in addition, use two quotation
marks for each quotation mark contained within the string, as shown in the
following example:
 
    find "The scientists labeled their paper ""for discussion only."" It is
    not a final report." report.doc
 
If you want to search for a set of files, you can use the FIND command with
the FOR command. The following command uses this method to search the
current directory for files that have the extension .BAT; in each file
found, the command searches for the string "PROMPT":
 
    for %f in (*.bat) do find "PROMPT" %f
 
Suppose you want FIND to search your hard disk to find and display the
filenames on drive C that contain the string "CPU". To do this, you can use
the pipe (|) to direct the results of a DIR command to FIND, as shown in the
following example:
 
    dir c:\ /s /b | find "CPU"
 
Before using a pipe for redirection, you should set the TEMP environment
variable in your AUTOEXEC.BAT file.
 
Since FIND searches are case-sensitive and since DIR produces uppercase
output, you must either type the string "CPU" in uppercase letters or use
the /I switch with FIND.
 
----------------------------------------------------------------------------
                                    FOR
 
Runs a specified command for each file in a set of files. You can use this
command in batch programs or at the command prompt.
 
Syntax
 
To use FOR in a batch program, use the following syntax:
 
    FOR %%variable IN (set) DO command [command-parameters]
 
To use FOR from the command prompt, use the following syntax:
 
    FOR %variable IN (set) DO command [command-parameters]
 
Parameters
 
%%variable or %variable
    Represents a replaceable variable. The FOR command replaces %%variable
    (or %variable) with each text string in the specified set until the
    command (specified in the command parameter) processes all the files.
    Use %%variable to carry out the FOR command within a batch program. Use
    %variable to carry out FOR from the command prompt.
 
(set)
    Specifies one or more files or text strings that you want to process
    with the specified command. The parentheses are required.
 
command
    Specifies the command that you want to carry out on each file included
    in the specified set.
 
command-parameters
    Specifies any parameters or switches that you want to use with the
    specified command (if the specified command uses any parameters or
    switches).
 
----------------------------------------------------------------------------
                                 FOR--Notes
 
Using the IN and DO keywords
 
IN and DO are not parameters, but they are required in the FOR command. If
you omit either of these keywords, MS-DOS displays an error message.
 
Using the replaceable variable
 
To avoid confusion with the batch parameters %0 through %9, you can use any
character for variable except the numerals 0 through 9. For simple batch
programs, a single character such as %%F may be all that is necessary.
 
You can use multiple values for variable in complex batch programs to
distinguish different replaceable variables. However, you cannot nest (add)
multiple FOR commands on the same command line.
 
Specifying a group of files
 
The set parameter can represent a single group of files or several groups of
files. You can use wildcards (* and ?) to specify a file set. The following
are valid file sets:
 
    (*.doc)
 
    (*.doc *.txt *.me)
 
    (jan*.doc jan*.rpt feb*.doc feb*.rpt)
 
    (ar??1991.* ap??1991.*)
 
When you use the FOR command, the first value in set replaces %%variable (or
%variable) and MS-DOS carries out the specified command in order to process
this value; this continues until MS-DOS has processed all the files (or
groups of files) that correspond to the value (or values) in set.
 
----------------------------------------------------------------------------
                               FOR--Examples
 
Suppose you want to use the TYPE command to display the contents of all the
files in the current directory that have the extension .DOC or .TXT. To do
this and to use the replaceable variable %F, type the following command at
the command prompt:
 
    for %f in (*.doc *.txt) do type %f
 
In this example, each file that has the .DOC or .TXT extension in the
current directory is substituted for the %F variable until the contents of
every file are displayed. To use this command in a batch file, you would
replace every occurrence of %F with %%F. Otherwise, MS-DOS ignores the
variable and displays an error message.
 
MS-DOS supports command switches, pipes, and redirection that you may want
to use with the specified command. For example, to redirect the output of
the previous example to PRN (the default printer port), you would type the
following command:
 
    for %f in (*.doc *.txt) do type %f > prn:
 
----------------------------------------------------------------------------
                                   FORMAT
 
Formats a disk for use with MS-DOS.
 
The FORMAT command creates a new root directory and file allocation table
for the disk. It can also check for bad areas on the disk, and it can delete
all data on the disk. In order for MS-DOS to be able to use a new disk, you
must first use this command to format the disk.
 
Syntax
 
    FORMAT drive: [/V[:label]] [/Q] [/U] [/F:size][/B|/S] [/C]
 
    FORMAT drive: [/V[:label]] [/Q] [/U] [/T:tracks /N:sectors] [/B|/S]
    [/C]
 
    FORMAT drive: [/V[:label]] [/Q] [/U] [/1] [/4] [/B|/S] [/C]
 
    FORMAT drive: [/Q] [/U] [/1] [/4] [/8] [/B|/S] [/C]
 
Warning:  Do not format a floppy disk at a size higher than it was designed
          for. For more information, see <Format--Notes>.
 
Parameter
 
drive:
    Specifies the drive containing the disk you want to format. You must
    specify a drive parameter. If you do not specify any of the following
    switches, FORMAT uses the drive type to determine the default format for
    the disk.
 
    If the disk was previously formatted and you do not use the /U switch,
    the old file allocation table and root directory are saved to allow
    unformatting of the disk if necessary. If you realize that you formatted
    the wrong disk, use the <UNFORMAT> command as soon as possible.
 
Switches
 
/V:label
    Specifies the volume label. A volume label identifies the disk and can
    be a maximum of 11 characters. If you omit the /V switch or use it
    without specifying a volume label, MS-DOS prompts you for the volume
    label after the formatting is completed. If you format more than one
    disk by using one FORMAT command, all of the disks will be given the
    same volume label. The /V switch is not compatible with the /8 switch.
    For more information about disk volume labels, see the DIR, LABEL, and
    VOL commands.
 
/Q
    Specifies a quick format of a disk. With this switch, FORMAT deletes the
    file allocation table (FAT) and the root directory of a previously
    formatted disk, but does not scan the disk for bad areas. Use the /Q
    switch to format only previously formatted disks that you know are in
    good condition.
 
/U
    Specifies an unconditional format of a disk. Unconditional formatting
    destroys all existing data on a disk and prevents you from later
    "unformatting" the disk. You should use /U if you have received read and
    write errors during use of a disk. For information about unformatting a
    disk, see the UNFORMAT command.
 
/F:size
    Specifies the size of the floppy disk to format. When possible, use this
    switch instead of the /T and /N switches. Use one of the following
    values for size:
 
    160 (or 160K or 160KB)
       160K, single-sided, double-density, 5.25-inch disk
 
    180 (or 180K or 180KB)
       180K, single-sided, double-density, 5.25-inch disk
 
    320 (or 320K or 320KB)
       320K, double-sided, double-density, 5.25-inch disk
 
    360 (or 360K or 360KB)
       360K, double-sided, double-density, 5.25-inch disk
 
    720 (or 720K or 720KB)
       720K, double-sided, double-density, 3.5-inch disk
 
    1200 (or 1200K or 1200KB or 1.2 or 1.2M or 1.2MB)
       1.2-MB, double-sided, quadruple-density, 5.25-inch disk
 
    1440 (or 1440K or 1440KB or 1.44 or 1.44M or 1.44MB)
       1.44-MB, double-sided, quadruple-density, 3.5-inch disk
 
    2880 (or 2880K or 2880KB or 2.88 or 2.88M or 2.88MB)
       2.88-MB, double-sided, extra-high-density, 3.5-inch disk
 
/B
    Reserves space for the system files IO.SYS and MSDOS.SYS (as hidden
    files) on a newly formatted disk. In previous versions of MS-DOS, it was
    necessary to reserve this space before using the SYS command to copy the
    system files to the disk. This switch is maintained in MS-DOS version
    6.0 for compatibility reasons only.
 
/S
    Copies the operating system files IO.SYS, MSDOS.SYS, and COMMAND.COM
    from your system's startup drive to a newly formatted disk that you can
    use as a system disk. If FORMAT cannot find the operating system files,
    it prompts you to insert a system disk.
 
/T:tracks
    Specifies the number of tracks on the disk. When possible, use the /F
    switch instead of this switch. If you use the /T switch, you must also
    use the /N switch. These two switches provide an alternative method of
    specifying the size of the disk being formatted. You cannot use the /F
    switch with the /T switch.
 
/N:sectors
    Specifies the number of sectors per track. When possible, use the /F
    switch instead of this switch. If you use the /N switch, you must * also
    use the /T switch. These two switches provide an alternative method of
    specifying the size of the disk being formatted. You cannot use the /F
    switch with the /N switch.
 
/1
    Formats a single side of a floppy disk.
 
/4
    Formats a 5.25-inch, 360K, double-sided, double-density floppy disk on a
    1.2-MB disk drive. Some 360K drives cannot reliably read disks formatted
    with this switch. When used with the /1 switch, this switch formats a
    5.25-inch, 180K, single-sided floppy disk.
 
/8
    Formats a 5.25-inch disk with 8 sectors per track. This switch formats a
    floppy disk to be compatible with MS-DOS versions earlier than 2.0.
 
/C
    Retests bad clusters. By default, if a drive contains clusters that have
    been marked as "bad", FORMAT does not retest the clusters; it simply
    leaves them marked "bad". Use the /C switch if you want FORMAT to retest
    all bad clusters on the drive. (In previous versions of MS-DOS, FORMAT
    always retested any bad clusters.)
 
Related Command
 
For information about restoring disks after using the FORMAT command, see
the <UNFORMAT> command.
 
----------------------------------------------------------------------------
                               FORMAT--Notes
 
Formatting a floppy disk
 
Do not format a floppy disk at a size higher than it was designed for. For
example, do not format a 360K floppy disk at 1.2MB.
 
Also, if you use the FORMAT command without specifying the size of the
floppy disk, MS-DOS will format the floppy disk at the disk capacity of the
disk drive. Thus, if you format a floppy disk without specifying the size,
be careful not to use a floppy disk smaller than the capacity of the disk
drive.
 
Typing a volume label
 
After formatting a floppy disk, FORMAT displays the following message:
 
    Volume label (11 characters, ENTER for none)?
 
The volume label can be a maximum of 11 characters (including spaces). If
you do not want your disk to have a volume label, press ENTER. For
information about volume labels, see the LABEL command.
 
Formatting a hard disk
 
When you use the FORMAT command to format a hard disk, MS-DOS displays a
message similar to the following before attempting to format the hard disk:
 
    WARNING, ALL DATA ON NON-REMOVABLE DISK
    DRIVE x: WILL BE LOST!
    Proceed with Format (Y/N)?_
 
To format the hard disk, press Y; if you do not want to format the disk,
press N.
 
FORMAT messages
 
When formatting is complete, MS-DOS displays messages showing the total disk
space, any space marked as defective, the total space used by the operating
system (if you used the /S or /B switch), and the space available for your
files.
 
Safe formatting
 
If you do not specify the /U switch or a switch that reformats the disk to a
different size, FORMAT performs a "safe" format. It clears the file
allocation table and root directory of the disk but does not delete any
data. You can then use the UNFORMAT command to recover the disk if you did
not intend to format the disk. FORMAT also checks each sector on the disk to
ensure that the sector can properly store data. If it locates a sector that
cannot store data, FORMAT marks that sector to prevent MS-DOS from using
it.
 
If you specify the /U switch or any switch that changes the size of the
disk, FORMAT performs an unconditional format by deleting all data on the
disk.
 
Quick formatting
 
You can speed up the formatting process by using the /Q switch. Use this
switch only if you have not received read or write errors on your disk. You
can speed up the process even more by using both the /Q and /U switches. If
you use the /U switch, FORMAT does not save the information necessary to
later unformat the disk.
 
Formatting a new disk
 
When you use FORMAT to format a disk that has never been formatted, specify
the /U switch to minimize formatting time.
 
Using format with a SUBST drive or a network drive
 
You should not use the FORMAT command on a drive prepared by using the SUBST
command. You cannot format disks over a network or an Interlnk drive.
 
FORMAT exit codes
 
The following list shows each exit code and a brief description of its
meaning:
 
0
    The format operation was successful.
 
3
    The user pressed CTRL+C or CTRL+BREAK to stop the process.
 
4
    A fatal error occurred (any error other than 0, 3, or 5).
 
5
    The user pressed N in response to the prompt "Proceed with Format
    (Y/N)?" to stop the process.
 
You can check these exit codes by using the ERRORLEVEL condition with the IF
batch command. For an example of a batch program that supports ERRORLEVEL
conditions, see the <CHOICE> command.

----------------------------------------------------------------------------
                              FORMAT--Examples
 
To format a new floppy disk in drive A using the default size, type the
following command:
 
    format a:
 
To perform a quick format on a previously formatted disk in drive A, type
the following command:
 
    format a: /q
 
To format a floppy disk in drive A, completely deleting all data on the
disk, type the following command:
 
    format a: /u
 
To format a 360K floppy disk in drive A and copy the operating system files
to the disk to make it a system disk, type the following command:
 
    format a: /f:360 /s
 
To format a floppy disk in drive A and assign to it the volume label "DATA",
type the following command:
 
    format a: /v:DATA
                                      
