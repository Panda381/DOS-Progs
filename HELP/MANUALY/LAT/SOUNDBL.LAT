
°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°
°°                                                                           °°
°°                               Zvukov‚ karty                               °°
°°                                                                           °°
°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°


                                     Adlib
                                    -------

ADLIB  syntetiz tor  je  sestaven  z  oscil toru a gene toru ob lky. Oscil tor,
gener tor ob lky a ovladaŸ £rovnØ jsou spojeny do jednoho celku v "oper tor":

     ÚÄÄÄÄÄÄÄÄÄÄÄ¿  ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿  ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
     ³ oscil tor ÃÄ>³ gener tor ob lky ÃÄ>³ ovladaŸ £rovnØ ÃÄÄ> vìstup
     ÀÄÄÄÄÄÄÄÄÄÄÄÙ  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Karta  ADLIB  obsahuje  18  oper tor…  spojenìch  do  p r…. Oper tory mohou bìt
zkombinob ny tıemi r…znìmi zp…soby:

    1.- FrekvenŸnØ  modulovanì  (FM)  syntez tor pou§¡v  dva oper tory v s‚rii.
        Prvn¡ oper tor (modul tor) moduluje druhì oper tor (nosnou).

                                ÚÄÄÄÄÄÄÄÄÄÄÄÄÄ¿  ÚÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
                frekvenŸnØ      ³  oper tor   ³  ³  oper tor   ³
                modulovan       ³      1      ÃÄ>³      2      ÃÄ> vìstup
                synt‚za         ³ (modul tor) ³  ³   (nosn )   ³
                                ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÙ


    2.- Aditivn¡  syntez tor  pou§¡v   dva  oper tory spojen‚ paralelnØ, jejich
        vìstupy se seŸ¡taj¡. Tato metoda nen¡ tak zaj¡mav  jako FM synt‚za, ale
        m…§e generovat kvalitn¡ varhann¡ zvuky.

                                ÚÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
                                ³  oper tor   ³
                                ³      1      ÃÄÄ¿
                                ³             ³  ³
                aditivn¡        ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  ³
                synt‚za                          ÃÄ> vìstup
                                ÚÄÄÄÄÄÄÄÄÄÄÄÄÄ¿  ³
                                ³  oper tor   ³  ³
                                ³      2      ÃÄÄÙ
                                ³             ³
                                ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

    3.- Kompozitn¡  sinusovì  syntez tor  (CSW) m…§e bìt pou§¡v n ke generov n¡
        ıeŸi  nebo jinìch podobnìch zvuk… pıehr v n¡m vçech 9 hlas… samostatnØ.
        Pıi  pou§it¡ t‚to metody nem…§e generovat karta § dn‚ dalç¡ zvuky. Tato
        metoda  zde  nen¡  popisov na, proto§e jin‚ metody umo§åuj¡ kvalitnØjç¡
        generov n¡ ıeŸi.


ADLIB  produkuje  buÔ  9  melodickìch zvuk… nebo 6 melodickìch zvuk… a 5 bic¡ch
n stroj…. Pro 9 melodickìch zvuk… jsou oper tory seskupeny po p rech. Pro m¢d s
bic¡mi n stroji jsou oper tory uspoı d ny takto:

         0 a§ 5: 6 melodickìch n stroj… (12 oper tor…)
           6:    1 basovì buben BD (Bass Drum) (2 oper tory)
           7:    1 malì buben SD (Snare Drum) (1 oper tor)
           8:    1 stıedn¡ buben TT (Tom-Tom) (1 oper tor)
           9:    1 Ÿinel CY (Cymbal) (1 oper tor)
          10:    1 Hi-Hat HH (1 oper tor)

Proto§e ADLIB m  pouze 9 frekvenŸ¡ch registr…, Ÿinel a Hi-Hat jsou pevn‚.

V  m¢du  bic¡ch  n stroj…  je  k vytv ıen¡ zvuk… pou§it çumovì gener tor. Tento
çumovì gener tor pou§¡v  frekvenŸn¡ informace hlas… 7 a 8 (malì buben a stıedn¡
buben) a vlastn¡ f zovì vìstup. Nejlepç¡ pomØr sign l… je 3:1 (frekvence mal‚ho
bubnu = 3 * frekvence stıedn¡ho bubnu).


ADLIB  pou§¡v  n sleduj¡c¡ b zov‚ adresy port… (BASE): 218h, 288h, 318h a 388h.
ImplicitnØ je pou§¡v na adresa 388h.

BASE + 00h: (z pis) indexovì registr (zvol¡ se Ÿ¡slo registru)
            (Ÿten¡) stavovì registr
                     bit 5: 1=dokonŸeno Ÿasov n¡ ŸasovaŸe T2
                     bit 6: 1=dokonŸeno Ÿasov n¡ ŸasovaŸe T1
                     bit 7: 1=pıeruçen¡ IRQ (dokonŸeno Ÿasov n¡ T2 nebo T1)

BASE + 01h: (z pis) datovì registr (viz d le)

Nejdı¡ve  se do indexov‚ho registru ulo§¡ adresa registru, potom se do datov‚ho
registru  ulo§¡ data urŸen  pro tento registr. Po z pisu do indexov‚ho registru
je  nutno  Ÿekat po dobu 3.3 ?s, po z pisu do datov‚ho registru 23 ?s. Nejlepç¡
je  prov dØt  Ÿten¡ stavov‚ho registru ve smyŸce: 6 Ÿten¡ po z pisu indexu a 36
Ÿten¡ po z pisu dat.

Registry:
         01h: bit 0 a§ bit 4: testovac¡ registr (mus¡ bìt v§dy = 0)
              bit 5: 1=povolena volba form tu vln podle registr… E0h-F5h
                     0=vlny maj¡ norm ln¡ sinusovì pr…bØh

         02h: nastaven¡ Ÿ¡taŸe 1 (rozliçen¡ 80 ?s)
               Po ukonŸen¡ Ÿ¡t n¡ jsou Ÿ¡taŸe opØt nastaveny stejnìm Ÿ¡slem.

         03h: nastaven¡ Ÿ¡taŸe 2 (rozliçen¡ 320 ?s)

         04h: bit 0: 1=start ŸasovaŸe T1 (0=ŸasovaŸ vypnutì)
              bit 1: 1=start ŸasovaŸe T2 (0=ŸasovaŸ vypnutì)
              bit 5: 1=pı¡znak pıeteŸen¡ od ŸasovaŸe T2 neovlivn¡ stav. reg.
              bit 6: 1=pı¡znak pıeteŸen¡ od ŸasovaŸe T1 neovlivn¡ stav. reg.
              bit 7: 1=resetov n¡ pı¡znaku pıeruçen¡ IRQ
                   Pıi nastaven¡ bitu 7 jsou vçechny ostatn¡ bity ignorov ny.

         08h: bit 6: 1=volba re§imu NOTE
                NOTE-SEL. Controls the split point of the keyboard. When 0, the
                keyboard split is the second bit from the bit 8 of the F-Number.
                When 1, the MSb of the F-Number is used.
              bit 7: 1=je re§im kompozitn¡ synt‚zy CSW

     20h-35h: ovl d n¡ oper tor… 1 a§ 18
              bit 0 a§ bit 3: faktor n soben¡ frekvence (viz n¡§e)
              bit 4: 1=mØnØn  ob lka (KSR) - vyçç¡ noty jsou kratç¡ ne§ ni§ç¡
              bit 5: 1=st l  £roveå t¢nu (pıi dobØhu se kles n¡ £rovnØ zastav¡)
              bit 6: 1=tremolo (=frekvenŸn¡ modulace)
              bit 7: 1=vibr to (=amplitudov  modulace)

                             Faktor n soben¡ frekvence:
                        ÚÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿  ÚÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿
                        ³ Ÿ¡slo ³ n sobek³  ³ Ÿ¡slo ³ n sobek³
                        ÃÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄ´  ÃÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄ´
                        ³   0   ³   1/2  ³  ³   8   ³    8   ³
                        ³   1   ³    1   ³  ³   9   ³    9   ³
                        ³   2   ³    2   ³  ³  10   ³   10   ³
                        ³   3   ³    3   ³  ³  11   ³   10   ³
                        ³   4   ³    4   ³  ³  12   ³   12   ³
                        ³   5   ³    5   ³  ³  13   ³   12   ³
                        ³   6   ³    6   ³  ³  14   ³   15   ³
                        ³   7   ³    7   ³  ³  15   ³   15   ³
                        ÀÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÙ  ÀÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÙ

     40h-55h: oper tory 1 a§ 18
              bit 0 a§ bit 5: vìstupn¡ £roveå (hlasitost)
              bit 6 a§ bit 7: stupeå sn¡§en¡ £rovnØ vyçç¡ch t¢n…

                        ÚÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
                        ³stup.³     £tlum     ³
                        ÃÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
                        ³  0  ³ -             ³
                        ³  1  ³ 1.5 dB/okt vu ³
                        ³  2  ³ 3.0 dB/okr vu ³
                        ³  3  ³ 6.0 dB/okt vu ³
                        ÀÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

     60h-75h: oper tory 1 a§ 18
              bit 0 a§ bit 3: rychlost dobØhu (vyçç¡ Ÿ¡slo=rychlejç¡ dobØh)
              bit 4 a§ bit 7: rychlost n bØhu (vyçç¡ Ÿ¡slo=rychlejç¡ n bØh)

     80h-95h: oper tory 1 a§ 18
              bit 0 a§ bit 3: rychlost uvolnØn¡ t¢nu se st lou £rovn¡ po vyp.
              bit 4 a§ bit 7: hladina st l‚ £rovnØ t¢nu (tj. bod, od kter‚ho
                              se pıi dobØhu £roveå t¢nu pıestane sni§ovat a
                              bude st l  - pomØrn‚ Ÿ¡slo maxim ln¡ hladiny)

     A0h-A8h: vìstupn¡ kan ly 1 a§ 9
              frekvenŸn¡ Ÿ¡slo t¢nu - vìçka t¢nu (ni§ç¡ch 8 bit…)

     B0h-B8h: vìstupn¡ kan ly 1 a§ 9
              bit 0 a§ bit 1: frekcenŸn¡ Ÿ¡slo (vyçç¡ 2 bity)
              bit 2 a§ bit 4: Ÿ¡slo bloku t¢nu (definuje zhruba okt vu)
              bit 5: maskov n¡ kan lu: 1=vìstup kan lu je povolen

              FrekvenŸn¡ Ÿ¡slo = Frekvence * (2^(20-Blok) / 49716 Hz

         BDh: bit 0: 1=Hi-Hat (HH) zapnut
              bit 1: 1=Ÿinel (CY) zapnut
              bit 2: 1=stıedn¡ buben (TT) zapnut
              bit 3: 1=malì buben (SD) zapnut
              bit 4: 1=velkì buben (BD) zapnut
              bit 5: 1=m¢d bic¡ch n stroj…, 0=m¢d melodickìch n stroj…
              bit 6: tremolo: 0=7 cent…, 1=14 cent… (1 cent = 1/100 semi-t¢nu)
              bit 7: vibr to: 0=1.0 dB, 1=4.8 dB

     C0h-C8h: kan ly 1 a§ 9
              bit 0: 1=aditivn¡ syntez tor, 0=frekvenŸn¡ modulace
              bit 1 a§ bit 3: zpØtnì modulaŸn¡ faktor (FeedBack Modul. Factor)

                        ÚÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿
                        ³ MULTI ³ Faktor ³
                        ÃÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄ´
                        ³   0   ³   0    ³
                        ³   1   ³  ?/16  ³
                        ³   2   ³  ?/8   ³
                        ³   3   ³  ?/4   ³
                        ³   4   ³  ?/2   ³
                        ³   5   ³   ?    ³
                        ³   6   ³  2ú?   ³
                        ³   7   ³  4ú?   ³
                        ÀÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÙ

     E0h-F5h: kan ly 1 a§ 9
              bit 0 a§ bit 1: volba form tu vln

                        ÚÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿
                        ³ WS ³ Form t vln ³
                        ÃÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄ´ /\    /\
                        ³ 00 ³ sinusovka  ³    \/    \/
                        ³ 01 ³ p…l-sinus  ³ /\    /\
                        ³ 10 ³ absol. sin.³ /\ /\ /\ /\
                        ³ 11 ³ pulsn¡ sin.³
                        ÀÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÙ


U  nØkterìch  parametr…  je jeden registr na vìstupn¡ kan l. Pro tyto parametry
m…§e  bìt  pou§ito  Ÿ¡slo  kan lu  jako  offset  registru  parametru. Pro mnoho
parametr… je sice jeden registr na oper tor, avçak adresov  mapa nen¡ spojit :

ÚÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³oper.³ 1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18 ³
ÃÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³offs.³ 00h 01h 02h 03h 04h 05h 08h 09h 0Ah 0Bh 0Ch 0Dh 10h 11h 12h 13h 14h 15h³
ÀÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

N sleduj¡c¡ dvØ tabulky ilustruj¡, kter‚ oper tory tvoı¡ spolu kan l:

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³                  melodickì m¢d                    ³
ÃÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÂÄÄÄÄÂÄÄÄÄÂÄÄÄÄÂÄÄÄÄÂÄÄÄÄÂÄÄÄÄÂÄÄÄÄ´
³kan l ³ 0  ³ 1  ³ 2  ³ 3  ³ 4  ³ 5  ³ 6  ³ 7  ³ 8  ³
ÃÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÅÄÄÄÄÅÄÄÄÄÅÄÄÄÄÅÄÄÄÄÅÄÄÄÄÅÄÄÄÄÅÄÄÄÄ´
³oper.1³ 1  ³ 2  ³ 3  ³ 7  ³ 8  ³ 9  ³ 13 ³ 14 ³ 15 ³
³oper.2³ 4  ³ 5  ³ 6  ³ 10 ³ 11 ³ 12 ³ 16 ³ 17 ³ 18 ³
ÀÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÁÄÄÄÄÁÄÄÄÄÁÄÄÄÄÁÄÄÄÄÁÄÄÄÄÁÄÄÄÄÁÄÄÄÄÙ

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³                     m¢d bic¡ch n stroj…                     ³
ÃÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÂÄÄÄÄÂÄÄÄÄÂÄÄÄÄÂÄÄÄÄÂÄÄÄÄÂÄÄÄÄÂÄÄÄÄÂÄÄÄÄÂÄÄÄÄ´
³kan l ³ 0  ³ 1  ³ 2  ³ 3  ³ 4  ³ 5  ³ BD ³ SD ³ TT ³ CY ³ HH ³
ÃÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÅÄÄÄÄÅÄÄÄÄÅÄÄÄÄÅÄÄÄÄÅÄÄÄÄÅÄÄÄÄÅÄÄÄÄÅÄÄÄÄÅÄÄÄÄ´
³oper.1³ 1  ³ 2  ³ 3  ³ 7  ³ 8  ³ 9  ³ 13 ³ 17 ³ 15 ³ 18 ³ 14 ³
³oper.2³ 4  ³ 5  ³ 6  ³ 10 ³ 11 ³ 12 ³ 16 ³    ³    ³    ³    ³
ÀÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÁÄÄÄÄÁÄÄÄÄÁÄÄÄÄÁÄÄÄÄÁÄÄÄÄÁÄÄÄÄÁÄÄÄÄÁÄÄÄÄÁÄÄÄÄÙ

Test ŸasovaŸ… pro detekci karty (neum¡ vyvolat pıeruçen¡):

    1.- zastaven¡ T1 a T2 z pisem 60h do registru 4
    2.- resetov n¡ pı¡znaku pıeruçen¡ IRQ z pisem 80h do registru 4
    3.- Ÿten¡ stavov‚ho registru, £schova stavu AND E0h
    4.- nastaven¡ ŸasovaŸe 1 na FFh z pisem FFh do registru 2
    5.- odmaskov n¡ a start ŸasovaŸe 1 z pisem 21h do registru 4
    6.- Ÿek n¡ ve smyŸce po dobu alespoå 80 ?s
    7.- Ÿten¡ stavov‚ho registru, £schova stavu AND E0h
    8.- resetov n¡ T1, T2 a IRQ jako v kroc¡ch 1 a 2
    9.- testov n¡ vìsledku obou Ÿten¡: prvn¡ Ÿten¡ m  bìt 0, druh‚ C0h.
        Pokud vìsledek operace neodpov¡d , nen¡ nainstalov na karta ADLIB

Pozn.: Tato metoda nefunguje u karty SoundBlaster.

                      Stuktura souboru banky n stroj… .BNK
                      ------------------------------------
Sekce z hlav¡:

00h: (1) verze souboru (hlavn¡ Ÿ¡slo)
01h: (1) verze souboru (vedlejç¡ Ÿ¡slo)
02h: (6) oznaŸen¡ souboru "ADLIB-"
08h: (2) poŸet pou§itìch polo§ek v seznamu
0Ah: (2) celkovì poŸet polo§ek seznamu v souboru
0Ch: (4) absolutn¡ offset v souboru zaŸ tku seznamu jmen
10h: (4) absolutn¡ offset v souboru zaŸ tku dat
14h: (8)  .... vìplå (nastaveno na nulu)
1Ch:

Z znam v sekci jmen n stroj…:

00h: (2) index do datov‚ sekce
02h: (1) pı¡znak: 0=z znam je pou§itì (jinak 1)
03h: (9) jm‚no n stroje (max. 8 znak…, doplnØno nulami)
0Ch:

Z znam v datov‚ sekci:

00h: (1) m¢d (0=melodickì, 1=bic¡ n stroj)
01h: (1) Ÿ¡slo kan lu (hlasu) - je-li m¢d bic¡ch n stroj…

modul tor
02h: (1) hladina pro sni§ov n¡ £rovnØ t¢n… s vìçkou (key scale level)
03h: (1) n sobitel frekvence
04h: (1) zpØtnì modulaŸn¡ faktor
05h: (1) rychlost n bØhu
06h: (1) hladina st l‚ho t¢nu
07h: (1) pı¡znak st l‚ho t¢nu
08h: (1) rychlost dobØhu
09h: (1) rychlost uvolnØn¡ st l‚ho t¢nu
0Ah: (1) vìstupn¡ hladina (hlasitost)
0Bh: (1) vibr to (amplitudov  modulace)
0Ch: (1) tremolo (frekvenŸn¡ modulace)
0Dh: (1) sni§ov n¡ d‚lky vyçç¡ch not pro nosnou (envelope scaling)
0Eh: (1) 0=freknvenŸn¡ synt‚za FM, 1=aditivn¡ synt‚za

nosn 
0Fh: (1) hladina pro sni§ov n¡ £rovnØ t¢n… s vìçkou (key scale level)
10h: (1) n sobitel frekvence
11h: (1) zpØtnì modulaŸn¡ faktor
12h: (1) rychlost n bØhu
13h: (1) hladina st l‚ho t¢nu
14h: (1) pı¡znak st l‚ho t¢nu
15h: (1) rychlost dobØhu
16h: (1) rychlost uvolnØn¡ st l‚ho t¢nu
17h: (1) vìstupn¡ hladina (hlasitost)
18h: (1) vibr to (amplitudov  modulace)
19h: (1) tremolo (frekvenŸn¡ modulace)
1Ah: (1) sni§ov n¡ d‚lky vyçç¡ch not pro nosnou (envelope scaling)
1Bh: (1)   nepou§ito

1Ch: (1) typ vlny pro modul tor
1Dh: (1) typ vlny pro nosnou


                                Frekvence t¢n…:
                                ---------------
ÚÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿
³nota³   1    ³   2    ³   3    ³   4    ³   5    ³   6    ³   7    ³   8    ³
ÃÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄ´
³ C  ³ 16.352 ³ 32.703 ³ 65.406 ³ 130.81 ³*261.63*³ 523.25 ³ 1046.5 ³ 2093.0 ³
³ C# ³ 17.324 ³ 34.648 ³ 69.295 ³ 138.59 ³ 277.18 ³ 554.37 ³ 1108.7 ³ 2217.5 ³
³ D  ³ 18.354 ³ 36.708 ³ 73.416 ³ 146.83 ³ 293.66 ³ 587.33 ³ 1174.7 ³ 2349.3 ³
³ D# ³ 19.445 ³ 38.890 ³ 77.781 ³ 155.56 ³ 311.13 ³ 622.25 ³ 1244.5 ³ 2489.0 ³
³ E  ³ 20.601 ³ 41.203 ³ 82.406 ³ 164.81 ³ 329.63 ³ 659.26 ³ 1318.5 ³ 2637.0 ³
³ F  ³ 21.826 ³ 43.653 ³ 87.307 ³ 174.61 ³ 349.23 ³ 698.46 ³ 1396.9 ³ 2793.8 ³
³ F# ³ 23.124 ³ 46.249 ³ 92.499 ³ 184.99 ³ 369.99 ³ 739.99 ³ 1480.0 ³ 2960.0 ³
³ G  ³ 24.499 ³ 48.999 ³ 97.998 ³ 195.99 ³ 391.99 ³ 783.99 ³ 1568.0 ³ 3136.0 ³
³ G# ³ 25.956 ³ 51.913 ³ 103.82 ³ 207.65 ³ 415.31 ³ 830.61 ³ 1661.2 ³ 3322.4 ³
³ A  ³ 27.500 ³ 55.000 ³ 110.00 ³ 220.00 ³ 440.00 ³ 880.00 ³ 1760.0 ³ 3520.0 ³
³ A# ³ 29.135 ³ 58.270 ³ 116.54 ³ 233.08 ³ 466.16 ³ 932.32 ³ 1864.7 ³ 3729.3 ³
³ B  ³ 30.867 ³ 61.735 ³ 123.47 ³ 246.94 ³ 493.88 ³ 987.77 ³ 1975.5 ³ 3951.1 ³
ÀÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÙ



                          Sound Blaster, Sound Galaxy
                          ---------------------------
SB    = Sound Blaster       (MONO, 11 kan l… FM, vzorkov n¡ do 13 kHz)
SB2   = Sound Blaster II    (MONO, 11 kan l… FM, vzorkov n¡ do 22 kHz)
SBP   = Sound Blaster PRO   (STEREO, 20 kan l… FM, vzorkov n¡ do 44 kHz,CD ROM)

BX    = Sound Galaxy BX     (MONO, 11 kan l… FM, vzorkov n¡ do 13 kHz)
NX    = Sound Galaxy NX     (MONO, 11 kan l… FM, vzorkov n¡ do 13 kHz, CD ROM)
BX2   = Sound Galaxy BX II  (MONO, 11 kan l… FM, vzorkov n¡ do 22 kHz)
NX2   = Sound Galaxy NX II  (MONO, 11 kan l… FM, vzorkov n¡ do 22 kHz, CR ROM)
NXP   = Sound Galaxy NX Pro (STEREO, 20 kan l… FM, vzorkov n¡ do 44 kHz,CD ROM)
SGP16 = Sound Galaxy PRO 16 (STEREO, 20 kan l… FM, vzorkov n¡ do 44 kHz, 16 b)

DSP = Ÿip zpracov n¡ digit ln¡ch sign l… (Digital Signal Processing Chip)

Pıenos  dat DSP m…§e bìt prov dØn buÔ pı¡mìm m¢dem (pıenos ı¡d¡ program) nebo v
m¢du  DMA  (pıenos  dat  ı¡d¡  ıadiŸ  DMA).  Po proveden¡ pıenosu DMA se vyvol 
pıeruçen¡.  V  re§imu DMA (vìstup DAC pıi norm ln¡ rychlosti) je mo§n‚ pıen çet
data  v  komprimovan‚m  form tu 1:2, 1:3 a 1:4 (nen¡ mo§n‚ v pı¡m‚m re§imu, pro
vstup  dat  a  pro zvìçenou rychlost). Prvn¡m bajtem komprimovanìch dat je v§dy
referenŸn¡ bajt (hodnota, z kter‚ se vych z¡).

DSP pou§¡v  hardwarov  pıeruçen¡ IRQ 2,3,5 nebo 7 (SB, SB2, BX, BX2, NX a NX2 -
implicitnØ  7), IRQ 2,5,7 nebo 10 (NXP - implicitnØ 7) nebo IRQ 2/9, 7, 10 nebo
11  (SGP16  -  implicitnØ  7).  B zov  adresa DSP je 220h nebo 240h (implicitnØ
220h).  DSP  pou§¡v   kan l  DMA  Ÿ¡slo  1  (BX,  BX2 a NX), kan l 1 a 3 (NX2 -
implicitnØ 1) nebo kan ly 0, 1 a 3 (NXP - implicitnØ 1).

Adresa Ÿipu DSP se detekuje prov dØn¡m funkce RESET - mus¡ bìt navr ceno 0AAh.

Vzorkovac¡ kmitoŸet:  Ÿasovac¡_konstanta = 256 - 1000/vzorkovac¡_kmitoŸet [kHz]

Rozsah rychlost¡ pro vstup (ADC):

   BX a NX ..... 4 kHz a§ 15 kHz
   BX2 a NX2 ... 4 kHz a§ 13 kHz (norm ln¡ m¢d)
                 13 kHz a§ 23 kHz (rychlì m¢d)
   NXP ......... 4 kHz a§ 23 kHz (norm ln¡ m¢d MONO)
                 23 kHz a§ 44.1 kHz (rychlì m¢d MONO)
                 2 kHz a§ 11.5 kHz (norm ln¡ m¢d STEREO)
                 11.5 kHz a§ 22.05 kHz (rychlì m¢d STEREO)

Rozsah rychlost¡ pro vìstup (DAC):

   BX a NX ..... 4 kHz a§ 23 kHz
   BX2 a NX2 ... 4 kHz a§ 23 kHz (norm ln¡ m¢d)
                 23 kHz a§ 44.1 kHz (rychlì m¢d)
   NXP ......... 4 kHz a§ 23 kHz (norm ln¡ m¢d MONO)
                 23 kHz a§ 44.1 kHz (rychlì m¢d MONO)
                 4 kHz a§ 23 kHz (norm ln¡ m¢d STEREO)
                 23 kHz a§ 44.1 kHz (rychlì m¢d STEREO)

Rychlì m¢d - DSP nepıij¡m  bØhem operace pıenosu povely. Norm ln¡ m¢d po RESET.


Game port:
----------
200h - 207h   GAME PORT (z pis/Ÿten¡)

(BASE = 220h, 240h)
---------------------
BASE + 00h (Ÿten¡)   Levì stavovì port FM
           (z pis)   Levì port FM adresov‚ho registru
BASE + 01h (Ÿten¡)   Levì datovì port FM
BASE + 02h (Ÿten¡)   Pravì stavovì port FM
           (z pis)   Pravì port FM adresov‚ho registru
BASE + 03h (Ÿten¡)   Pravì datovì port FM
BASE + 04h (z pis)   Port registru adresy Ÿipu mixeru
           (Ÿten¡)   Pouze karta SGP16: 80h = potvrzen¡ pıevzet¡ povelu mixeru
                           06h: ... (pouze SGP 16) <- zapisuje se 3Fh
                           07h: ... (pouze SGP 16) <- zapisuje se 3Fh
                           0Bh: ... (pouze SGP 16) bit 5 (mus¡ bìt pıi Ÿten¡ 0)
                           49h: ... (pouze SGP 16)

BASE + 05h (Ÿten¡/z pis) Datovì port Ÿipu mixeru

BASE + 06h (z pis)   reset DSP (01h=RESET, 00h=uvolnØn¡ RESETu)
                      - DSP  je  nutno resetovat jednou na zaŸ tku obsluhy, DSP
                        vrac¡ na Ÿtec¡m portu (BASE+0Eh) bajt AAh pro kontrolu.
                             1.- z pis 01h - proveden¡ funkce RESET
                             2.- Ÿek n¡ po dobu 3 ?s
                             3.- z pis 00h - uvolnØn¡ sign lu RESET
                             4.- Ÿek n¡ na bajt 0AAh na Ÿtec¡m datov‚m portu
                                 (odezva trv  asi 0.1 sek; 0.5 sek -> TIME-OUT)
                     Reset DSP se prov d¡ t‚§ pro vypnut¡ rychl‚ho m¢du.

BASE + 08h (Ÿten¡)   Stavovì port FM
           (z pis)   Port adresov‚ho registru FM
BASE + 09h (Ÿten¡)   Datovì port FM


BASE + 0Ah (Ÿten¡)   ¬ten¡ dat z DSP (je-li BASE+0Eh bit 7 = 1)

BASE + 0Ch (Ÿten¡)   Stav z pisov‚ho bufferu DSP (bit 7: 0=je mo§nì z pis)
           (z pis)   Z pis dat nebo povelu DSP (je-li pıi Ÿten¡ bit 7 = 0)

                     Povely:

    10h = vìstup na DAC v pı¡m‚m m¢du 8 bit… (PCM DAC) - n sleduje 1 bajt dat
          Ÿasov n¡ dat na vìstup mus¡ zajistit program (napı. pomoc¡ INT 08h)
    14h = vìstup na DAC v m¢du DMA 8 bit… (PCM DAC)
          n sleduje d‚lka dat (=poŸet bajt… - 1): 1 bajt LOW, 1 bajt HIGH
    16h = vìstup na DAC v m¢du DMA s 2-bitovou kompres¡, nen¡ referenŸn¡ bajt
          n sleduje d‚lka dat (=poŸet bajt… - 1): 1 bajt LOW, 1 bajt HIGH
    17h = vìstup na DAC v m¢du DMA s 2-bitovou kompres¡, 1. bajt je referenŸn¡
          n sleduje d‚lka dat (=poŸet bajt… - 1): 1 bajt LOW, 1 bajt HIGH
    1Ch = v¡ceblokovì vìstup na DAC v m¢du DMA 8 bit… (PCM DAC)
          Pıed  t¡mto  povelem  pıedch z¡  povel  48h, kterì nastav¡ d‚lku dat.
          Povel  1Ch  zah j¡  pıenos.  Po  ukonŸen¡ bloku nen¡ tıeba nastavovat
          znovu DSP, lze pokraŸovat dalç¡m blokem. Pıenos se ukonŸ¡ DAh.
    1Fh = v¡ceblokovì vìstup na DAC v m¢du DMA s 2-bitovou kompres¡ (ADPCM DAC)
          Pıed  t¡mto  povelem  pıedch z¡  povel  48h, kterì nastav¡ d‚lku dat.
          Povel  1Fh  zah j¡  pıenos.  Po  ukonŸen¡ bloku nen¡ tıeba nastavovat
          znovu  DSP, lze pokraŸovat dalç¡m blokem. Pıenos se ukonŸ¡ DAh. Prvn¡
          bajt prvn¡ho vys¡lan‚ho bloku je pova§ov n za referenŸn¡ bajt.

    20h = vstup dat z ADC v pı¡m‚m m¢du 8 bit… (PCM ADC) - Ÿte se 1 bajt dat
    24h = vstup z ADC v m¢du DMA 8 bit… (PCM ADC)
          n sleduje d‚lka dat (=poŸet bajt… - 1): 1 bajt LOW, 1 bajt HIGH
    2Ch = vìceblokovì vstup z ADC v m¢du DMA 8 bit… (PCM ADC)
          Pıed  t¡mto  povelem  pıedch z¡  povel  48h, kterì nastav¡ d‚lku dat.
          Povel  2Ch  zah j¡  pıenos.  Po  ukonŸen¡ bloku nen¡ tıeba nastavovat
          znovu DSP, lze pokraŸovat dalç¡m blokem. Pıenos se ukonŸ¡ DAh.

    30h = Ÿten¡ dat z MIDI v Ÿekac¡m m¢du (testuje se port BASE+0Eh)
          vypnut¡ m¢du se provede opakovanìm vysl n¡m povelu 30h
    31h = Ÿten¡ dat z MIDI v norm ln¡m m¢du (nutno povolit masku pıeruçen¡)
          Pıi  ka§d‚m  pıipraven‚m bajtu vyvol  DSP pıeruçen¡. ¬ten¡m stavov‚ho
          portu BASE+0Eh se potvrd¡ pıeruçen¡. M¢d se vypne opØt vysl n¡m 31h.
    34h = nastaven¡ Ÿekac¡ho m¢du UART Ÿten¡/z pis MIDI. N sleduj¡c¡ zapisovan 
          data  jsou  vys¡l na na MIDI, Ÿten  data jsou Ÿtena z MIDI. Tento m¢d
          lze ukonŸit pouze funkc¡ RESET DSP.
    35h = nastaven¡  pıeruçovac¡ho  m¢du  UART  Ÿten¡/z pis  MIDI.  N sleduj¡c¡
          zapisovan   data jsou vys¡l na na MIDI, Ÿten  data jsou Ÿtena z MIDI.
          Tento m¢d lze ukonŸit pouze funkc¡ RESET DSP.
    37h = stejn‚  jako povel 35h, na konci dat jsou pıid ny 2 bajty informace o
          Ÿasov‚ znaŸce
    38h = z pis bajtu na MIDI v Ÿekac¡m m¢du

    40h = nastaven¡ Ÿasovac¡ konstanty
          n sleduje 1 bajt = Ÿasovac¡_konstanta = 256 - 1000/kmitoŸet [kHz]
    48h = nastaven¡ velikosti pıen çen‚ho bloku pro DMA pıenos
          n sleduje d‚lka dat (=poŸet bajt… - 1): 1 bajt LOW, 1 bajt HIGH
          Po povelu se oŸek v  startovac¡ povel pro v¡ceblokovì pıenos 1Ch atd.

    74h = vìstup ma DAC v m¢du DMA se 4-bitovou kompres¡, nen¡ referenŸn¡ bajt
          n sleduje d‚lka dat (=poŸet bajt… - 1): 1 bajt LOW, 1 bajt HIGH
    75h = vìstup na DAC v m¢du DMA se 4-bitovou kompres¡, 1. bajt je referenŸn¡
          n sleduje d‚lka dat (=poŸet bajt… - 1): 1 bajt LOW, 1 bajt HIGH
    76h = vìstup na DAC v m¢du DMA se 3-bitovou kompres¡, nen¡ referenŸn¡ bajt
          n sleduje d‚lka dat (=poŸet bajt… - 1): 1 bajt LOW, 1 bajt HIGH
    77h = vìstup na DAC v m¢du DMA se 3-bitovou kompres¡, 1. bajt je referenŸn¡
          n sleduje d‚lka dat (=poŸet bajt… - 1): 1 bajt LOW, 1 bajt HIGH
    7Dh = v¡ceblokovì vìstup na DAC v m¢du DMA s 4-bitovou kompres¡ (ADPCM DAC)
          Pıed  t¡mto  povelem  pıedch z¡  povel  48h, kterì nastav¡ d‚lku dat.
          Povel  7Dh  zah j¡  pıenos.  Po  ukonŸen¡ bloku nen¡ tıeba nastavovat
          znovu  DSP, lze pokraŸovat dalç¡m blokem. Pıenos se ukonŸ¡ DAh. Prvn¡
          bajt prvn¡ho vys¡lan‚ho bloku je pova§ov n za referenŸn¡ bajt.
    7Fh = v¡ceblokovì vìstup na DAC v m¢du DMA s 3-bitovou kompres¡ (ADPCM DAC)
          Pıed  t¡mto  povelem  pıedch z¡  povel  48h, kterì nastav¡ d‚lku dat.
          Povel  7Fh  zah j¡  pıenos.  Po  ukonŸen¡ bloku nen¡ tıeba nastavovat
          znovu  DSP, lze pokraŸovat dalç¡m blokem. Pıenos se ukonŸ¡ DAh. Prvn¡
          bajt prvn¡ho vys¡lan‚ho bloku je pova§ov n za referenŸn¡ bajt.

    80h = tichì m¢d - po zadanì poŸet bajt… (jakoby pıi DMA) je vìstup tichì
          n sleduje d‚lka dat (=poŸet bajt… - 1): 1 bajt LOW, 1 bajt HIGH

    90h = v¡ceblokovì rychlì re§im vìstupu na DAC v m¢du DMA 8 bit… (PCM DAC)
          Pıed  t¡mto  povelem  pıedch z¡  povel  48h, kterì nastav¡ d‚lku dat.
          Povel  90h  zah j¡  pıenos.  Po  ukonŸen¡ bloku nen¡ tıeba nastavovat
          znovu DSP, lze pokraŸovat dalç¡m blokem. Pıenos se ukonŸ¡ RESET DSP.
    91h = jednoblokovì rychlì re§im vìstupu na DAC v m¢du DMA 8 bit… (PCM DAC)
          Pıed t¡mto povelem pıedch z¡ povel 48h, kterì nastav¡ d‚lku dat.
    98h = v¡ceblokovì rychlì re§im vstupu z ADC v m¢du DMA 8 bit… (PCM ADC)
          Pıed  t¡mto  povelem  pıedch z¡  povel  48h, kterì nastav¡ d‚lku dat.
          Povel  98h  zah j¡  pıenos.  Po  ukonŸen¡ bloku nen¡ tıeba nastavovat
          znovu DSP, lze pokraŸovat dalç¡m blokem. Pıenos se ukonŸ¡ RESET DSP.
    99h = jednoblokovì rychlì re§im vstupu z ADC v m¢du DMA 8 bit… (PCM ADC)
          Pıed t¡mto povelem pıedch z¡ povel 48h, kterì nastav¡ d‚lku dat.

    A8h = start  vstupu  z ADC v re§imu STEREO se zvìçenou rychlost¡ (pouze pro
          kartu NXP pıi pou§it¡ povelu 98h). Pıepnut¡ do MONO pomoc¡ RESET DSP.

    D0h = pozastaven¡ pıenosu DMA (a§ do pokraŸov n¡ D4h)
    D1h = zapnut¡ reproduktoru (na zaŸ tku vys¡l n¡ dat)
    D3h = vypnut¡ reproduktoru (po ukonŸen¡ pıenosu dat nebo pıed Ÿten¡m dat)
    D4h = pokraŸov n¡ pıenosu DMA (po pıedchoz¡m pozastaven¡ povelem D0h)
    D8h = poskytnut¡ stavu reproduktoru: Ÿten¡ vstupu -> 0=vypnut, 0FFh=zapnut
    DAh = ukonŸen¡ v¡ceblokov‚ho pıenosu dat (funkce 1Ch, 1Fh, 2Ch, 7Dh, 7Fh)

    E0h = ovØıen¡ datov‚ho portu DSP: n sleduje vysl n¡ bajtu (napı. 0AAh), mus¡
                                      navr tit tento bajt invertovanì (tedy 55h)

    E1h = poskytnut¡ verze DSP: vrac¡ 2 bajty: 1. bajt=verze, 2. bajt=podverze
                                            verze 1 = SB, BX, NX
                                                  2 = SB2, BX2, NX2
                                                  3 = SBP, NXP

BASE + 0Eh (Ÿten¡)   Stav Ÿtec¡ho bufferu DSP (bit 7: 1=jsou pıipravena data)
                     ¬ten¡m tohoto portu se potvrd¡ t‚§ po§adavek pıeruçen¡.

Pı¡klad - vysl n¡ dat pomoc¡ DMA:

    1.-  22Ch <- 0D1h  (zapnut¡ reproduktoru)
    2.-  22Ch <- 40h, 22Ch <- Ÿasovac¡_konstanta (vysl n¡ Ÿasovac¡ konstanty)
    3.-  definice obsluhy pıeruçen¡ DSP a povolen¡ pıeruçen¡
    4.-  nastaven¡ ıadiŸe DMA
    5.-  22Ch <- 14h  (m¢d DMA 8 bit… DAC), n sleduje slovo d‚lky dat - 1
    6.-  pıi ka§d‚m pıeruçen¡ opakovat kroky 4 a 5, a§ budou vçechny bloky
    7.-  z kaz pıeruçen¡
    8.-  navr cen¡ obsluhy pıeruçen¡
    9.-  22Ch <- 0D3h  (vypnut¡ reproduktoru)


Modul MIDI MPU401: (BASE = 300h nebo 330h - pouze karta SGP16)
------------------
BASE + 00h (Ÿten¡/z pis) Datovì port MPU401
BASE + 01h (Ÿten¡/z pis) Z pis povelu/stavovì port MPU401


Modul syst‚mu Microsoft Windows Sound System (SGP16): (BASE=530h,E80h,F40h,604h)
--------------------------------------------------------------------------------
BASE + 00h (z pis)   konfigurace
                        bit 0 a§ bit 2 = Ÿ¡slo kan lu DMA
                                          1 = DMA 0
                                          2 = DMA 1
                                          3 = DMA 3
                        bit 3 a§ bit 5 = Ÿ¡slo pıeruçen¡ IRQ
                                          1 = IRQ 7
                                          2 = IRQ 2 nebo IRQ 9
                                          3 = IRQ 10 (jen sbØrnice AT)
                                          4 = IRQ 11 (jen sbØrnice AT)
                        bit 6: 1=pıeruçen¡ povoleno
BASE + 01h (Ÿten¡/z pis) rezervov no
BASE + 02h (Ÿten¡/z pis) rezervov no
BASE + 03h (Ÿten¡)   verze
                    bit 0 a§ bit 5 = Ÿ¡slo verze (pro SGP 16 mus¡ bìt = 4)
                    bit 6 = pı¡znak pı¡chodu pıeruçen¡
                    bit 7 = typ desky MSS (1=sbØrnice XT, 0=sbØrnice AT ???)
                             (sbØrnice XT = nejsou povolena IRQ 8 a v¡ce)
               ¬ten¡m portu se potvrd¡ pıeruçen¡

BASE + 04h (Ÿten¡/z pis) adresa Codec (sem se zapisuje Ÿ¡slo registru)
                            0 =
                            2 = (hloubky L)
                            3 = (hloubky R)
                            4 = (vìçky L)
                            5 = (vìçky R)
                            6 = (hlasitost L)
                            7 = (hlasitost R 3fh=nula ?)
                            9 = (ı¡zen¡) - registr m¢du (5, 46h, 4)
                                  (bit0 a bit1 = povolen¡ vìstup… na kan ly ?)
                           10 = maska pıeruçen¡: bit 1: 1=pıeruçen¡ povoleno
                           12 =
                                 bit 0 a§ bit 3:
                           14 = poŸet krok… DMA k pıenosu dat HIGH (bajt…/slov)
                           15 = poŸet krok… DMA k pıenosu dat LOW (bajt…/slov)
BASE + 05h (Ÿten¡/z pis) data Codec (Ÿten¡ a z pis dat zvolen‚ho registru)
BASE + 06h (Ÿten¡/z pis) status Codec (pı¡znak pıipravenosti dat)
                           (z pis 0 = potvrzen¡ pıeruçen¡)
BASE + 07h (Ÿten¡/z pis) Direct data Codec (data pıi pı¡m‚m pı¡stupu)


FM syntetiz tor (kompatibilita s ADLIB):
----------------------------------------
388h (Ÿten¡)  stavovì port FM
     (z pis)  Port adresov‚ho registru FM
389h (Ÿten¡)  datovì port FM


                    VMP - ovladaŸ zvukov‚ karty Sound Galaxy
                    ----------------------------------------
OvladaŸ  VMP  pou§¡v   k  vol n¡  svìch  funkc¡  pıeruçen¡ INT 7Fh. Pıi pou§it¡
ovladaŸe  VMP  v  jazyku  C  je nutno vlo§it modul "VMP.H" a pıilinkovat moduly
CVMP.OBJ  (pro  vol n¡  FAR)  nebo CVMPS.OBJ (pro vol n¡ NEAR - typ SMALL). Pıi
pou§it¡ ovladaŸe VMP v Assembleru je mo§n‚ doplnit VMP.MAC (makra).

OvladaŸe zaı¡zen¡:

VAPI - (Voyetra  Application  Program  Interface)  pıehr v n¡ hudebn¡ch soubor…
       MIDI pomoc¡ interface MIDI
SAPI - (Synthesis  Application  Program  Interface)  -  pıehr v n¡ MIDI soubor…
       pomoc¡ zvukov‚ karty
AAPI - (Audio  Application  Program Interface) - obsluha nahr v n¡ a pıehr v n¡
       digit ln¡ch zvukovìch nahr vek (AUDIO)
TAPI - (Total  Application  Program  Interface)  kombinovanì ovladaŸ zahrnuj¡c¡
       vçechny 3 uveden‚ typy ovladaŸ… pro v¡cefunkŸn¡ karty

Pozor  na  zav dØn¡  ovladaŸ…  do  horn¡  pamØti  - nØkter‚ poŸ¡taŸe neumo§åuj¡
pou§¡vat DMA pıenos pro horn¡ pamØœ.


Vol n¡ funkc¡ v Assembleru:

              mov       bl,FUNKCE      ; Ÿ¡slo po§adovan‚ funkce
              mov       ax,'VM'        ; identifikace vol n¡ funkce VMP
              mov       bh,0c1h        ; identifikace vol n¡ funkce VMP
              int       7fh            ; vol n¡ po§adovan‚ funkce VMP

Funkce  VMP  uchov v  pouze registry SI, DI, BP, DS a SS:SP. VØtçinu funkc¡ VMP
je  mo§n‚  vyvol vat  opakovanØ  (napı.  z  obsluhy  pıeruçen¡  pıed  ukonŸen¡m
prov dØn¡ funkce VMP) - kromØ funkc¡ OPEN_, CLOSE_ a SETUP_AUDIO. Pro zajiçtØn¡
v¡cen sobn‚ho  vol n¡  funkc¡ DOS z VMP je nutn‚: nepou§¡vat funkce pro vstup z
kl vesnice  s  Ÿek n¡m, neprov dØt odskok do syst‚mu (funkce SHELL), nepou§¡vat
funkce  DOS velmi Ÿasto. Pı¡liçn‚ vol n¡ DOS m…§e zp…sobit zastaven¡ pıehr v n¡
modulu.

OvladaŸ VMP podporuje pıehr v n¡ zvukovìch soubor… "VOC", "WAV", "RAW" a "VOY".
"VOC"  je form t Creative Labs pro kartu Sound Blaster. Podporuje 8 bit… mono a
stereo  a  kompresi  4,  2.6  a  2  bity  ADPCM.  "WAV" je form t Microsoft pro
Multimedia  Windows. Podporuje r…znou d‚lku vzork… (8, 16 bit… atd.) a umo§åuje
jemnØjç¡  urŸen¡  vzorkovac¡ho  kmitoŸtu  ne§ "VOC". "RAW" je soubor obsahuj¡c¡
pouze  zvukov   data  bez z hlav¡, parametry je nutno nastavit. "VOY" je form t
Voyetra  Technologies. M  stejn‚ mo§nosti jako "WAV", dek¢dovac¡ metodu pou§¡v 
vçak jinou ne§ line rn¡ PCM.


Test pı¡tomnosti VMP:
---------------------
Nejdı¡ve  ovØıit,  zda je pıeruçen¡ INT 7Fh platn‚ (zda adresa nen¡ = 0), potom
volat funkci BL=17 - mus¡ bìt navr ceno AX=0.

¬asovaŸ:
-------
Aplikace by mohla po§adovat rychlejç¡ ŸasovaŸ INT 08h (IRQ 0). K tomu je urŸena
funkce BL=18 - zpØtn‚ vol n¡ obsluhy hodin.


Funkce 1: Otevıen¡ ovladaŸe VMP
--------
Vol  se pıed prvn¡m vol n¡m jin‚ funkce VMP (kromØ testu instalace). Jako prvn¡
funkce po t‚to funkci by mØla bìt vol na funkce 13 (hardware).

VSTUP:   BP = definice hodin INT 08h
                   0 = standardn¡ nastaven¡
               jinak = pou§it  hodnota pro nastaven¡ Ÿ¡taŸe hodin INT 08h
                       (tj. pokud aplikace nastavila hodiny na vyçç¡ rychlost)

VíSTUP:  AX = -300 ovladaŸ je ji§ otevıen (0=funkce OK)


Funkce 2: Uzavıen¡ ovladaŸe VMP
--------
Uzav¡r  ovladaŸ VMP - mus¡ bìt vol no pıed ukonŸen¡m aplikace.

VíSTUP:  AX = -301 ovladaŸ nen¡ otevıen


Funkce 3: Pı¡prava MIDI souboru k pıehr v n¡
--------
VSTUP:   ES:SI = ukazatel FAR na MIDI soubor naŸtenì v pamØti
VíSTUP:  AX = 0 operace OK
              -301 ovladaŸ VMP nen¡ otevıen
              -309 ovladaŸ MIDI nen¡ otevıen
              -310 soubor MIDI je ji§ otevıen
              -311 ukazatel neukazuje na soubor MIDI
              -312 prob¡h  ji§ pıehr v n¡ MIDI souboru

Funkce 4: Uzavıen¡ pıehr v n¡ MIDI souboru
--------
VíSTUP:  AX = 0 operace OK
              -301 ovladaŸ VMP nen¡ otevıen
              -309 ovladaŸ MIDI nen¡ otevıen
              -313 nen¡ otevıen soubor MIDI


Funkce 5: Start pıehr v n¡ MIDI souboru
--------
VíSTUP:  AX = 0 operace OK
              -301 ovladaŸ VMP nen¡ otevıen
              -307 prob¡h  ji§ pıehr v n¡ nebo z znam AUDIO nebo obsluha MIDI
                   (nØkter  zaı¡zen¡ neumo§åuj¡ souŸasnou obsluhu)
              -309 ovladaŸ MIDI nen¡ otevıen
              -311 data souboru MIDI byla od otevıen¡ zniŸena
              -312 prob¡h  ji§ pıehr v n¡ MIDI souboru
              -313 nen¡ otevıen soubor MIDI

Funkce 6: Stop pıehr v n¡ MIDI souboru
--------
VíSTUP:  AX = 0 operace OK
              -301 ovladaŸ VMP nen¡ otevıen
              -309 ovladaŸ MIDI nen¡ otevıen
              -313 nen¡ otevıen soubor MIDI


Funkce 7: Pı¡prava digit ln¡ho AUDIO souboru k pıehr v n¡
--------
VSTUP:   ES:SI = jm‚no AUDIO souboru ASCIIZ
         DX:CX = form t z znamu (ukazatel FAR na popisovaŸ struktury)
                   0: (4) vzorkovac¡ kmitoŸet v [Hz]
                   4: (2) d‚lka vzorku (poŸet bit…: 8 nebo 16)
                   6: (2) 0=MONO, 1=STEREO
                   8: (2) form t souboru
                             0 = VOC (Sound Blaster)
                             1 = WAV (Microsoft)
                             2 = RAW
                             3 = VOY (Voyetra)
                  10: (2) kompresn¡ algoritmus
                             0 = nen¡ komprese (line rn¡ PCM 8/12/16 bit…)
                             1 = 4-bitov  komprese VOC (Sound Blaster)
                             2 = 2.6-bitov  komprese VOC (Sound Blaster)
                             3 = 2-bitov  komprese VOC (Sound Blaster)
                             4 = 4-bitov  komprese (z 12 bit…) ADPCM (OKI)
                             5 = 4-bitov  komprese (z 12 bit…) ADPCM (CCITT)
                             8 = 8-bitov  komprese (z 12 bit…) ?LAW
                   12: (2*3) rezervov no

VíSTUP:  AX = 0 operace OK
              -301 ovladaŸ VMP nen¡ otevıen
              -302 ovladaŸ AAPI (AUDIO) nen¡ otevıen
              -303 chyba alokace DMA bufferu
              -304 form t souboru nen¡ podporov n
              -305 form t dat souboru nen¡ podporov n
              -306 nelze otevı¡t soubor pro z znam AUDIO
              -307 prob¡h  ji§ pıehr v n¡ nebo z znam AUDIO nebo obsluha MIDI
                   (nØkter  zaı¡zen¡ neumo§åuj¡ souŸasnou obsluhu)

Pokud  soubor obsahuje informace o form tu dat (VOC, WAV a VOY), jsou informace
z  popisovaŸe  form tu  ignorov ny,  informace  budou doplnØny podle skuteŸn‚ho
obsahu souboru. Pro soubor RAW je nutno tyto informace nastavit.


Funkce 8: Pı¡prava digit ln¡ho AUDIO souboru k z znamu
--------
VSTUP:   ES:SI = jm‚no AUDIO souboru ASCIIZ
         DX:CX = form t z znamu (ukazatel FAR na popisovaŸ struktury)
                   0: (4) vzorkovac¡ kmitoŸet v [Hz]
                   4: (2) d‚lka vzorku (poŸet bit…: 8 nebo 16)
                   6: (2) 0=MONO, 1=STEREO
                   8: (2) form t souboru
                             0 = VOC (Sound Blaster)
                             1 = WAV (Microsoft)
                             2 = RAW
                             3 = VOY (Voyetra)
                  10: (2) kompresn¡ algoritmus
                             0 = nen¡ komprese (line rn¡ PCM 8/12/16 bit…)
                             1 = 4-bitov  komprese VOC (Sound Blaster)
                             2 = 2.6-bitov  komprese VOC (Sound Blaster)
                             3 = 2-bitov  komprese VOC (Sound Blaster)
                             4 = 4-bitov  komprese (z 12 bit…) ADPCM (OKI)
                             5 = 4-bitov  komprese (z 12 bit…) ADPCM (CCITT)
                             8 = 8-bitov  komprese (z 12 bit…) ?LAW
                   12: (2*3) rezervov no

VíSTUP:  CY = chyba
         NC = operace OK
         AX = 0 operace OK
              -301 ovladaŸ VMP nen¡ otevıen
              -302 ovladaŸ AAPI (AUDIO) nen¡ otevıen
              -303 chyba alokace DMA bufferu
              -304 form t souboru nen¡ podporov n
              -305 form t dat souboru nen¡ podporov n
              -306 nelze otevı¡t soubor pro z znam AUDIO
              -307 prob¡h  ji§ pıehr v n¡ nebo z znam AUDIO nebo obsluha MIDI
                   (nØkter  zaı¡zen¡ neumo§åuj¡ souŸasnou obsluhu)


Funkce 9: Start operace pıehr v n¡ nebo z znamu
--------
Pıed touto operac¡ mus¡ pıedch zet funkce pro pı¡pravu k z znamu/pıehr v n¡.

VíSTUP:  AX = 0 operace OK
              -301 ovladaŸ VMP nen¡ otevıen
              -302 ovladaŸ AAPI (AUDIO) nen¡ otevıen
              -307 prob¡h  ji§ pıehr v n¡ nebo z znam AUDIO nebo obsluha MIDI
                   (nØkter  zaı¡zen¡ neumo§åuj¡ souŸasnou obsluhu)
              -308 nebyla nastavena § dn  operace pıehr v n¡/z znamu

Funkce 10: Stop operace pıehr v n¡ nebo z znamu
---------
VíSTUP:  AX = 0 operace OK
              -301 ovladaŸ VMP nen¡ otevıen
              -302 ovladaŸ AAPI (AUDIO) nen¡ otevıen
              -308 nebyla nastavena § dn  operace pıehr v n¡/z znamu

Funkce 11: PokraŸov n¡ v pıehr v n¡ MIDI souboru (po zastaven¡ PAUSE)
---------
VíSTUP:  AX = 0 operace OK
              -301 ovladaŸ VMP nen¡ otevıen
              -307 prob¡h  ji§ pıehr v n¡ nebo z znam AUDIO nebo obsluha MIDI
                   (nØkter  zaı¡zen¡ neumo§åuj¡ souŸasnou obsluhu)
              -309 ovladaŸ MIDI nen¡ otevıen
              -311 data souboru MIDI byla od otevıen¡ zniŸena
              -312 prob¡h  ji§ pıehr v n¡ MIDI souboru
              -313 nen¡ otevıen soubor MIDI


Funkce 13: Poskytnut¡ stavu VMP
---------
VSTUP:   ES:SI = buffer 10 bajt… k naŸten¡ informac¡ o stavu VMP
VíSTUP:            0: (1) stav ovladaŸe VMP
                            0 = ovladaŸ VMP nen¡ otevıen
                            1 = ovladaŸ VMP otevıen
                   1: (1) stav ovladaŸe VAPI
                            0 = ovladaŸ MIDI nepı¡tomen nebo nen¡ otevıen
                            1 = ovladaŸ MIDI otevıen
                            2 = hudebn¡ soubor MIDI otevıen k pıehr v n¡
                            4 = prob¡h  pıehr v n¡ hudebn¡ho souboru MIDI
                   2: (1) stav ovladaŸe AAPI
                            0 = ovladaŸ AUDIO nen¡ otevıen
                            1 = ovladaŸ AUDIO otevıen
                            2 = zvukovì soubor AUDIO otevıen k pıehr v n¡
                            3 = zvukovì soubor AUDIO otevıen k z znamu (RECORD)
                            4 = prob¡h  pıehr v n¡ zvukov‚ho souboru AUDIO
                            5 = prob¡h  z znam do zvukov‚ho souboru AUDIO
                   3: (1) stav ovladaŸe CD (MSCDEX)
                            0 = ovladaŸ MSCDEX nepı¡tomen nebo nen¡ otevıen
                            1 = ovladaŸ MSCDEX otevıen
                            2 = v jednotce CD je zasunut platnì CD disk
                            3 = disk CD je pozastaven, m…§e pokraŸovat (PAUSE)
                            4 = prob¡h  pıehr v n¡ disku CD
                   4: (1) verze VMP - vyçç¡ bajt (vlevo od desetinn‚ teŸky)
                   5: (1) verze VMP - ni§ç¡ bajt (vpravo od desetinn‚ teŸky)
                               (napı. 1 a 6 -> verze 1.06)
                   6: (1) chyba digit ln¡ho zvuku
                            0 = digit ln¡ zvuk ukonŸen norm lnØ
                            1 = ukonŸen¡ z d…vodu zaplnØn¡ disku (RECORD)
                            2 = ukonŸen¡ z d…vodu pı¡liç pomal‚ho disku
                            3 = ukonŸen¡ z d…vodu omezen¡ form tu souboru
                            4 = ukonŸen¡ z d…vodu diskov‚ chyby DOS
                   7: (1) typ ovladaŸe
                            0 = VMP pou§¡vaj¡c¡ VAPI a/nebo AAPI
                            1 = VMP pou§¡vaj¡c¡ MMSYSTEM.DLL


Funkce 16: PıidØlen¡ rezidentn¡ pamØti pro pıehr v n¡ MODI souboru
----------
Pıi  startu  VMP  s  volbou /clp: je pıidØlena pamØœ k pıehr v n¡ soubor… MIDI.
Tato  funkce  testuje,  zda  je  dost rezidentn¡ pamØti k pıehr n¡ souboru MIDI
(napı. pokud chce bìt aplikace ukonŸena a ponechat soubor pıehr vat v pozad¡).

VSTUP:   BP = velikost souboru MIDI v KB
VíSTUP:  AX = segment adresy bufferu, kam lze soubor MIDI naŸ¡st (offset = 0)
         AX = 0 -> soubor je pı¡liç velkì, nevejde se do bufferu VMP
                   (aplikace mus¡ vytvoıit sv…j vlastn¡ buffer k naŸten¡ MIDI)


Funkce 17: Test pı¡tomnosti VMP
---------
Tato  funkce  by  mØla  bìt  vol na  dı¡ve  pıed  vol n¡m jak‚koliv funkce VMP.
Nejdı¡ve vçak je nutno otestovat platnost adresy INT 7Fh (zda nen¡ = 0).

VíSTUP:  AX=0 ovladaŸ VMP je nainstalov n


Funkce 18: Obsluha pıeruçen¡ hodin
---------
Tato  funkce  je  vol na,  pokud  jsou hodiny INT 08h aplikac¡ pıedefinov ny na
vyçç¡  rychlost. Jako parametr je VMP pıed na adresa obsluhy pıeruçen¡ od hodin
aplikace. VMP pıed v  na tuto adresu obsluhu pıi pı¡chodu ka§d‚ho pıeruçen¡ INT
08h.

VSTUP:   ES:SI = adresa vlastn¡ obsluhy INT 08h (kter  m  bìt z VMP vol na)
VíSTUP:  CY = chyba operace
         NC = operace OK
         AX = 0 operace OK
              -301 VMP neotevıen
              -309 MIDI ovladaŸ neotevıen

   v z sobn¡ku slovo = poŸet [ms] prodlevy od posledn¡ho vol n¡ obsluhy hodin

VMP  si  pıed  vol n¡m  obsluhy  uschov  vçechny registry - je mo§n‚ je vçechny
modifikovat. Registr SS je nedefinov n. Obsluha nesm¡ volat slu§by DOS.


Funkce 24: Pı¡prava digit ln¡ho AUDIO souboru k pıehr v n¡ Ÿ sti souboru
--------
VSTUP:   ES:SI = ukazatel FAR na popisovaŸ rozsahu
                   0: (4) ukazatel FAR na jm‚no souboru ASCIIZ
                   4: (4) poŸ teŸn¡ pozice v souboru (offset)
                   8: (4) koncov  pozice v souboru (offset)
         DX:CX = form t z znamu (ukazatel FAR na popisovaŸ struktury)
                   0: (4) vzorkovac¡ kmitoŸet v [Hz]
                   4: (2) d‚lka vzorku (poŸet bit…: 8 nebo 16)
                   6: (2) 0=MONO, 1=STEREO
                   8: (2) form t souboru
                             0 = VOC (Sound Blaster)
                             1 = WAV (Microsoft)
                             2 = RAW
                             3 = VOY (Voyetra)
                  10: (2) kompresn¡ algoritmus
                             0 = nen¡ komprese (line rn¡ PCM 8/12/16 bit…)
                             1 = 4-bitov  komprese VOC (Sound Blaster)
                             2 = 2.6-bitov  komprese VOC (Sound Blaster)
                             3 = 2-bitov  komprese VOC (Sound Blaster)
                             4 = 4-bitov  komprese (z 12 bit…) ADPCM (OKI)
                             5 = 4-bitov  komprese (z 12 bit…) ADPCM (CCITT)
                             8 = 8-bitov  komprese (z 12 bit…) ?LAW
                   12: (2*3) rezervov no

VíSTUP:  AX = 0 operace OK
              -301 ovladaŸ VMP nen¡ otevıen
              -302 ovladaŸ AAPI (AUDIO) nen¡ otevıen
              -303 chyba alokace DMA bufferu
              -304 form t souboru nen¡ podporov n
              -305 form t dat souboru nen¡ podporov n
              -306 nelze otevı¡t soubor pro z znam AUDIO
              -307 prob¡h  ji§ pıehr v n¡ nebo z znam AUDIO nebo obsluha MIDI
                   (nØkter  zaı¡zen¡ neumo§åuj¡ souŸasnou obsluhu)

Pokud  soubor obsahuje informace o form tu dat (VOC, WAV a VOY), jsou informace
z  popisovaŸe  form tu  ignorov ny,  informace  budou doplnØny podle skuteŸn‚ho
obsahu souboru. Pro soubor RAW je nutno tyto informace nastavit.


VF_VU_ENABLE                  equ  25  ;

Funkce 25: Pı¡stup k hodnot m £rovn¡ sign l… bØhem AUDIO operace
---------
VíSTUP:  DX:AX = ukazatel FAR na buffer indik tor… £rovn¡ (DX=0 chyba)
                   0: (2) funkce povolena
                   2: (2) lev  çpiŸka
                   4: (2) lev  £roveå
                   6: (2) prav  çpiŸka
                   8: (2) prav  £roveå
         DX = 0 -> chyba
      -> AX = -301 ovladaŸ VMP nen¡ otevıen
              -302 ovladaŸ AAPI (AUDIO) nen¡ otevıen
              -308 neprob¡h  § dn  operace pıehr v n¡/z znamu
              -318 komprimovanì soubor

Hodnoty  indik tor… jsou v rozsahu 0 a§ 127 pro 8-bitov‚ karty a 0 a§ 32767 pro
16-bitov‚ karty. érovnØ sign l… nelze Ÿ¡st pro komprimovanì soubor.


Funkce 26: Prov dØn¡ funkc¡ VMP s obsluhou DOS
---------
Tato  funkce  m  zabr nit pıeruçen¡ AUDIO operace z d…vodu pı¡liçn‚ zat¡§enosti
DOS  (napı.  se  naŸ¡t   velkì grafickì soubor nebo se Ÿasto testuje kl vesnice
pomoc¡ DOS). BØhem t‚to funkce m…§e prov dØt VMP po§adovan‚ operace s DOS.


Funkce 27: Nastaven¡ glob ln¡ch promØnnìch k pıehr v n¡ MIDI souboru
---------
VSTUP:   BP = glob ln¡ prommØnn , kter  m  bìt nastavena
         CX = hodnota k nastaven¡ glob ln¡ promØnn‚
VíSTUP:  ş



Funkce VMP pro Assembler:
------------------------


VF_SEND_MIDI_DATA             equ  12  ;
VF_SMPTE_ON                   equ  14  ;
VF_SMPTE_OFF                  equ  15  ;
VF_RESERVED1                  equ  19  ;
VF_RESERVED2                  equ  20  ;

VF_CD_CONTROL                 equ  21  ;
VF_SET_MIXER                  equ  22  ;

VF_GET_MIXER                  equ  23  ;
VF_SET_PLAY                   equ  28  ;
VF_SET_REC                    equ  29  ;


Funkce VMP pro C:
----------------
vmp_open_driver()            /* otevıen¡ ovladaŸe VMP - mus¡ bìt vol no      */
                             /* jednou pıed vol n¡m jak‚koliv jin‚ funkce    */


vmp_driver_present()         /* test instalace VMP -> 0 je nainstalov n OK   */


vmp_timer_callback()         /* zpØtn‚ vol n¡ pıeruçen¡ hodin                */
vmp_dos_yield()              /* n hrada funkce DOS dotazu na Ÿas             */



N vratov‚ k¢dy funkc¡ VMP (v registru AX):
------------------------------------------
VMP_OK                        equ  0    ; operace OK
VMP_OPEN                      equ  -300 ; ovladaŸ VMP je ji§ otevıen
VMP_NOPEN                     equ  -301 ; ovladaŸ VMP nen¡ otevıen
AA_NOPEN                      equ  -302 ; ovladaŸ AAPI nen¡ otevıen
AA_MEM_ERR                    equ  -303 
VMP_FFORMAT                   equ  -304 ; form t souboru nen¡ VMP podporov n
VMP_DFORMAT                   equ  -305 ; form t dat nen¡ VMP podporov n
VMP_DISKERR                   equ  -306 
VMP_BUSY                      equ  -307 
VMP_NSET                      equ  -308 
VA_NOPEN                      equ  -309 
VMP_MFILE_OPEN                equ  -310 
VMP_MFILE                     equ  -311 
VMP_MFILE_BUSY                equ  -312 
VMP_MFILE_NOPEN               equ  -313 
VMP_MEM_ERR                   equ  -314 
VMP_CDPOS                     equ  -315 
VMP_NOCD                      equ  -316 
VMP_BAD_FUNC                  equ  -317 
VMP_NIMP                      equ  -318
